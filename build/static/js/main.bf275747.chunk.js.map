{"version":3,"sources":["config/constants/types.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/farms3/fetchFarms3.ts","state/farms3/fetchFarmUser3.ts","state/farms3/index.ts","state/teams/helpers.ts","config/constants/teams.ts","config/constants/campaigns.ts","hooks/useRefresh.ts","utils/makeBatchRequest.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","utils/getRpcUrl.ts","utils/collectibles.ts","state/block/index.ts","state/achievements/helpers.ts","state/achievements/index.ts","contexts/RefreshContext.tsx","state/collectibles/index.ts","state/teams/index.tsx","state/prices/index.ts","config/constants/contracts.ts","utils/achievements.ts","utils/formatBalance.ts","components/layout/Page.tsx","contexts/Localisation/translationsContext.ts","config/constants/tokens.ts","config/constants/ifo.ts","components/layout/Container.tsx","utils/addressHelpers.ts","utils/multicall.ts","components/PageLoader.tsx","contexts/BlockContext.tsx","config/constants/pools.ts","config/constants/farms.ts","utils/contractHelpers.ts","utils/web3.ts","state/index.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms3.ts","config/constants/nfts.ts","state/hooks.ts","state/actions.ts","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","App.tsx","Providers.tsx","index.tsx","state/toasts/index.ts"],"names":["PoolIds","QuoteToken","PoolCategory","NftType","fetchFarms","a","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","CHAIN_ID","calls","address","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","BigNumber","div","pow","tokenPriceVsQuote","tokenSymbol","BUSD","quoteTokenSymbol","lpTotalInQuoteToken","times","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","pid","info","totalAllocPoint","dballPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","unstakingFeeBP","data","fetchFarmUserAllowances","account","masterChefAdress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarmsPublicDataAsync","dispatch","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","allowance","fetchFarms3","farms3Config","farm3Config","getMasterChef3Address","masterchef3ABI","senzuPerBlock","fetchFarm3UserAllowances","masterChef3Adress","fetchFarm3UserTokenBalances","fetchFarm3UserStakedBalances","fetchFarm3UserEarnings","farms3Slice","setFarms3PublicData","setFarm3UserData","fetchFarms3PublicDataAsync","farms3","fetchFarm3UserDataAsync","userFarm3Allowances","userFarm3TokenBalances","userStakedBalances3","userFarm3Earnings","farm3Allowance","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","id","merge","users","points","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","makeBatchRequest","teamData","onChainTeamData","Number","teams","description","images","lg","md","sm","alt","ipfs","background","textColor","campaigns","type","title","badge","campaignMap","Map","campaign","set","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","batch","getWeb3","BatchRequest","promises","resolve","reject","add","request","err","result","execute","transformProfileResponse","profileResponse","userId","nftAddress","tokenId","isActive","profileApi","process","REACT_APP_API_PROFILE","getUsername","fetch","response","ok","json","username","getProfile","hasRegistered","profile","getUserProfile","getNftByTokenId","nft","Cookies","avatar","domain","secure","expires","isInitialized","isLoading","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","profileClear","addPoints","fetchProfile","nodes","getNodeUrl","randomIndex","random","length","getIdentifierKeyFromAddress","nftSource","Object","values","nftSources","nftSourceEntry","getAddress","identifierKey","getAddressByType","getTokenUriData","contract","getErc721Contract","tokenURI","tokenUri","uriDataResponse","uriData","console","error","Nfts","identifier","blockSlice","currentBlock","initialBlock","setBlock","profileSubgraphApi","REACT_APP_SUBGRAPH_PROFILE","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","campaignId","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","kebabCase","toastTypes","DANGER","React","createContext","RefreshContextProvider","children","useState","setSlow","setFast","useEffect","interval","setInterval","prev","clearInterval","Provider","value","fetchWalletNfts","createAsyncThunk","nftSourcePromises","keys","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","extraReducers","builder","addCase","pending","fulfilled","association","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeams","fetchPrices","updated_at","token","parseFloat","price","pricesSlice","lastUpdated","cake","56","97","masterChef","cake3","masterChef3","wbnb","lottery","lotteryNFT","mulltiCall","busd","usdt","cake2","senzu","pointCenterIfo","claimRefund","pancakeProfile","pancakeRabbits","bunnyFactory","bunnySpecial","easterNft","tradingCompetition","fallback","getClaimableIfoData","ifoCampaigns","ifosList","filter","ifoItem","undefined","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","claimStatus","ifos","claimableIfoData","claimableIfoDataItem","has","ifoCampaign","getBalanceNumber","balance","decimals","displayBalance","dividedBy","getFullDisplayBalance","toFixed","formatNumber","number","minPrecision","maxPrecision","options","minimumFractionDigits","maximumFractionDigits","toLocaleString","Page","styled","Container","theme","mediaQueries","defaultTranslationState","translations","setTranslations","TranslationsContext","tokens","bnb","symbol","projectLink","txl","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","btc","aof","gen","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","lpSymbol","releaseBlockNumber","articleUrl","tokenOfferingPrice","isV1","chainId","getCakeAddress","addresses","getPointCenterIfoAddress","getCake3Address","getMulticallAddress","getLotteryAddress","getLotteryTicketAddress","getClaimRefundAddress","getPancakeProfileAddress","getBunnyFactoryAddress","abi","web3","multi","Contract","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","Wrapper","PageLoader","BlockContext","BlockContextProvider","previousBlock","useRef","block","getBlockNumber","blockNumber","current","pools","sousId","tokenName","stakingTokenName","CAKE","stakingTokenAddress","contractAddress","rewardTokenAddress","poolCategory","CORE","harvest","tokenPerBlock","sortOrder","isFinished","burnFee","risk","contracts","BNB","USDT","getContract","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getClaimRefundContract","claimRefundAbi","profileABI","erc721Abi","getBunnyFactoryContract","bunnyFactoryAbi","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","contractOptions","store","configureStore","devTools","reducer","farmsReducer","farms3Reducer","toasts","toastsReducer","poolsReducer","prices","pricesReducer","profileReducer","teamsReducer","achievementsReducer","blockReducer","collectibles","collectiblesReducer","useAppDispatch","useDispatch","fetchPoolsBlockLimits","cakePools","poolsConfig","sousChefABI","cakePool","cakeStarts","cakeEnds","poolConfig","startBlock","endBlock","fetchPoolsTotalStaking","cakeABI","cakePoolsTotalStaked","p","totalStaked","nonBnbPools","bnbPools","fetchPoolsAllowance","allowances","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","cakeUserInfo","amount","fetchUserPendingRewards","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsPublicDataAsync","blockLimits","totalStakings","liveData","blockLimit","totalStaking","fetchPoolsUserDataAsync","stakingTokenBalances","stakedBalances","pendingRewards","stakingTokenBalance","pendingReward","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","PANCAKE","MIXIE","variationId","video","webm","mp4","blur","ZERO","useFetchPublicData","useFarms","useSelector","useFarmFromPid","useFarmUser","useFarms3","useFarm3FromPid","useFarm3User","farm3","usePools","usePriceBnbBusd","usePriceCakeBusd","useTotalValue","bnbPrice","senzuPrice","usePrice3CakeBusd","cake2Price","useMemo","cakePrice","useWallet","totalValue","farmsTotalValue","val","SENZU","CAKE2","plus","poolsTotalValue","poolValue","totalSaltStaked","usePrice3BnbBusd","useTotalValue3","useProfile","hasProfile","useToast","toast","pushToast","toastError","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","remove","removeToast","clear","clearToast","useBlock","useLpTokenPrice","tokenPriceInUsd","useGetApiPrice","useAchievements","useFetchAchievements","useGetCollectibles","identifiers","tokenIds","nftsInWallet","includes","useTeams","useFetchProfile","useFetchPriceList","GlobalStyle","createGlobalStyle","colors","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","REACT_APP_CROWDIN_APIKEY","storedLangCode","localStorage","getItem","storedLang","getStoredLang","then","r","translationApiResponse","catch","e","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","props","connect","reset","cakePriceUsd","cakePrice2Usd","login","logout","currentLang","langs","setLang","links","priceLink","priceLink2","Home","lazy","Farms","Home3","Farms3","Lottery","Pools","Ifos","NotFound","Nft","Gaming","Roadmap","Whitepaper","Profile","EXPONENTIAL_AT","DECIMAL_PLACES","App","window","Global","path","exact","tokenMode","to","component","memo","Providers","log","rpcUrl","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById","toastsSlice","toastIndex","splice","unshift"],"mappings":"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","file":"static/js/main.bf275747.chunk.js","sourcesContent":["export interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  isV1: boolean\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'USDT' = 'USDT',\n  'CAKE2' = 'CAKE2',\n  'SENZU' = 'SENZU',\n  'BDOGS' = 'BDOGS',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  token?: Token\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface Farm3Config {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: Address\n  contractAddress: Address\n  rewardTokenAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  burnFee: number\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TranslatableText =\n  | string\n  | {\n  id: number\n  fallback: string\n  data?: {\n    [key: string]: string | number\n  }\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n      if(farmConfig.isTokenOnly){\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint, dballPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'dballPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        unstakingFeeBP: info.unstakingFeeBP,\n        dballPerBlock: new BigNumber(dballPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingEgg',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchef3ABI from 'config/abi/masterchef3.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChef3Address } from 'utils/addressHelpers'\nimport farms3Config from 'config/constants/farms3'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms3 = async () => {\n  const data = await Promise.all(\n    farms3Config.map(async (farm3Config) => {\n      const lpAdress = farm3Config.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farm3Config.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farm3Config.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farm3Config.isTokenOnly ? farm3Config.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChef3Address()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farm3Config.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farm3Config.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n      if(farm3Config.isTokenOnly){\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farm3Config.tokenSymbol === QuoteToken.BUSD && farm3Config.quoteTokenSymbol === QuoteToken.BUSD){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint, senzuPerBlock] = await multicall(masterchef3ABI, [\n        {\n          address: getMasterChef3Address(),\n          name: 'poolInfo',\n          params: [farm3Config.pid],\n        },\n        {\n          address: getMasterChef3Address(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChef3Address(),\n          name: 'senzuPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farm3Config,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        senzuPerBlock: new BigNumber(senzuPerBlock).toNumber(),\n      }\n      console.log(\n        farm3Config,\n        tokenAmount,\n        lpTotalInQuoteToken,\n        tokenPriceVsQuote,\n        poolWeight,\n        senzuPerBlock,\n      )\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms3\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchef3ABI from 'config/abi/masterchef3.json'\nimport multicall from 'utils/multicall'\nimport farms3Config from 'config/constants/farms3'\nimport { getMasterChef3Address } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarm3UserAllowances = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChef3Adress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarm3UserTokenBalances = async (account: string) => {\n  const calls = farms3Config.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarm3UserStakedBalances = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    return {\n      address: masterChef3Adress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchef3ABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarm3UserEarnings = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    return {\n      address: masterChef3Adress,\n      name: 'pendingEgg',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchef3ABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farms3Config from 'config/constants/farms3'\nimport fetchFarms3 from './fetchFarms3'\nimport {\n  fetchFarm3UserEarnings,\n  fetchFarm3UserAllowances,\n  fetchFarm3UserTokenBalances,\n  fetchFarm3UserStakedBalances,\n} from './fetchFarmUser3'\nimport { Farms3State, Farm3 } from '../types'\n\nconst initialState: Farms3State = { data: [...farms3Config] }\n\nexport const farms3Slice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarms3PublicData: (state, action) => {\n      const liveFarmsData: Farm3[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarm3UserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarms3PublicData, setFarm3UserData } = farms3Slice.actions\n\n// Thunks\nexport const fetchFarms3PublicDataAsync = () => async (dispatch) => {\n  const farms3 = await fetchFarms3()\n  dispatch(setFarms3PublicData(farms3))\n}\nexport const fetchFarm3UserDataAsync = (account) => async (dispatch) => {\n  const userFarm3Allowances = await fetchFarm3UserAllowances(account)\n  const userFarm3TokenBalances = await fetchFarm3UserTokenBalances(account)\n  const userStakedBalances3 = await fetchFarm3UserStakedBalances(account)\n  const userFarm3Earnings = await fetchFarm3UserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarm3Allowances.map((farm3Allowance, index) => {\n    return {\n      index,\n      allowance: userFarm3Allowances[index],\n      tokenBalance: userFarm3TokenBalances[index],\n      stakedBalance: userStakedBalances3[index],\n      earnings: userFarm3Earnings[index],\n    }\n  })\n\n  dispatch(setFarm3UserData({ arrayOfUserDataObjects }))\n}\n\nexport default farms3Slice.reducer\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { getWeb3 } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const {\n  profileFetchStart,\n  profileFetchSucceeded,\n  profileFetchFailed,\n  profileClear,\n  addPoints,\n} = profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  // if (tokenUri.startsWith('ipfs://')) {\n  //   return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  // }\n  \n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    // if (!uriDataResponse.ok) {\n    //   return null\n    // }\n    \n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n  \n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  // if (!uriData) {\n  //   return null\n  // }\n\n  // if (!identifierKey) {\n  //   return null\n  // }\n\n  // if (!uriData[identifierKey]) {\n  //   return null\n  // }\n\n  \n  // return Nfts.find((nft) => {\n  //   return uriData[identifierKey].includes(nft.identifier)\n  // })\n\n  return Nfts.find((nft) => {\n    return nft.identifier === 'Dragon'\n  })\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\nimport request, { gql } from 'graphql-request/dist'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\nconst profileSubgraphApi = process.env.REACT_APP_SUBGRAPH_PROFILE\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      profileSubgraphApi,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { toastTypes } from '@pancakeswap-libs/uikit'\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { kebabCase } from 'lodash'\nimport { push } from 'state/toasts'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n    const title = 'Error fetching achievements'\n    dispatch(push({ id: kebabCase(title), type: toastTypes.DANGER, title }))\n  }\n}\n\nexport default achievementSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/tokens')\n  const data = (await response.json()) as PriceApiResponse\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","export default {\n  cake: {\n    56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    97: '',\n  },\n  masterChef: {\n    56: '0x8cf7044DDedbE502892B120aAf8692FeCFb71420',\n    97: '',\n  },\n  cake3: {\n    56: '0xcBA1813Ede683333020cedea7C3b63FbaC28e78e',\n    97: '',\n  },\n  masterChef3: {\n    56: '0x48F4eC8AD1cb16fB45f75733BFF41b4BE7f49B00',\n    97: '',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '',\n    \n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '',\n  },\n  usdt: {\n    56: '0x55d398326f99059ff775485246999027b3197955',\n    97: '',\n  },\n  cake2: {\n    56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    97: '',\n  },\n  senzu: {\n    56: '0xcba1813ede683333020cedea7c3b63fbac28e78e',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pancakeProfile: {\n    56: '0x14591d9DC331073624eC5E9b6eF6E83f6BaDd908',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0x3bfc26b55A213276a81791F950fDadB561f20e2a',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0x8D1F7209E0a073c04Edb4a97Aac6d97593A50848',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n}\n","import { Campaign, TranslatableText } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `IFO Shopper: ${campaign.title}`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        id: 999,\n        fallback: `Committed more than $5 worth of LP in the ${campaign.title} IFO`,\n        data: {\n          name: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligble to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0x7a1da9f49224ef98389b071b8a3294d1cc5e3e6a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  btc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  aof: {\n    symbol: 'AOF',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  gen: {\n    symbol: 'GEN',\n    address: {\n      56: '0xFC26907a337aD4A08405CC2049064D04b42B3d02',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.btcst.finance/',\n  }\n}\n\nexport default tokens\n","import farms from './farms'\r\nimport tokens from './tokens'\r\nimport { Ifo, Token } from './types'\r\n\r\nconst cakeBnbLpToken: Token = {\r\n  symbol: farms[1].lpSymbol,\r\n  address: farms[1].lpAddresses,\r\n  decimals: 18,\r\n}\r\n\r\nconst ifos: Ifo[] = [\r\n  {\r\n    id: 'gen',\r\n    address: '0x9A9E44D81722dcF29E3214F2D070f52F10E2f1f8',\r\n    isActive: true,\r\n    name: 'test of Farming (GEN)',\r\n    poolBasic: {\r\n      saleAmount: '40,000 GEN',\r\n      raiseAmount: '$750,000',\r\n      cakeToBurn: '$375,000',\r\n      distributionRatio: 0.5,\r\n    },\r\n    poolUnlimited: {\r\n      saleAmount: '40,000 GEN',\r\n      raiseAmount: '$1,750,000',\r\n      cakeToBurn: '$875,000',\r\n      distributionRatio: 0.5,\r\n    },\r\n    currency: cakeBnbLpToken,\r\n    token: tokens.gen,\r\n    releaseBlockNumber: 7175800,\r\n    campaignId: '511090001',\r\n    articleUrl: 'https://dragonballfinance.org/',\r\n    tokenOfferingPrice: 0.25,\r\n    isV1: false,\r\n  }\r\n]\r\n\r\nexport default ifos\r\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 992px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getCake3Address = () => {\n  return addresses.cake3[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMasterChef3Address = () => {\n  return addresses.masterChef3[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { PoolCategory, PoolConfig, QuoteToken } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  // {\r\n  //   sousId: 0,\r\n  //   tokenName: 'CAKE',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n  //     56: '0xfC2BA5B6Ec7A5Fe68546fC8fB55A915b5CA5E261', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n  //     56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82', // CAKE\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.00295',\r\n  //   sortOrder: 1,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 1,\r\n  //   tokenName: 'WBNB',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x8eAFF0bF4C7e8a9aA3cFe13e2B4533D23251fdaF', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had WBNB\r\n  //     56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', // WBNB\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.0001736111111',\r\n  //   sortOrder: 2,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 2,\r\n  //   tokenName: 'SLME',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xFC4A74E326F34dA2954F8B0De39A759e14B5472f', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had SLIME\r\n  //     56: '0x4fcfa6cc8914ab455b5b33df916d90bfe70b6ab1', // SLIME\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://slime.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.00496031746',\r\n  //   sortOrder: 3,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 3,\r\n  //   tokenName: 'BUSD',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x1495989d4592c7e94fe1E9448A172894f179956E', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.694',\r\n  //   sortOrder: 4,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 4,\r\n  //   tokenName: 'EGG',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x2974b4aECbEc5FFEA565E7Ef47395429f44D0c81', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6', // EGG\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://goosedefi.com',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.002624734287',\r\n  //   sortOrder: 5,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 5,\r\n  //   tokenName: 'BREW',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x88d2fb892c9577Ecb542EF6860AF13524e668b02', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0x790be81c3ca0e53974be2688cdb954732c9862e1', // BREW\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://cafeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.005006944444',\r\n  //   sortOrder: 6,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 6,\r\n  //   tokenName: 'BUSD',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x36e3BC1E58B409160A191784E21327ACA6AcBc5C', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.3863194444',\r\n  //   sortOrder: 7,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 5,\r\n  // },\r\n  // {\r\n  //   sousId: 7,\r\n  //   tokenName: 'BTCB',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xe2f75e1e327331c41a206D187f4D08F75FA9bF17', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c', // BTCB\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.000006944444444',\r\n  //   sortOrder: 8,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 5,\r\n  // },\r\n  // {\r\n  //   sousId: 8,\r\n  //   tokenName: 'CTC',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0xa0286abcdf5ac136cdbea4fecea0f83c093e5107',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xFD8fa2A7a5DebB757C1CDe08B113DF395A774160', // test ctc\r\n  //     56: '0x85f27A63cFb4Dc5a36d7Eb5EF8620D343817e156', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xAA8Af527961533Ba61CeF965ED750060d459a918', // FAKECTC\r\n  //     56: '0xb7F80a74aaA4FD30a3EE7C03FDe3DC88e6002C12', // CTC\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://www.cryptocoinctc.org/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.8680538',\r\n  //   sortOrder: 9,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 8,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 9,\r\n  //   tokenName: 'BUSD',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xc44E823f72f6d038BC255cD82A48B3942B00c2Ef', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.1736111111',\r\n  //   sortOrder: 10,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 10,\r\n  // },\r\n  // {\r\n  //   sousId: 10,\r\n  //   tokenName: 'CTC',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0xa0286abcdf5ac136cdbea4fecea0f83c093e5107',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xFD8fa2A7a5DebB757C1CDe08B113DF395A774160', // test ctc\r\n  //     56: '0xf1eFc9e49EB1805AEd72917a0479bddFB5560d32', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xAA8Af527961533Ba61CeF965ED750060d459a918', // FAKECTC\r\n  //     56: '0xb7F80a74aaA4FD30a3EE7C03FDe3DC88e6002C12', // CTC\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://www.cryptocoinctc.org/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.8680538',\r\n  //   sortOrder: 11,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 8,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 11,\r\n  //   tokenName: 'CAKE',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n  //     56: '0x0A30d83b4396F34b25EB1956a79FabB5d3BaB931', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n  //     56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82', // CAKE\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.003681388889',\r\n  //   sortOrder: 12,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 15,\r\n  // },\r\n  // {\r\n  //   sousId: 12,\r\n  //   tokenName: 'WBNB',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xA5e2C1ABc73F411180e0a2371a3A546B402A96F9', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had WBNB\r\n  //     56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', // WBNB\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.00005541666667',\r\n  //   sortOrder: 13,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 15,\r\n  // },\r\n  // {\r\n  //   sousId: 13,\r\n  //   tokenName: 'BLUE',\r\n  //   stakingTokenName: QuoteToken.SALTBLUE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0xc7953f27b4b7049e41c3c10354e995870cb8e109', // CAKE-BLUE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xdF62141c12f54B17B7e6F158eD36629856E74C97', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had WBNB\r\n  //     56: '0x36C0556c2B15aED79F842675Ff030782738eF9e8', // BLUE\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://blueswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.005787037037',\r\n  //   sortOrder: 14,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 0,\r\n  // },\r\n  // {\r\n  //   sousId: 14,\r\n  //   tokenName: 'SLME',\r\n  //   stakingTokenName: QuoteToken.SALTSLME,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0xbea4674a61cccc6b735999511ba9a8ba3aa26a85', // CAKE-slime\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xD4A55D437Da5753da2f937518Fd797f5d2211E1c', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had SLIME\r\n  //     56: '0x4fcfa6cc8914ab455b5b33df916d90bfe70b6ab1', // SLIME\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://slime.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '.002899305556',\r\n  //   sortOrder: 15,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 30,\r\n  // },\r\n  // {\r\n  //   sousId: 15,\r\n  //   tokenName: 'BUSD',\r\n  //   stakingTokenName: QuoteToken.SALTBUSD,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x6596f770786915556C47E301cC8290aa14288d99', // CAKE-BUSD\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x94fcecEdBe1050d079c60b1EDeb1D4D16B3BF76C', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xe9e7cea3dedca5984780bafc599bd69add087d56', // BUSD\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://binance.com/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.01261865625',\r\n  //   sortOrder: 16,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 100,\r\n  // },\r\n  // {\r\n  //   sousId: 16,\r\n  //   tokenName: 'MOMO',\r\n  //   stakingTokenName: QuoteToken.SALTMOMO,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2e63a08ca1ab08a3f1eb0ca0d3f0a1a4278dfa8f', // CAKE-MOMO\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0xb72893D5ABFce5940F3f8F401eFCdb2A95E5f7c7', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0xafb2997fe9a99022e61c7e01b974e0e3d7704b02', // MOMO\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://momoprotocol.finance/#/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.01157407407',\r\n  //   sortOrder: 16,\r\n  //   isFinished: false,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 5,\r\n  // },\r\n  // {\r\n  //   sousId: 17,\r\n  //   tokenName: 'PALM',\r\n  //   stakingTokenName: QuoteToken.SALTPALM,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x34951e9ca4891b4264a6cb9850e0b85a850414e5', // CAKE-PALM\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n  //     56: '0x42187c7eada603198165c2B95EA237865036BEd1', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI\r\n  //     56: '0x9768E5b2d8e761905BC81Dfc554f9437A46CdCC6', // PALM\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://yieldbay.finance',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.00744047619',\r\n  //   sortOrder: 16,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 10,\r\n  // },\r\n  // {\r\n  //   sousId: 18,\r\n  //   tokenName: 'CAKE',\r\n  //   stakingTokenName: QuoteToken.CAKE,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n  //     56: '0x59f2B754944e78f849E03db39273da9251ADbF0E', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n  //     56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82', // CAKE\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   projectLink: 'https://pancakeswap.finance/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.001191340278',\r\n  //   sortOrder: 17,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 15,\r\n  // },\r\n  // {\r\n  //   sousId: 19,\r\n  //   tokenName: 'MCH',\r\n  //   stakingTokenName: QuoteToken.SALTMCH,\r\n  //   stakingTokenAddress: {\r\n  //     97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n  //     56: '0xf09a33f69c7f9a19f87c53469b52665ec4e1c97b', // CAKE-MCH\r\n  //   },\r\n  //   contractAddress: {\r\n  //     97: '0x9FcA113B2D4E64462229E107A8F4Aa7359D055F5',\r\n  //     56: '0x01c1e411D447e9d18D95C05408A7e765Ec308D48', // SmartChef\r\n  //   },\r\n  //   rewardTokenAddress: {\r\n  //     97: '0xed24fc36d5ee211ea25a80239fb8c4cfd80f12ee', // BUSD, didnt find CAKE\r\n  //     56: '0x46483f3a766ae2c0c811ff953ac3dc69a3a20968', // MCH\r\n  //   },\r\n  //   poolCategory: PoolCategory.COMMUNITY,\r\n  //   projectLink: 'https://magnifico-chef-git-main-chefmagnifico.vercel.app/',\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '0.0162037037',\r\n  //   sortOrder: 18,\r\n  //   isFinished: true,\r\n  //   tokenDecimals: 18,\r\n  //   burnFee: 10,\r\n  // },\r\n  {\r\n    sousId: 20,\r\n    tokenName: 'WBNB',\r\n    stakingTokenName: QuoteToken.CAKE,\r\n    stakingTokenAddress: {\r\n      97: '0x85582d24455caaf44fc4f914bdca2a6cb73e6681',\r\n      56: '0x2849b1aE7E04A3D9Bc288673A92477CF63F28aF4', // CAKE\r\n    },\r\n    contractAddress: {\r\n      97: '0xF08d05d91426A63aB35Ef7f4bBC6E8717B59e838',\r\n      56: '0x5AfBBc9c272578AC84Ced919613c14D392b9A8c0', // SmartChef\r\n    },\r\n    rewardTokenAddress: {\r\n      97: '0xec5dcb5dbf4b114c9d0f65bccab49ec54f6a0867', // DAI, didnt had WBNB\r\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c', // WBNB\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    projectLink: 'https://binance.com/',\r\n    harvest: true,\r\n    tokenPerBlock: '0.00003651736111',\r\n    sortOrder: 19,\r\n    isFinished: false,\r\n    tokenDecimals: 18,\r\n    burnFee: 20,\r\n  },\r\n]\r\n\r\nexport default pools\r\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'BDOGS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x55d06D963CDc4405E204FB1585b45b5E8e353719',\n    },\n    tokenSymbol: 'BDOGS',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'BDOGS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3330Bde1FfB5E358FCadfA266f98c95D7D5DC9B9',\n    },\n    tokenSymbol: 'BDOGS',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // {\n  //   pid: 29,\n  //   risk: 5,\n  //   lpSymbol: 'BDOGS-SENZU LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x7CA6751Ae5CB4676ace4c2AA0D039778642e2702',\n  //   },\n  //   tokenSymbol: 'BDOGS',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.SENZU,\n  //   quoteTokenAdresses: contracts.senzu,\n  // },\n  {\n    pid: 30,\n    risk: 5,\n    lpSymbol: 'BDOGS-USDT LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4a228A09B2ED4B9995b05F87bE60E7D4dCCf28C4',\n    },\n    tokenSymbol: 'BDOGS',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.USDT,\n    quoteTokenAdresses: contracts.usdt,\n  },\n  // {\n  //   pid: 31,\n  //   risk: 5,\n  //   lpSymbol: 'BDOGS-CAKE LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xeA28357967d1c80b86928DAE71609f1456CC9938',\n  //   },\n  //   tokenSymbol: 'BDOGS',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.CAKE2,\n  //   quoteTokenAdresses: contracts.cake2,\n  // },\n  {\n    pid: 3,\n    risk: 3,\n    lpSymbol: 'BNB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    tokenSymbol: 'BNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 4,\n    risk: 1,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd',\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 6,\n    risk: 2,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 7,\n    risk: 2,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x70d8929d04b60af4fb9b58713ebcf18765ade422',\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // {\n  //   pid: 5,\n  //   risk: 1,\n  //   lpSymbol: 'DAI-BUSD LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc',\n  //   },\n  //   tokenSymbol: 'DAI',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  {\n    pid: 8,\n    risk: 4,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\n    },\n    tokenSymbol: 'CAKE',\n    tokenAddresses: {\n      97: '',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 9,\n    risk: 5,\n    lpSymbol: 'EGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd1b59d11316e87c3a0a069e80f590ba35cd8d8d3',\n    },\n    tokenSymbol: 'EGG',\n    tokenAddresses: {\n      97: '',\n      56: '0xf952fc3ca7325cc27d15885d37117676d25bfda6',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // {\n  //   pid: 10,\n  //   risk: 5,\n  //   lpSymbol: 'ALPHA-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x4e0f3385d932f7179dee045369286ffa6b03d887',\n  //   },\n  //   tokenSymbol: 'ALPHA',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 11,\n  //   risk: 5,\n  //   lpSymbol: 'LINK-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n  //   },\n  //   tokenSymbol: 'LINK',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 12,\n  //   risk: 5,\n  //   lpSymbol: 'FIL-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n  //   },\n  //   tokenSymbol: 'FIL',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  // {\n  //   pid: 13,\n  //   risk: 5,\n  //   lpSymbol: 'XCUR-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x54482282df17f523fee3af5d10bcfba080cf2588',\n  //   },\n  //   tokenSymbol: 'XCUR',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x708c671aa997da536869b50b6c67fa0c32ce80b2',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  {\n    pid: 14,\n    risk: 5,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4269e7f43a63cea1ad7707be565a94a9189967e9',\n    },\n    tokenSymbol: 'UNI',\n    tokenAddresses: {\n      97: '',\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  // {\n  //   pid: 15,\n  //   risk: 5,\n  //   lpSymbol: 'LIT-BNB LP',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x60bb03d1010b99ceadd0dd209b64bc8bd83da161',\n  //   },\n  //   tokenSymbol: 'LIT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BNB,\n  //   quoteTokenAdresses: contracts.wbnb,\n  // },\n  {\n    pid: 2,\n    risk: 5,\n    isTokenOnly: true,\n    lpSymbol: 'BDOGS',\n    lpAddresses: {\n      97: '',\n      56: '0x55d06D963CDc4405E204FB1585b45b5E8e353719', // EGG-BUSD LP\n    },\n    tokenSymbol: 'BDOGS',\n    tokenAddresses: {\n      97: '',\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 16,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'BUSD',\n    lpAddresses: {\n      97: '',\n      56: '0x55d06D963CDc4405E204FB1585b45b5E8e353719', // EGG-BUSD LP (BUSD-BUSD will ignore)\n    },\n    tokenSymbol: 'BUSD',\n    tokenAddresses: {\n      97: '',\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 19,\n    risk: 3,\n    isTokenOnly: true,\n    lpSymbol: 'WBNB',\n    lpAddresses: {\n      97: '',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f', // BNB-BUSD LP\n    },\n    tokenSymbol: 'WBNB',\n    tokenAddresses: {\n      97: '',\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 17,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'USDT',\n    lpAddresses: {\n      97: '',\n      56: '0xc15fa3e22c912a276550f3e5fe3b0deb87b55acd', // USDT-BUSD LP\n    },\n    tokenSymbol: 'USDT',\n    tokenAddresses: {\n      97: '',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 20,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'BTCB',\n    lpAddresses: {\n      97: '',\n      56: '0xb8875e207ee8096a929d543c9981c9586992eacb', // BTCB-BUSD LP\n    },\n    tokenSymbol: 'BTCB',\n    tokenAddresses: {\n      97: '',\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 21,\n    risk: 2,\n    isTokenOnly: true,\n    lpSymbol: 'ETH',\n    lpAddresses: {\n      97: '',\n      56: '0xd9a0d1f5e02de2403f68bb71a15f8847a854b494', // ETH-BUSD LP\n    },\n    tokenSymbol: 'ETH',\n    tokenAddresses: {\n      97: '',\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  {\n    pid: 18,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'DAI',\n    lpAddresses: {\n      97: '',\n      56: '0x3ab77e40340ab084c3e23be8e5a6f7afed9d41dc', // DAI-BUSD LP\n    },\n    tokenSymbol: 'DAI',\n    tokenAddresses: {\n      97: '',\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  // {\n  //   pid: 22,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'ALPHA',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x5ba0d670ea3db79067ee6861b960f06d53712e18', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'ALPHA',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 23,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'LINK',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xe54a9d8412287cfc675cae18a0011483ef975f05', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'LINK',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 24,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'SALT',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x6596f770786915556c47e301cc8290aa14288d99', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'SALT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x2849b1ae7e04a3d9bc288673a92477cf63f28af4',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 25,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'FIL',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x8d2cc42acf64647dc21c43fb7fff3b8d0551194f', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'FIL',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  {\n    pid: 27,\n    risk: 1,\n    isTokenOnly: true,\n    lpSymbol: 'UNI',\n    lpAddresses: {\n      97: '',\n      56: '0x8f3624467993967f89c30c5f65d270b154b1b0fd', // DAI-BUSD LP\n    },\n    tokenSymbol: 'UNI',\n    tokenAddresses: {\n      97: '',\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n    },\n    quoteTokenSymbol: QuoteToken.BUSD,\n    quoteTokenAdresses: contracts.busd,\n  },\n  // {\n  //   pid: 28,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'LIT',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0x581c5de0cf860b740fe1fe96d973631bdd157a5b', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'LIT',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n  // {\n  //   pid: 32,\n  //   risk: 1,\n  //   isTokenOnly: true,\n  //   lpSymbol: 'SENZU',\n  //   lpAddresses: {\n  //     97: '',\n  //     56: '0xCb8e10cd31EBB2633425CD4f579221Ad126Da040', // DAI-BUSD LP\n  //   },\n  //   tokenSymbol: 'SENZU',\n  //   tokenAddresses: {\n  //     97: '',\n  //     56: '0xcba1813ede683333020cedea7c3b63fbac28e78e',\n  //   },\n  //   quoteTokenSymbol: QuoteToken.BUSD,\n  //   quoteTokenAdresses: contracts.busd,\n  // },\n]\n\nexport default farms","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport { getWeb3 } from 'utils/web3'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'// Addresses\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport {\n  getBunnyFactoryAddress,\n  getClaimRefundAddress,\n  getPancakeProfileAddress,\n  getPointCenterIfoAddress,\n} from 'utils/addressHelpers'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? getWeb3()\n  return new _web3.eth.Contract((abi as unknown) as AbiItem, address)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\nexport { getWeb3, getContract, httpProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport farms3Reducer from './farms3'\nimport poolsReducer from './pools'\nimport profileReducer from './profile'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport achievementsReducer from './achievements'\nimport teamsReducer from './teams'\nimport toastsReducer from './toasts'\nimport pricesReducer from './prices'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    farms3: farms3Reducer,\n    toasts: toastsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    achievements: achievementsReducer,\n    block: blockReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport multicall from 'utils/multicall'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const cakePools = poolsConfig\r\n  const cakeStarts = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((cakePool) => ({\r\n      address: cakePool.contractAddress[CHAIN_ID],\r\n      name: 'startBlock',\r\n    })),\r\n  )\r\n  const cakeEnds = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((cakePool) => ({\r\n      address: cakePool.contractAddress[CHAIN_ID],\r\n      name: 'bonusEndBlock',\r\n    })),\r\n  )\r\n\r\n  return [\r\n    ...cakePools.map((poolConfig, index) => {\r\n      const startBlock = cakeStarts[index]\r\n      const endBlock = cakeEnds[index]\r\n      return {\r\n        sousId: poolConfig.sousId,\r\n        startBlock: new BigNumber(startBlock).toJSON(),\r\n        endBlock: new BigNumber(endBlock).toJSON(),\r\n      }\r\n    }),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const cakePools = poolsConfig\r\n  const cakePoolsTotalStaked = await multicall(\r\n    cakeABI,\r\n    cakePools.map((cakePool) => ({\r\n      address: cakePool.stakingTokenAddress[CHAIN_ID],\r\n      name: 'balanceOf',\r\n      params: [cakePool.contractAddress[CHAIN_ID]],\r\n    })),\r\n  )\r\n\r\n  return [\r\n    ...cakePools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(cakePoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n","import pools from 'config/constants/pools'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport { QuoteToken } from 'config/constants/types'\r\nimport multicall from 'utils/multicall'\r\nimport { getWeb3 } from 'utils/web3'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = pools.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\r\nconst bnbPools = pools.filter((p) => p.stakingTokenName === QuoteToken.BNB)\r\nconst web3 = getWeb3()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress[CHAIN_ID],\r\n    name: 'allowance',\r\n    params: [account, p.contractAddress[CHAIN_ID]],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: p.stakingTokenAddress[CHAIN_ID],\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await web3.eth.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const cakePools = pools\r\n  const cakeUserInfo = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((p) => ({\r\n      address: p.contractAddress[CHAIN_ID],\r\n      name: 'userInfo',\r\n      params: [account],\r\n    })),\r\n  )\r\n\r\n  return {\r\n    ...pools.reduce(\r\n      (acc, pool, index) => ({\r\n        ...acc,\r\n        [pool.sousId]: new BigNumber(cakeUserInfo[index]?.amount._hex).toJSON(),\r\n      }),\r\n      {},\r\n    ),\r\n  }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const cakePools = pools\r\n  const res = await multicall(\r\n    sousChefABI,\r\n    cakePools.map((p) => ({\r\n      address: p.contractAddress[CHAIN_ID],\r\n      name: 'pendingReward',\r\n      params: [account],\r\n    })),\r\n  )\r\n\r\n  return {\r\n    ...pools.reduce(\r\n      (acc, pool, index) => ({\r\n        ...acc,\r\n        [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n      }),\r\n      {},\r\n    ),\r\n  }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { PoolsState, Pool } from '../types'\r\n\r\nconst initialState: PoolsState = { data: [...poolsConfig] }\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index]?.userData, [field]: value } }\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  const stakingTokenBalances = await fetchUserBalances(account)\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n  const userData = poolsConfig.map((pool) => ({\r\n    sousId: pool.sousId,\r\n    allowance: allowances[pool.sousId],\r\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n    stakedBalance: stakedBalances[pool.sousId],\r\n    pendingReward: pendingRewards[pool.sousId],\r\n  }))\r\n\r\n  dispatch(setPoolsUserData(userData))\r\n}\r\n\r\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\r\n  const allowances = await fetchPoolsAllowance(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n}\r\n\r\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const tokenBalances = await fetchUserBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\r\n  const stakedBalances = await fetchUserStakeBalances(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n}\r\n\r\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\r\n  const pendingRewards = await fetchUserPendingRewards(account)\r\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n}\r\n\r\nexport default PoolsSlice.reducer\r\n","import contracts from './contracts'\r\nimport { Farm3Config, QuoteToken } from './types'\r\n\r\nconst farms3: Farm3Config[] = [\r\n  {\r\n    pid: 0,\r\n    risk: 5,\r\n    lpSymbol: 'SENZU-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcb8e10cd31ebb2633425cd4f579221ad126da040',\r\n    },\r\n    tokenSymbol: 'SENZU',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xcBA1813Ede683333020cedea7C3b63FbaC28e78e',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 1,\r\n    risk: 5,\r\n    lpSymbol: 'SENZU-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xc6d0aebc95b7cfee7c0212cf5a1d0e00e9209fa4',\r\n    },\r\n    tokenSymbol: 'SENZU',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xcBA1813Ede683333020cedea7C3b63FbaC28e78e',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 3,\r\n    risk: 5,\r\n    lpSymbol: 'DBALL-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x55d06D963CDc4405E204FB1585b45b5E8e353719',\r\n    },\r\n    tokenSymbol: 'DBALL',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 4,\r\n    risk: 5,\r\n    lpSymbol: 'DBALL-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x3330Bde1FfB5E358FCadfA266f98c95D7D5DC9B9',\r\n    },\r\n    tokenSymbol: 'DBALL',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 7,\r\n    risk: 3,\r\n    lpSymbol: 'BNB-BUSD LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n    },\r\n    tokenSymbol: 'BNB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 6,\r\n    risk: 2,\r\n    lpSymbol: 'BTCB-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x7561eee90e24f3b348e1087a005f78b4c8453524',\r\n    },\r\n    tokenSymbol: 'BTCB',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 8,\r\n    risk: 4,\r\n    lpSymbol: 'CAKE-BNB LP',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xa527a61703d82139f8a06bc30097cc9caa2df5a6',\r\n    },\r\n    tokenSymbol: 'CAKE',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BNB,\r\n    quoteTokenAdresses: contracts.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'SENZU',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0xcb8e10cd31ebb2633425cd4f579221ad126da040', // VIKING-BUSD LP\r\n    },\r\n    tokenSymbol: 'SENZU',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xcBA1813Ede683333020cedea7C3b63FbaC28e78e',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n  {\r\n    pid: 5,\r\n    risk: 5,\r\n    isTokenOnly: true,\r\n    lpSymbol: 'DBALL',\r\n    lpAddresses: {\r\n      97: '',\r\n      56: '0x55d06d963cdc4405e204fb1585b45b5e8e353719', // VIKING-BUSD LP\r\n    },\r\n    tokenSymbol: 'DBALL',\r\n    tokenAddresses: {\r\n      97: '',\r\n      56: '0xceb2f5e9c7f2d3bcd12a7560d73c56f3396af3f9',\r\n    },\r\n    quoteTokenSymbol: QuoteToken.BUSD,\r\n    quoteTokenAdresses: contracts.busd,\r\n  },\r\n]\r\n\r\nexport default farms3\r\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0x3bfc26b55A213276a81791F950fDadB561f20e2a',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs:\n        'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm:\n        'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Blue',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'Blue.png',\n      md: 'Blue.png',\n      sm: 'Blue.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'Blue.png',\n    },\n    sortOrder: 999,\n    identifier: 'Blue',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Dragon',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'Dragon.png',\n      md: 'Dragon.png',\n      sm: 'Dragon.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'Dragon',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Sun',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'Sun.png',\n      md: 'Sun.png',\n      sm: 'Sun.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'Sun.png',\n    },\n    sortOrder: 999,\n    identifier: 'Sun',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Red',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'Red.png',\n      md: 'Red.png',\n      sm: 'Red.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'Red.png',\n    },\n    sortOrder: 999,\n    identifier: 'Red',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'White',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'White.png',\n      md: 'White.png',\n      sm: 'White.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'White-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'White',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { kebabCase } from 'lodash'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useRef, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useAppDispatch } from 'state'\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport {\n  fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, fetchFarms3PublicDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast\n} from './actions'\nimport { State, PriceState, ProfileState, Farm, Pool, Farm3, AchievementState, TeamsState } from './types'\nimport { QuoteToken } from '../config/constants/types'\nimport { fetchAchievements } from './achievements'\nimport Nfts from '../config/constants/nfts'\nimport { fetchWalletNfts } from './collectibles'\nimport { fetchTeams } from './teams'\nimport { fetchProfile } from './profile'\nimport { fetchPrices } from './prices'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n    dispatch(fetchFarms3PublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Farms3\n\nexport const useFarms3 = (): Farm3[] => {\n  const farms3 = useSelector((state: State) => state.farms3.data)\n  return farms3\n}\n\nexport const useFarm3FromPid = (pid): Farm3 => {\n  const farm3 = useSelector((state: State) => state.farms3.data.find((f) => f.pid === pid))\n  return farm3\n}\n\nexport const useFarm3FromSymbol = (lpSymbol: string): Farm3 => {\n  const farm3 = useSelector((state: State) => state.farms3.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm3\n}\n\nexport const useFarm3User = (pid) => {\n  const farm3 = useFarm3FromPid(pid)\n\n  return {\n    allowance: farm3.userData ? new BigNumber(farm3.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm3.userData ? new BigNumber(farm3.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm3.userData ? new BigNumber(farm3.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm3.userData ? new BigNumber(farm3.userData.earnings) : new BigNumber(0),\n  }\n}\n// Pools\n\nexport const usePools = (account: string): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  return useSelector((state: State) => state.pools.data)\n}\n\nexport const usePoolFromPid = (sousId: number): Pool =>\n  useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 3 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm?.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const senzuPrice = usePrice3CakeBusd();\n  const cake2Price: BigNumber = useMemo(() => {\n    return new BigNumber(22)\n  }, [])\n  const cakePrice = usePriceCakeBusd();\n\n  const { account } = useWallet()\n  const pools = usePools(account)\n  const totalValue = useRef(new BigNumber(0))\n\n  useEffect(() => {\n    let farmsTotalValue = new BigNumber(0)\n    for (let i = 0; i < farms.length; i++) {\n      const farm = farms[i]\n      if (farm.lpTotalInQuoteToken) {\n        let val\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          val = bnbPrice.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.SENZU) {\n          val = senzuPrice.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE2) {\n          val = cake2Price.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n          val = cakePrice.times(farm.lpTotalInQuoteToken)\n        } else {\n          val = farm.lpTotalInQuoteToken\n        }\n        farmsTotalValue = farmsTotalValue.plus(val)\n      }\n    }\n\n    let poolsTotalValue = new BigNumber(0)\n    for (let i = 0; i < pools.length; i++) {\n      const pool = pools[i]\n      let poolValue: BigNumber\n      if (pool.stakingTokenName === QuoteToken.CAKE) {\n        const totalSaltStaked = new BigNumber(pool.totalStaked).div(new BigNumber(10).pow(18))\n        poolValue = cakePrice.times(totalSaltStaked)\n      }\n\n      poolsTotalValue = poolsTotalValue.plus(poolValue ?? ZERO)\n    }\n\n    totalValue.current = farmsTotalValue.plus(poolsTotalValue)\n  }, [bnbPrice, senzuPrice, farms, pools, cakePrice, cake2Price])\n\n  if (!totalValue) {\n    return new BigNumber(0)\n  }\n  return totalValue.current\n}\n\n\n// Prices3\n\nexport const usePrice3BnbBusd = (): BigNumber => {\n  const pid = 7 // BUSD-BNB LP\n  const farm = useFarm3FromPid(pid)\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm?.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePrice3CakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n  const farm = useFarm3FromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const useTotalValue3 = (): BigNumber => {\n  const farms = useFarms3();\n  const bnbPrice = usePrice3BnbBusd();\n  const cakePrice = usePrice3CakeBusd();\n\n  // console.log(\"bnbPrice\",bnbPrice)\n  // console.log(\"cakePrice\",cakePrice)\n\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n\n    }\n  }\n  return value;\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useAppDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromSymbol(symbol)\n  const tokenPriceInUsd = useGetApiPrice(getAddress(farm.tokenAddresses))\n\n  return farm.lpTotalSupply && farm.lpTotalInQuoteToken\n    ? new BigNumber(getBalanceNumber(farm.lpTotalSupply)).div(farm.lpTotalInQuoteToken).times(tokenPriceInUsd).times(2)\n    : new BigNumber(0)\n}\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices)\n  return prices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[address.toLowerCase()]\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n// Achievements\n\nexport const useFetchAchievements = () => {\n  // const { account } = useWeb3React()\n  const { account } = useWallet()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  \n  const { account } = useWallet()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\nexport const useFetchProfile = () => {\n  // const { account } = useWeb3React()\n  const { account } = useWallet()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport { clear, remove, push } from './toasts'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { fetchFarms3PublicDataAsync, fetchFarm3UserDataAsync } from './farms3'\nexport { setBlock } from './block'\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      // console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'http://exchange.dragonballfinance.org/',\n      },\n      {\n        label: 'Liquidity',\n        href: 'http://exchange.dragonballfinance.org/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: 'Layer 1',\n  //   icon: 'LayerIcon',\n  //   href: '/layer/info',\n  // },\n  // {\n  //   label: 'BNB Pool',\n  //   icon: 'PoolIcon',\n  //   href: '/bnbpool',\n  // },\n  // {\n  //   label: 'IFO',\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  // {\n  //   label: 'Nft',\n  //   icon: 'NftIcon',\n  //   href: '/Nft',\n  // },\n  // {\n  //   label: 'Lottery',\n  //   icon: 'TicketIcon',\n  //   href: '/Lottery',\n  // },\n  // {\n  //   label: 'Gaming App',\n  //   icon: 'NftIcon',\n  //   href: '/Gaming',\n  // },\n  // {\n  //   label: 'DBALL Info',\n  //   icon: 'InfoIcon',\n  //   items: [\n  //     {\n  //       label: 'BSC Scan',\n  //       href: 'https://bscscan.com/token/0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9',\n  //     },\n  //     {\n  //       label: 'Price Graph',\n  //       href: 'https://dex.guru/token/0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9-bsc',\n  //     },\n  //     {\n  //       label: 'DApp Radar',\n  //       href: 'https://dappradar.com/binance-smart-chain/defi/dragonball-finance',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'SENZU Info',\n  //   icon: 'InfoIcon',\n  //   items: [\n  //     {\n  //       label: 'BSC Scan',\n  //       href: 'https://bscscan.com/token/0xcBA1813Ede683333020cedea7C3b63FbaC28e78e',\n  //     },\n  //     {\n  //       label: 'Price Graph',\n  //       href: 'https://dex.guru/token/0xcBA1813Ede683333020cedea7C3b63FbaC28e78e-bsc',\n  //     },\n  //     {\n  //       label: 'DApp Radar',\n  //       href: 'https://dappradar.com/binance-smart-chain/defi/dragonball-finance',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'More',\n  //   icon: 'MoreIcon',\n  //   items: [\n  //     {\n  //       label: 'Github',\n  //       href: 'https://github.com/DragonBallFinance',\n  //     },\n  //     {\n  //       label: 'Docs',\n  //       href: 'https://docs.dragonballfinance.org/',\n  //     },\n  //     {\n  //       label: 'Blog',\n  //       href: 'https://dragonballfinance.medium.com/',\n  //     },\n  //     {\n  //       label: 'Whitepaper',\n  //       href: 'https://dragonballfinance.org/Whitepaper.pdf',\n  //     },\n  //   ],\n  // },\n  // {\n  //   label: 'Roadmap',\n  //   icon: 'RoadmapIcon',\n  //   href: 'https://dragonballfinance.org/Roadmap',\n  // },\n  // {\n  //   label: 'DBALL Audit',\n  //   icon: 'AuditIcon',\n  //   href: 'https://dragonballfinance.org/Dball.pdf',\n  // },\n  // {\n  //   label: 'SENZU Audit',\n  //   icon: 'AuditIcon',\n  //   href: 'https://dragonballfinance.org/Senzu.pdf',\n  // },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceCakeBusd, usePrice3CakeBusd, useProfile } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePrice2Usd = usePrice3CakeBusd()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      cakePrice2Usd={cakePrice2Usd.toNumber()}\n      links={config}\n      priceLink=\"https://bscscan.com/token/0xceB2f5e9C7F2D3BCd12A7560D73c56f3396af3F9\"\n      priceLink2=\"https://bscscan.com/token/0xcBA1813Ede683333020cedea7C3b63FbaC28e78e\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport styled from 'styled-components'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\n// eslint-disable-next-line import/no-duplicates\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n\nconst Home3 = lazy(() => import('./views/Layer/Home'))\nconst Farms3 = lazy(() => import('./views/Layer/Farms'))\n\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Pools = lazy(() => import('./views/Pools'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Nft = lazy(() => import('./views/Nft'))\nconst Gaming = lazy(() => import('./views/Gaming'))\n// const Layered = lazy(() => import('./views/Layered'))\nconst Roadmap = lazy(() => import('./views/Roadmap'))\nconst Whitepaper = lazy(() => import('./views/Whitepaper'))\nconst Profile = lazy(() => import('./views/Profile'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n  useFetchPublicData()\n  useFetchProfile()\n  useFetchPriceList()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode />\n            </Route>\n            <Route path=\"/layer/info\" exact>\n              <Home3 />\n            </Route>\n            <Route path=\"/layer/farms\">\n              <Farms3 />\n            </Route>\n            <Route path=\"/layer/pools\">\n              <Farms3 tokenMode />\n            </Route>\n            <Route path=\"/bnbpool\">\n             <Pools />\n            </Route>\n            <Route path=\"/Gaming\">\n              <Gaming />\n            </Route>\n            <Route path=\"/Whitepaper\">\n              <Whitepaper />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            {/* <Route path=\"/Layered\">\n              <Layered />\n            </Route> */}\n            <Route path=\"/ifo\">\n             <Ifos />\n            </Route>\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            <Route path=\"/Nft\">\n              <Nft />\n            </Route>\n            <Route path=\"/Roadmap\">\n              <Roadmap />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nests\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n   console.log(store)\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","/* eslint-disable no-param-reassign */\nimport { Toast } from '@pancakeswap-libs/uikit'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ToastsState } from '../types'\n\nconst initialState: ToastsState = {\n  data: [],\n}\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    push: (state: ToastsState, action: PayloadAction<Toast>) => {\n      const { payload } = action\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload.id)\n\n      // If id already matches remove it before adding it to the top of the stack\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n\n      state.data.unshift(payload)\n    },\n    remove: (state: ToastsState, action: PayloadAction<string>) => {\n      const toastIndex = state.data.findIndex((toast) => toast.id === action.payload)\n\n      if (toastIndex >= 0) {\n        state.data.splice(toastIndex, 1)\n      }\n    },\n    clear: (state: ToastsState) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { clear, remove, push } = toastsSlice.actions\n\nexport default toastsSlice.reducer\n"],"sourceRoot":""}