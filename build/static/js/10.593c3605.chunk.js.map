{"version":3,"sources":["hooks/useTokenBalance.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/lodash/keys.js","views/Profile/components/ApproveConfirmButtons.tsx","hooks/useApproveConfirmTransaction.ts","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_shuffleSelf.js","../node_modules/lodash/shuffle.js","../node_modules/lodash/_arrayShuffle.js","../node_modules/lodash/_baseShuffle.js","../node_modules/lodash/values.js","../node_modules/lodash/_baseValues.js","views/Profile/ProfileCreation/config.ts","views/Profile/ProfileCreation/contexts/ProfileCreationProvider.tsx","views/Profile/ProfileCreation/Header.tsx","views/Profile/components/WalletNotConnected.tsx","hooks/useHasCakeBalance.ts","views/Profile/components/SelectionCard.tsx","views/Profile/components/NextStepButton.tsx","views/Profile/ProfileCreation/contexts/hook.ts","views/Profile/ProfileCreation/Mint.tsx","views/Profile/ProfileCreation/ProfilePicture.tsx","views/Profile/ProfileCreation/UserName.tsx","views/Profile/ProfileCreation/TeamSelection.tsx","views/Profile/components/ConfirmProfileCreationModal.tsx","views/Profile/ProfileCreation/Steps.tsx","views/Profile/ProfileCreation/index.tsx","views/Profile/components/ClaimGiftModal.tsx","views/Profile/components/HeaderWrapper.tsx","views/Profile/components/EditProfileModal/reducer.ts","hooks/useGetProfileCosts.ts","views/Profile/components/ProfileAvatar.tsx","views/Profile/components/EditProfileModal/StartView.tsx","views/Profile/components/EditProfileModal/PauseProfileView.tsx","views/Profile/components/EditProfileModal/ChangeProfilePicView.tsx","views/Profile/components/EditProfileModal/ApproveCakeView.tsx","views/Profile/components/EditProfileModal/index.tsx","views/Profile/components/Header.tsx","views/Profile/components/AchievementAvatar.tsx","views/Profile/components/AchievementTitle.tsx","views/Profile/components/AchievementDescription.tsx","views/Profile/components/AchievementCard.tsx","views/Profile/components/AchievementsList.tsx","views/Profile/components/ActionColumn.tsx","views/Profile/components/AchievementRow/PointsLabel.tsx","views/Profile/components/AchievementRow/index.tsx","views/Profile/components/ClaimPointsCallout .tsx","views/Profile/components/ComingSoon.tsx","views/Profile/components/Menu.tsx","views/Profile/TaskCenter.tsx","views/Profile/components/CardHeader.tsx","views/Profile/components/CollectibleCard.tsx","views/Profile/components/Collectibles.tsx","views/Profile/components/SecondaryCard.tsx","views/Profile/components/StatBox.tsx","views/Profile/components/EditProfileAvatar.tsx","views/Profile/PublicProfile.tsx","views/Profile/index.tsx"],"names":["useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTotalSupply3","cake3ABI","getCake3Address","useBurnedBalance3","useTokenBalance","useWallet","account","ethereum","fastRefresh","getTokenBalance","res","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","arrayLikeKeys","require","baseKeys","isArrayLike","module","exports","object","StyledApproveConfirmButtons","styled","div","theme","mediaQueries","md","Button","UIKitButton","iconAttrs","width","color","ChevronRight","ChevronRightIcon","attrs","ChevronBottom","ChevronDownIcon","spinnerIcon","spin","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","TranslateString","useI18n","disabled","onClick","endIcon","undefined","isLoading","justifyContent","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onRequiresApproval","onSuccess","noop","useReducer","dispatch","handlePreApprove","useRef","toastError","useToast","current","then","result","isApproved","isConfirmed","handleApprove","on","error","console","handleConfirm","isPrototype","nativeKeys","hasOwnProperty","push","overArg","baseRandom","array","size","index","lastIndex","rand","value","arrayShuffle","baseShuffle","isArray","collection","copyArray","shuffleSelf","values","baseValues","arrayMap","props","MINT_COST","REGISTER_COST","STARTER_BUNNY_IDENTIFIERS","isInitialized","currentStep","teamId","selectedNft","nftAddress","tokenId","userName","minimumCakeRequired","multipliedBy","pow","allowance","totalCost","action","step","ProfileCreationContext","createContext","ProfileCreationProvider","children","isSubscribed","bunnyFactoryContract","getBunnyFactoryContract","canMint","fetchData","useMemo","nextStep","setTeamId","setSelectedNft","setUserName","Provider","Wrapper","colors","textSubtle","steps","translationId","label","Header","useContext","as","mb","map","WalletNotConnected","UnlockButton","useHasCakeBalance","minimumBalance","gte","StyledCard","Card","isSuccess","Label","isDisabled","Body","tertiary","Children","StyledBackgroundImage","src","SelectionCard","name","isChecked","image","onChange","checked","e","style","flex","NextStepButton","useProfileCreation","nfts","nftList","filter","nft","includes","identifier","minimumCakeBalanceToMint","Mint","variationId","setVariationId","useCake","useBunnyFactory","hasMinimumCakeRequired","options","address","response","currentAllowance","approve","toJSON","send","from","mintNFT","fontSize","bold","num","images","Number","ExistingUserState","Link","RouterLink","primary","NftWrapper","ProfilePicture","setIsApproved","setIsApproving","useGetCollectibles","nftsInWallet","tokenIds","contract","useERC721","to","marginLeft","height","walletNft","firstTokenId","getAddressByType","parseInt","getPancakeProfileAddress","once","message","Team","currentTeamId","teams","useTeams","handleTeamSelection","teamValues","shuffle","team","id","isJoinable","mr","users","toLocaleString","ConfirmProfileCreationModal","onDismiss","profileContract","useProfile","useAppDispatch","toastSuccess","createProfile","fetchProfile","title","profileApiUrl","process","REACT_APP_API_PROFILE","minimumCakeToRegister","InputWrap","Input","UIKitInput","Indicator","Flex","UserName","isAcknowledged","setIsAcknowledged","web3","useWeb3","NEW","existingUserState","setExistingUserState","isValid","setIsValid","setIsLoading","useModal","onPresentConfirmProfileCreation","isUserCreated","CREATED","eth","personal","sign","signature","fetch","method","headers","body","JSON","stringify","username","log","ok","json","data","IDLE","event","isWarning","minLength","maxLength","placeholder","py","minHeight","htmlFor","display","cursor","marginBottom","alignItems","scale","ml","mt","Steps","TeamSelection","ProfileCreation","Page","useCanClaim","canClaim","setCanClaim","refresh","setRefresh","checkClaimStatus","useCallback","prevRefresh","claimRefundContract","getClaimRefundContract","walletCanClaim","fetchClaimStatus","ClaimGift","setIsConfirming","useClaimRefundContract","maxWidth","getCakeBack","Views","HeaderWrapper","currentView","view","previousView","useEditProfile","START","goToStart","goToChange","CHANGE","goToRemove","REMOVE","goToApprove","APPROVE","goPrevious","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","getProfileContract","makeBatchRequest","fetchCosts","TeamAvatar","img","card","background","sm","AvatarWrapper","bg","AvatarInactive","NoProfileAvatarIcon","ProfileAvatar","profile","isActive","alt","DangerOutline","variant","failure","StartPage","needsApproval","setNeedsApproval","cost","lt","checkApprovalStatus","flexDirection","getFullDisplayBalance","PauseProfilePage","pancakeProfileContract","useProfileContract","getBalanceNumber","pauseProfile","ChangeProfilePicPage","updateProfile","reactivateProfile","ApproveCakePage","times","viewTitle","EditProfileModal","isStartView","handleBack","onBack","hideCloseButton","StartView","PauseProfileView","ChangeProfilePicView","ApproveCakeView","ProfileHeader","onPresentClaimGiftModal","onEditProfileModal","hasProfile","startIcon","NoBadgePlaceholder","BunnyPlaceholderIcon","StyledAchievementAvatar","AchievementAvatar","badge","AchievementTitle","fallback","Description","Text","AchievementDescription","description","Details","AchievementCard","achievement","points","Grid","AchievementsList","achievements","useAchievements","ActionColumn","PointsLabel","localePoints","StyledAchievementRow","borderColor","AchievementRow","onCollectSuccess","isCollecting","setIsCollecting","pointCenterContract","usePointCenterIfoContract","px","getPoints","ClaimPointsCallout","claimableAchievements","setClaimableAchievement","getClaimableIfoData","ifoData","fetchIfoClaims","handleCollectSuccess","addAchievement","addPoints","prevClaimableAchievements","prevClaimableAchievement","totalPointsToCollect","sumBy","ComingSoon","p","Menu","activeIndex","TaskCenter","CardHeader","UIKitCardHeader","isDark","getBackground","PreviewImage","CollectibleCard","lg","CollectibleList","Collectibles","nftInWallet","SecondaryCard","defaultProps","StatBox","Icon","icon","subtitle","textTransform","EditOverlay","StyledEditProfileAvatar","EditProfileAvatar","Content","Username","Heading","Status","ResponsiveText","AddressLink","Section","PublicProfile","href","external","outline","PrizeIcon","Profile","useFetchAchievements","PageLoader","exact","path"],"mappings":"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","file":"static/js/10.593c3605.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport cake3ABI from 'config/abi/cake3.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress, getCake3Address } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply3 = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cake3ABI, getCake3Address())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance3 = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cake3ABI, getCake3Address())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApproveConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledApproveConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n        </Button>\n      </Box>\n    </StyledApproveConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n","import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  // const { account } = useWeb3React()\n  const { account } = useWallet()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nmodule.exports = shuffleSelf;\n","var arrayShuffle = require('./_arrayShuffle'),\n    baseShuffle = require('./_baseShuffle'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nmodule.exports = shuffle;\n","var copyArray = require('./_copyArray'),\n    shuffleSelf = require('./_shuffleSelf');\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nmodule.exports = arrayShuffle;\n","var shuffleSelf = require('./_shuffleSelf'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nmodule.exports = baseShuffle;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","export const MINT_COST = 0.5\nexport const REGISTER_COST = 0.5\nexport const ALLOWANCE_MULTIPLIER = 5\nexport const STARTER_BUNNY_IDENTIFIERS = ['Blue', 'Red', 'White', 'Sun']\nexport const USERNAME_MIN_LENGTH = 3\nexport const USERNAME_MAX_LENGTH = 15\n","import React, { createContext, useEffect, useMemo, useReducer } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBunnyFactoryContract } from 'utils/contractHelpers'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { MINT_COST, REGISTER_COST, ALLOWANCE_MULTIPLIER } from '../config'\nimport { Actions, State, ContextType } from './types'\n\nconst totalCost = MINT_COST + REGISTER_COST\nconst allowance = totalCost * ALLOWANCE_MULTIPLIER\n\nconst initialState: State = {\n  isInitialized: false,\n  currentStep: 0,\n  teamId: null,\n  selectedNft: {\n    nftAddress: null,\n    tokenId: null,\n  },\n  userName: '',\n  minimumCakeRequired: new BigNumber(totalCost).multipliedBy(new BigNumber(10).pow(18)),\n  allowance: new BigNumber(allowance).multipliedBy(new BigNumber(10).pow(18)),\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'initialize':\n      return {\n        ...state,\n        isInitialized: true,\n        currentStep: action.step,\n      }\n    case 'next_step':\n      return {\n        ...state,\n        currentStep: state.currentStep + 1,\n      }\n    case 'set_team':\n      return {\n        ...state,\n        teamId: action.teamId,\n      }\n    case 'set_selected_nft':\n      return {\n        ...state,\n        selectedNft: {\n          tokenId: action.tokenId,\n          nftAddress: action.nftAddress,\n        },\n      }\n    case 'set_username':\n      return {\n        ...state,\n        userName: action.userName,\n      }\n    default:\n      return state\n  }\n}\n\nexport const ProfileCreationContext = createContext<ContextType>(null)\n\nconst ProfileCreationProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const { account } = useWallet()\n  // Initial checks\n  useEffect(() => {\n    let isSubscribed = true\n\n    const fetchData = async () => {\n      const bunnyFactoryContract = getBunnyFactoryContract()\n      const canMint = await bunnyFactoryContract.methods.canMint(account).call()\n      dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n\n      // When changing wallets quickly unmounting before the hasClaim finished causes a React error\n      if (isSubscribed) {\n        dispatch({ type: 'initialize', step: canMint ? 0 : 1 })\n      }\n    }\n\n    if (account) {\n      fetchData()\n    }\n\n    return () => {\n      isSubscribed = false\n    }\n  }, [account, dispatch])\n\n  const actions: ContextType['actions'] = useMemo(\n    () => ({\n      nextStep: () => dispatch({ type: 'next_step' }),\n      setTeamId: (teamId: number) => dispatch({ type: 'set_team', teamId }),\n      setSelectedNft: (tokenId: number, nftAddress: string) =>\n        dispatch({ type: 'set_selected_nft', tokenId, nftAddress }),\n      setUserName: (userName: string) => dispatch({ type: 'set_username', userName }),\n    }),\n    [dispatch],\n  )\n\n  return <ProfileCreationContext.Provider value={{ ...state, actions }}>{children}</ProfileCreationContext.Provider>\n}\n\nexport default ProfileCreationProvider\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { Breadcrumbs, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Wrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nconst steps = [\n  { translationId: 776, label: 'Get Starter Collectible' },\n  { translationId: 778, label: 'Set Profile Picture' },\n  { translationId: 780, label: 'Join Team' },\n  { translationId: 782, label: 'Set Name' },\n]\n\nconst Header: React.FC = () => {\n  const TranslateString = useI18n()\n  const { currentStep } = useContext(ProfileCreationContext)\n\n  return (\n    <Wrapper>\n      <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"8px\">\n        {TranslateString(770, 'Profile Setup')}\n      </Heading>\n      <Heading as=\"h2\" size=\"lg\" mb=\"8px\">\n        {TranslateString(772, 'Show off your stats and collectibles with your unique profile')}\n      </Heading>\n      <Text color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Total cost: 1 DBALL')}\n      </Text>\n      <Breadcrumbs>\n        {steps.map(({ translationId, label }, index) => {\n          return (\n            <Text key={label} color={index <= currentStep ? 'text' : 'textDisabled'}>\n              {TranslateString(translationId, label)}\n            </Text>\n          )\n        })}\n      </Breadcrumbs>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst WalletNotConnected = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Heading size=\"xl\" mb=\"8px\">\n        {TranslateString(852, 'Oops!')}\n      </Heading>\n      <Text as=\"p\" mb=\"16px\">\n        {TranslateString(999, 'Please connect your wallet to continue')}\n      </Text>\n      <UnlockButton />\n    </div>\n  )\n}\n\nexport default WalletNotConnected\n","import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Radio } from '@pancakeswap-libs/uikit'\n\ninterface SelectionCardProps {\n  name: string\n  value: string | number\n  isChecked?: boolean\n  onChange: (val: any) => void\n  image: string\n  disabled?: boolean\n}\n\nconst StyledCard = styled(Card)`\n  ${({ isSuccess }) => !isSuccess && 'box-shadow: none;'}\n  border-radius: 16px;\n  margin-bottom: 16px;\n`\n\nconst Label = styled.label<{ isDisabled: boolean }>`\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  opacity: ${({ isDisabled }) => (isDisabled ? '0.6' : '1')};\n`\n\nconst Body = styled.div`\n  align-items: center;\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px 0 0 16px;\n  display: flex;\n  flex-grow: 1;\n  height: 80px;\n  padding: 8px 16px;\n`\n\nconst Children = styled.div`\n  margin-left: 16px;\n`\n\nconst StyledBackgroundImage = styled.div<{ src: string }>`\n  align-self: stretch;\n  background-image: url('${({ src }) => src}');\n  background-size: contain;\n  background-position: center;\n  background-repeat: no-repeat;\n  flex: none;\n  width: 80px;\n`\n\nconst SelectionCard: React.FC<SelectionCardProps> = ({\n  name,\n  value,\n  isChecked = false,\n  image,\n  onChange,\n  disabled,\n  children,\n  ...props\n}) => {\n  return (\n    <StyledCard isSuccess={isChecked} isDisabled={disabled} mb=\"16px\" {...props}>\n      <Label isDisabled={disabled}>\n        <Body>\n          <Radio\n            name={name}\n            checked={isChecked}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            disabled={disabled}\n            style={{ flex: 'none' }}\n          />\n          <Children>{children}</Children>\n        </Body>\n        <StyledBackgroundImage src={image} />\n      </Label>\n    </StyledCard>\n  )\n}\n\nexport default SelectionCard\n","import React from 'react'\nimport { ArrowForwardIcon, Button, ButtonProps } from '@pancakeswap-libs/uikit'\n\nconst NextStepButton: React.FC<ButtonProps> = (props) => {\n  return <Button endIcon={<ArrowForwardIcon color=\"currentColor\" />} {...props} />\n}\n\nexport default NextStepButton\n","import { useContext } from 'react'\nimport { ProfileCreationContext } from './ProfileCreationProvider'\n\nconst useProfileCreation = () => {\n  return useContext(ProfileCreationContext)\n}\n\nexport default useProfileCreation\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useI18n from 'hooks/useI18n'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useCake, useBunnyFactory } from 'hooks/useContract'\nimport { Nft } from 'config/constants/types'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport nftList from 'config/constants/nfts'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport ApproveConfirmButtons from '../components/ApproveConfirmButtons'\nimport useProfileCreation from './contexts/hook'\nimport { MINT_COST, STARTER_BUNNY_IDENTIFIERS } from './config'\n\nconst nfts = nftList.filter((nft) => STARTER_BUNNY_IDENTIFIERS.includes(nft.identifier))\nconst minimumCakeBalanceToMint = new BigNumber(MINT_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst Mint: React.FC = () => {\n  const [variationId, setVariationId] = useState<Nft['variationId']>(null)\n  const { actions, minimumCakeRequired, allowance } = useProfileCreation()\n\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const bunnyFactoryContract = useBunnyFactory()\n  const TranslateString = useI18n()\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeBalanceToMint)\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      // TODO: Move this to a helper, this check will be probably be used many times\n      try {\n        const response = await cakeContract.methods.allowance(account, bunnyFactoryContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods\n        .approve(bunnyFactoryContract.options.address, allowance.toJSON())\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return bunnyFactoryContract.methods.mintNFT(variationId).send({ from: account })\n    },\n    onSuccess: () => actions.nextStep(),\n  })\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${1}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(776, 'Get Starter Collectible')}\n      </Heading>\n      <Text as=\"p\">{TranslateString(786, 'Every profile starts by making a “starter” collectible (NFT).')}</Text>\n      <Text as=\"p\">{TranslateString(788, 'This starter will also become your first profile picture.')}</Text>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(790, 'You can change your profile pic later if you get another approved Pancake Collectible.')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(792, 'Choose your Starter!')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(794, 'Choose wisely: you can only ever make one starter collectible!')}\n          </Text>\n          <Text as=\"p\" mb=\"24px\" color=\"textSubtle\">\n            {TranslateString(999, `Cost: ${MINT_COST} DBALL`, { num: MINT_COST })}\n          </Text>\n          {nfts.map((nft) => {\n            const handleChange = (value: string) => setVariationId(Number(value))\n\n            return (\n              <SelectionCard\n                key={nft.identifier}\n                name=\"mintStarter\"\n                value={nft.variationId}\n                image={`/images/nfts/${nft.images.md}`}\n                isChecked={variationId === nft.variationId}\n                onChange={handleChange}\n                disabled={isApproving || isConfirming || isConfirmed || !hasMinimumCakeRequired}\n              >\n                <Text bold>{nft.name}</Text>\n              </SelectionCard>\n            )\n          })}\n          {!hasMinimumCakeRequired && (\n            <Text color=\"failure\" mb=\"16px\">\n              {TranslateString(1098, `A minimum of ${MINT_COST} DBALL is required`)}\n            </Text>\n          )}\n          <ApproveConfirmButtons\n            isApproveDisabled={variationId === null || isConfirmed || isConfirming || isApproved}\n            isApproving={isApproving}\n            isConfirmDisabled={!isApproved || isConfirmed || !hasMinimumCakeRequired}\n            isConfirming={isConfirming}\n            onApprove={handleApprove}\n            onConfirm={handleConfirm}\n          />\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={!isConfirmed}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Mint\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAddressByType } from 'utils/collectibles'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useI18n from 'hooks/useI18n'\nimport { useGetCollectibles, useToast } from 'state/hooks'\nimport { useERC721 } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\n  const contract = useERC721(selectedNft.nftAddress)\n  const { account } = useWallet()\n  const { toastError } = useToast()\n\n  const handleApprove = () => {\n    contract.methods\n      .approve(getPancakeProfileAddress(), selectedNft.tokenId)\n      .send({ from: account })\n      .once('sending', () => {\n        setIsApproving(true)\n      })\n      .once('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .once('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && nftsInWallet.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a DBALL Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              nftsInWallet.map((walletNft) => {\n                const [firstTokenId] = tokenIds[walletNft.identifier]\n                const address = getAddressByType(walletNft.type)\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.identifier}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap-libs/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  // const { library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.NEW)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n\n    if(value.length >= 3 && value.length <= 15)\n    {\n      setIsValid(true)\n    }\n    else\n    {\n      setIsValid(false)\n    }\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n      const signature = await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      console.log(response.ok)\n\n      if (!response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You can’t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} DBALL is required`, { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n","import React, { useMemo } from 'react'\nimport { Card, CardBody, CommunityIcon, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport shuffle from 'lodash/shuffle'\nimport { useTeams } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport useProfileCreation from './contexts/hook'\n\nconst Team: React.FC = () => {\n  const { teamId: currentTeamId, actions } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { teams } = useTeams()\n  const handleTeamSelection = (value: string) => actions.setTeamId(parseInt(value, 10))\n  const teamValues = useMemo(() => shuffle(Object.values(teams)), [teams])\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${3}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(826, 'Join a Team')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(828, 'It won’t be possible to undo the choice you make for the foreseeable future!')}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(826, 'Join a Team')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              830,\n              'There’s currently no big difference between teams, and no benefit of joining one team over another for now. So pick whichever one you like!',\n            )}\n          </Text>\n          {teamValues &&\n            teamValues.map((team) => {\n              return (\n                <SelectionCard\n                  key={team.name}\n                  name=\"teams-selection\"\n                  value={team.id}\n                  isChecked={currentTeamId === team.id}\n                  image={`/images/teams/${team.images.md}`}\n                  onChange={handleTeamSelection}\n                  disabled={!team.isJoinable}\n                >\n                  <Text bold>{team.name}</Text>\n                  <Flex>\n                    <CommunityIcon mr=\"8px\" />\n                    <Text>{team.users.toLocaleString()}</Text>\n                  </Flex>\n                </SelectionCard>\n              )\n            })}\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={currentTeamId === null}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default Team\n","import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, `${REGISTER_COST} DBALL`, { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n","import React, { useContext } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport NoWalletConnected from '../components/WalletNotConnected'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\nimport Mint from './Mint'\nimport ProfilePicture from './ProfilePicture'\nimport TeamSelection from './TeamSelection'\nimport UserName from './UserName'\n\nconst Steps = () => {\n  const { isInitialized, currentStep } = useContext(ProfileCreationContext)\n  const { account } = useWallet()\n\n  if (!account) {\n    return <NoWalletConnected />\n  }\n\n  if (!isInitialized) {\n    return <div>Loading...</div>\n  }\n\n  if (currentStep === 0) {\n    return <Mint />\n  }\n\n  if (currentStep === 1) {\n    return <ProfilePicture />\n  }\n\n  if (currentStep === 2) {\n    return <TeamSelection />\n  }\n  console.log(currentStep)\n  if (currentStep === 3) {\n    return <UserName />\n  }\n\n  return null\n}\n\nexport default Steps\n","import React from 'react'\nimport Page from 'components/layout/Page'\nimport Header from './Header'\nimport ProfileCreationProvider from './contexts/ProfileCreationProvider'\nimport Steps from './Steps'\n\nconst ProfileCreation = () => (\n  <ProfileCreationProvider>\n    <Page>\n      <Header />\n      <Steps />\n    </Page>\n  </ProfileCreationProvider>\n)\n\nexport default ProfileCreation\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Modal, Text, InjectedModalProps, Button, AutoRenewIcon } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useClaimRefundContract } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimRefundContract } from 'utils/contractHelpers'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ninterface ClaimGiftProps extends InjectedModalProps {\n  onSuccess: () => void\n}\n\nexport const useCanClaim = () => {\n  const [canClaim, setCanClaim] = useState(false)\n  const [refresh, setRefresh] = useState(1)\n  const { account } = useWallet()\n\n  const checkClaimStatus = useCallback(() => {\n    setRefresh((prevRefresh) => prevRefresh + 1)\n  }, [setRefresh])\n\n  useEffect(() => {\n    const fetchClaimStatus = async () => {\n      const claimRefundContract = getClaimRefundContract()\n      const walletCanClaim = await claimRefundContract.methods.canClaim(account).call()\n      setCanClaim(walletCanClaim)\n    }\n\n    if (account) {\n      fetchClaimStatus()\n    }\n  }, [account, refresh, setCanClaim])\n\n  return { canClaim, checkClaimStatus }\n}\n\nconst ClaimGift: React.FC<ClaimGiftProps> = ({ onSuccess, onDismiss }) => {\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const { canClaim } = useCanClaim()\n  const claimRefundContract = useClaimRefundContract()\n  const { toastSuccess, toastError } = useToast()\n\n  const handleClick = () => {\n    claimRefundContract.methods\n      .getCakeBack()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', () => {\n        toastSuccess('Success!')\n        onSuccess()\n        onDismiss()\n      })\n      .on('error', (error) => {\n        setIsConfirming(false)\n        toastError('Error', error?.message)\n      })\n  }\n\n  return (\n    <Modal title={TranslateString(999, 'Claim your Gift!')} onDismiss={onDismiss}>\n      <div style={{ maxWidth: '640px' }}>\n        <Text as=\"p\">{TranslateString(999, 'Thank you for being a day-one user of Pancake Profiles!')}</Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"If you haven't already noticed, we made a mistake and the starter bunny you chose got mixed up and changed into another bunny. Oops!\",\n          )}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(999, \"To make it up to you, we'll refund you the full 4 CAKE it cost to make your bunny.\")}\n        </Text>\n        <Text as=\"p\" mb=\"8px\">\n          {TranslateString(\n            999,\n            \"We're also preparing an all-new collectible for you to claim (for free!) in the near future.\",\n          )}\n        </Text>\n        <Text as=\"p\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'Once you claim the refund, you can make another account with another wallet, mint a new bunny, and send it to your main account via the NFT page.',\n          )}\n        </Text>\n        <Button\n          endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          isLoading={isConfirming}\n          onClick={handleClick}\n          disabled={!canClaim}\n        >\n          {TranslateString(999, 'Claim Your CAKE')}\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default ClaimGift\n","import styled from 'styled-components'\n\nconst HeaderWrapper = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  margin-bottom: 24px;\n  padding-bottom: 24px;\n`\n\nexport default HeaderWrapper\n","import { useReducer } from 'react'\n\nexport enum Views {\n  START = 'start',\n  CHANGE = 'change',\n  REMOVE = 'remove',\n  APPROVE = 'approve',\n}\n\nexport type Actions =\n  | {\n      type: 'set_view'\n      view: Views\n    }\n  | {\n      type: 'go_previous'\n    }\n\nexport interface State {\n  currentView: Views\n  previousView: Views | null\n}\n\nconst reducer = (state: State, action: Actions): State => {\n  switch (action.type) {\n    case 'set_view':\n      return {\n        ...state,\n        currentView: action.view,\n        previousView: state.currentView,\n      }\n    case 'go_previous':\n      return {\n        ...state,\n        currentView: state.previousView,\n        previousView: state.currentView,\n      }\n    default:\n      return state\n  }\n}\n\nexport interface UseEditProfileResponse extends State {\n  goToStart: () => void\n  goToChange: () => void\n  goToApprove: () => void\n  goToRemove: () => void\n  goPrevious: () => void\n}\n\nconst useEditProfile = (): UseEditProfileResponse => {\n  const [state, dispatch] = useReducer(reducer, {\n    currentView: Views.START,\n    previousView: null,\n  })\n\n  const goToStart = () => dispatch({ type: 'set_view', view: Views.START })\n  const goToChange = () => dispatch({ type: 'set_view', view: Views.CHANGE })\n  const goToRemove = () => dispatch({ type: 'set_view', view: Views.REMOVE })\n  const goToApprove = () => dispatch({ type: 'set_view', view: Views.APPROVE })\n  const goPrevious = () => dispatch({ type: 'go_previous' })\n\n  return { ...state, goToStart, goToChange, goToRemove, goToApprove, goPrevious }\n}\n\nexport default useEditProfile\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n","import React from 'react'\nimport { NoProfileAvatarIcon } from '@pancakeswap-libs/uikit'\nimport { Profile } from 'state/types'\nimport styled from 'styled-components'\n\nexport interface ProfileAvatarProps {\n  profile: Profile\n}\n\nconst TeamAvatar = styled.img`\n  border: 1px solid ${({ theme }) => theme.card.background};\n  border-radius: 50%;\n  bottom: 0px;\n  position: absolute;\n  right: 0px;\n  min-width: 20px;\n  min-height: 20px;\n  width: 37.5%;\n  height: 37.5%;\n  z-index: 5;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-width: 2px;\n  }\n`\n\nconst AvatarWrapper = styled.div<{ bg: string }>`\n  background: url('${({ bg }) => bg}');\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 50%;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n// TODO: replace with no profile avatar icon\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\n  width: 100%;\n  height: 100%;\n`\n\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  return (\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\n      {!profile.isActive && <AvatarInactive />}\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\n    </AvatarWrapper>\n  )\n}\n\nexport default ProfileAvatar\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text, InjectedModalProps } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { useCake } from 'hooks/useContract'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport { useProfile } from 'state/hooks'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { UseEditProfileResponse } from './reducer'\nimport ProfileAvatar from '../ProfileAvatar'\n\ninterface StartPageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n  goToRemove: UseEditProfileResponse['goToRemove']\n  goToApprove: UseEditProfileResponse['goToApprove']\n}\n\nconst DangerOutline = styled(Button).attrs({ variant: 'secondary' })`\n  border-color: ${({ theme }) => theme.colors.failure};\n  color: ${({ theme }) => theme.colors.failure};\n  margin-bottom: 24px;\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    border-color: ${({ theme }) => theme.colors.failure};\n    opacity: 0.8;\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst StartPage: React.FC<StartPageProps> = ({ goToApprove, goToChange, goToRemove, onDismiss }) => {\n  const [needsApproval, setNeedsApproval] = useState(null)\n  const { profile } = useProfile()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const minimumCakeRequired = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeRequired)\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const cakeContract = useCake()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  /**\n   * Check if the wallet has the required CAKE allowance to change their profile pic or reactivate\n   * If they don't, we send them to the approval screen first\n   */\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      const response = await cakeContract.methods.allowance(account, getPancakeProfileAddress()).call()\n      const currentAllowance = new BigNumber(response)\n      setNeedsApproval(currentAllowance.lt(cost))\n    }\n\n    if (account) {\n      checkApprovalStatus()\n    }\n  }, [account, cost, setNeedsApproval, cakeContract])\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <Flex alignItems=\"center\" style={{ height: '48px' }} justifyContent=\"center\">\n        <Text as=\"p\" color=\"failure\">\n          {!hasMinimumCakeRequired &&\n            TranslateString(999, `${getFullDisplayBalance(minimumCakeRequired)} CAKE required to change profile pic`)}\n        </Text>\n      </Flex>\n      {profile.isActive ? (\n        <>\n          <Button\n            width=\"100%\"\n            mb=\"8px\"\n            onClick={needsApproval === true ? goToApprove : goToChange}\n            disabled={!hasMinimumCakeRequired || needsApproval === null}\n          >\n            {TranslateString(999, 'Change Profile Pic')}\n          </Button>\n          <DangerOutline width=\"100%\" onClick={goToRemove}>\n            {TranslateString(999, 'Remove Profile Pic')}\n          </DangerOutline>\n        </>\n      ) : (\n        <Button\n          width=\"100%\"\n          mb=\"8px\"\n          onClick={needsApproval === true ? goToApprove : goToChange}\n          disabled={!hasMinimumCakeRequired || needsApproval === null}\n        >\n          {TranslateString(999, 'Reactivate Profile')}\n        </Button>\n      )}\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default StartPage\n","import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(476, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(464, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n","import React, { useState } from 'react'\nimport { Button, InjectedModalProps, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useAppDispatch } from 'state'\nimport { useGetCollectibles, useProfile, useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { fetchProfile } from 'state/profile'\nimport { getAddressByType } from 'utils/collectibles'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC721, useProfile as useProfileContract } from 'hooks/useContract'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport SelectionCard from '../SelectionCard'\nimport ApproveConfirmButtons from '../ApproveConfirmButtons'\n\n\ntype ChangeProfilePicPageProps = InjectedModalProps\n\nconst ChangeProfilePicPage: React.FC<ChangeProfilePicPageProps> = ({ onDismiss }) => {\n  const [selectedNft, setSelectedNft] = useState({\n    tokenId: null,\n    nftAddress: null,\n  })\n  const TranslateString = useI18n()\n  const { isLoading, tokenIds, nftsInWallet } = useGetCollectibles()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const contract = useERC721(selectedNft.nftAddress)\n  const profileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess } = useToast()\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onApprove: () => {\n      return contract.methods.approve(getPancakeProfileAddress(), selectedNft.tokenId).send({ from: account })\n    },\n    onConfirm: () => {\n      if (!profile.isActive) {\n        return profileContract.methods\n          .reactivateProfile(selectedNft.nftAddress, selectedNft.tokenId)\n          .send({ from: account })\n      }\n\n      return profileContract.methods.updateProfile(selectedNft.nftAddress, selectedNft.tokenId).send({ from: account })\n    },\n    onSuccess: async () => {\n      // Re-fetch profile\n      await dispatch(fetchProfile(account))\n      toastSuccess('Profile Updated!')\n\n      onDismiss()\n    },\n  })\n\n  return (\n    <>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, 'Choose a new Collectible to use as your profile pic.')}\n      </Text>\n      {isLoading ? (\n        <Skeleton height=\"80px\" mb=\"16px\" />\n      ) : (\n        nftsInWallet.map((walletNft) => {\n          const [firstTokenId] = tokenIds[walletNft.identifier]\n          const handleChange = (value: string) => {\n            setSelectedNft({\n              tokenId: Number(value),\n              nftAddress: getAddressByType(walletNft.type),\n            })\n          }\n\n          return (\n            <SelectionCard\n              name=\"profilePicture\"\n              key={walletNft.identifier}\n              value={firstTokenId}\n              image={`/images/nfts/${walletNft.images.md}`}\n              isChecked={firstTokenId === selectedNft.tokenId}\n              onChange={handleChange}\n              disabled={isApproving || isConfirming || isConfirmed}\n            >\n              <Text bold>{walletNft.name}</Text>\n            </SelectionCard>\n          )\n        })\n      )}\n      {!isLoading && nftsInWallet.length === 0 && (\n        <>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(999, 'Sorry! You don’t have any eligible Collectibles in your wallet to use!')}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(999, 'Make sure you have a Pancake Collectible in your wallet and try again!')}\n          </Text>\n        </>\n      )}\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved || selectedNft.tokenId === null}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed || selectedNft.tokenId === null}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving || isConfirming}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default ChangeProfilePicPage\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n","import React from 'react'\nimport { InjectedModalProps, Modal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useEditProfile, { Views } from './reducer'\nimport StartView from './StartView'\nimport PauseProfileView from './PauseProfileView'\nimport ChangeProfilePicView from './ChangeProfilePicView'\nimport ApproveCakeView from './ApproveCakeView'\n\ntype EditProfileModalProps = InjectedModalProps\n\nconst viewTitle = {\n  [Views.START]: { id: 999, label: 'Edit Profile' },\n  [Views.CHANGE]: { id: 999, label: 'Change Profile Pic' },\n  [Views.REMOVE]: { id: 999, label: 'Remove Profile Pic' },\n  [Views.APPROVE]: { id: 999, label: 'Approve CAKE' },\n}\n\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({ onDismiss }) => {\n  const { currentView, goToChange, goToRemove, goToApprove, goPrevious } = useEditProfile()\n  const TranslateString = useI18n()\n  const { id, label } = viewTitle[currentView]\n\n  const isStartView = currentView === Views.START\n  const handleBack = isStartView ? null : () => goPrevious()\n\n  return (\n    <Modal title={TranslateString(id, label)} onBack={handleBack} onDismiss={onDismiss} hideCloseButton={!isStartView}>\n      <div style={{ maxWidth: '400px' }}>\n        {currentView === Views.START && (\n          <StartView goToApprove={goToApprove} goToChange={goToChange} goToRemove={goToRemove} onDismiss={onDismiss} />\n        )}\n        {currentView === Views.REMOVE && <PauseProfileView onDismiss={onDismiss} />}\n        {currentView === Views.CHANGE && <ChangeProfilePicView onDismiss={onDismiss} />}\n        {currentView === Views.APPROVE && <ApproveCakeView goToChange={goToChange} onDismiss={onDismiss} />}\n      </div>\n    </Modal>\n  )\n}\n\nexport default EditProfileModal\n","import React from 'react'\nimport { Button, Flex, Heading, useModal, Won } from '@pancakeswap-libs/uikit'\nimport { useProfile } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport ClaimNftAndCakeModal, { useCanClaim } from './ClaimGiftModal'\nimport HeaderWrapper from './HeaderWrapper'\nimport EditProfileModal from './EditProfileModal'\n\nconst ProfileHeader = () => {\n  const TranslateString = useI18n()\n  const { canClaim, checkClaimStatus } = useCanClaim()\n  const [onPresentClaimGiftModal] = useModal(<ClaimNftAndCakeModal onSuccess={checkClaimStatus} />)\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n  const { hasProfile } = useProfile()\n\n  return (\n    <HeaderWrapper>\n      <Flex\n        flexDirection={['column', null, 'row']}\n        alignItems={['start', null, 'center']}\n        justifyContent=\"space-between\"\n      >\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"8px\" color=\"secondary\">\n            {TranslateString(999, 'Your Profile')}\n          </Heading>\n          <Heading as=\"h2\" size=\"lg\" mb=\"16px\">\n            {TranslateString(999, 'Check your stats and collect achievements')}\n          </Heading>\n          {hasProfile && <Button onClick={onEditProfileModal}>{TranslateString(999, 'Edit Profile')}</Button>}\n        </div>\n        {canClaim && (\n          <Button variant=\"tertiary\" onClick={onPresentClaimGiftModal} startIcon={<Won />}>\n            {TranslateString(999, \"You've got a gift to claim!\")}\n          </Button>\n        )}\n      </Flex>\n    </HeaderWrapper>\n  )\n}\n\nexport default ProfileHeader\n","import React, { ImgHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { BunnyPlaceholderIcon } from '@pancakeswap-libs/uikit'\n\ninterface AchievementAvatarProps extends ImgHTMLAttributes<HTMLImageElement> {\n  badge?: string\n}\n\nconst NoBadgePlaceholder = styled(BunnyPlaceholderIcon)`\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst StyledAchievementAvatar = styled.img`\n  border-radius: 50%;\n  height: 48px;\n  width: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 64px;\n    width: 64px;\n  }\n`\n\nconst AchievementAvatar: React.FC<AchievementAvatarProps> = ({ badge, ...props }) => {\n  if (!badge) {\n    return <NoBadgePlaceholder />\n  }\n\n  return <StyledAchievementAvatar src={`/images/achievements/${badge}`} alt=\"achievement badge\" {...props} />\n}\n\nexport default AchievementAvatar\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementTitleType } from 'state/types'\n\ninterface AchievementTitleProps extends TextProps {\n  title: AchievementTitleType\n}\n\nconst AchievementTitle: React.FC<AchievementTitleProps> = ({ title, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (typeof title === 'string') {\n    return (\n      <Text bold {...props}>\n        {title}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = title\n\n  return (\n    <Text bold {...props}>\n      {TranslateString(id, fallback, data)}\n    </Text>\n  )\n}\n\nexport default AchievementTitle\n","import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { TranslatableText as AchievementDescriptionType } from 'state/types'\nimport styled from 'styled-components'\n\ninterface AchievementDescriptionProps extends TextProps {\n  description?: AchievementDescriptionType\n}\n\nconst Description = styled(Text).attrs({ as: 'p', fontSize: '14px' })`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst AchievementDescription: React.FC<AchievementDescriptionProps> = ({ description, ...props }) => {\n  const TranslateString = useI18n()\n\n  if (!description) {\n    return null\n  }\n\n  if (typeof description === 'string') {\n    return (\n      <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\" {...props}>\n        {description}\n      </Text>\n    )\n  }\n\n  const { id, fallback, data = {} } = description\n\n  return (\n    <Description color=\"textSubtle\" {...props}>\n      {TranslateString(id, fallback, data)}\n    </Description>\n  )\n}\n\nexport default AchievementDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport AchievementAvatar from './AchievementAvatar'\nimport AchievementTitle from './AchievementTitle'\nimport AchievementDescription from './AchievementDescription'\n\ninterface AchievementCardProps {\n  achievement: Achievement\n}\n\nconst Details = styled(Flex)`\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  padding-left: 8px;\n  padding-right: 8px;\n`\n\nconst AchievementCard: React.FC<AchievementCardProps> = ({ achievement }) => {\n  return (\n    <Flex>\n      <AchievementAvatar badge={achievement.badge} />\n      <Details>\n        <AchievementTitle title={achievement.title} />\n        <AchievementDescription description={achievement.description} />\n      </Details>\n      <Flex alignItems=\"center\">\n        <PrizeIcon width=\"18px\" color=\"textSubtle\" mr=\"4px\" />\n        <Text color=\"textSubtle\">{achievement.points.toLocaleString()}</Text>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default AchievementCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useAchievements } from 'state/hooks'\nimport AchievementCard from './AchievementCard'\n\nconst Grid = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 1fr;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n`\n\nconst AchievementsList = () => {\n  const TranslateString = useI18n()\n  const achievements = useAchievements()\n\n  return (\n    <>\n      <Grid>\n        {achievements.map((achievement) => (\n          <AchievementCard key={achievement.id} achievement={achievement} />\n        ))}\n      </Grid>\n      {achievements.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" style={{ height: '64px' }}>\n          <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n            {TranslateString(999, 'No achievements yet!')}\n          </Heading>\n        </Flex>\n      )}\n    </>\n  )\n}\n\nexport default AchievementsList\n","import styled from 'styled-components'\n\nconst ActionColumn = styled.div`\n  flex: none;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 160px;\n\n    & > button {\n      width: 100%;\n    }\n  }\n`\n\nexport default ActionColumn\n","import React from 'react'\nimport { Flex, FlexProps, PrizeIcon, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PointsLabelProps extends FlexProps {\n  points: number\n}\n\nconst PointsLabel: React.FC<PointsLabelProps> = ({ points, ...props }) => {\n  const TranslateString = useI18n()\n  const localePoints = points.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" {...props}>\n      <PrizeIcon mr=\"4px\" color=\"textSubtle\" />\n      <Text color=\"textSubtle\">{TranslateString(999, `${localePoints} points`, { num: localePoints })}</Text>\n    </Flex>\n  )\n}\n\nexport default PointsLabel\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Flex } from '@pancakeswap-libs/uikit'\nimport { Achievement } from 'state/types'\nimport { useToast } from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport { usePointCenterIfoContract } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport ActionColumn from '../ActionColumn'\nimport PointsLabel from './PointsLabel'\nimport AchievementTitle from '../AchievementTitle'\nimport AchievementAvatar from '../AchievementAvatar'\nimport AchievementDescription from '../AchievementDescription'\n\ninterface AchievementRowProps {\n  achievement: Achievement\n  onCollectSuccess?: (achievement: Achievement) => void\n}\n\nconst StyledAchievementRow = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.borderColor};\n  padding-bottom: 16px;\n  padding-top: 16px;\n`\n\nconst Details = styled.div`\n  flex: 1;\n`\n\nconst Body = styled(Flex)`\n  flex-direction: column;\n  flex: 1;\n  margin-left: 8px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    align-items: center;\n    flex-direction: row;\n  }\n`\n\nconst AchievementRow: React.FC<AchievementRowProps> = ({ achievement, onCollectSuccess }) => {\n  const [isCollecting, setIsCollecting] = useState(false)\n  const TranslateString = useI18n()\n  const pointCenterContract = usePointCenterIfoContract()\n  const { account } = useWallet()\n  const { toastError, toastSuccess } = useToast()\n\n  const handleCollectPoints = () => {\n    pointCenterContract.methods\n      .getPoints(achievement.address)\n      .send({ from: account })\n      .on('sending', () => {\n        setIsCollecting(true)\n      })\n      .on('receipt', () => {\n        setIsCollecting(false)\n        onCollectSuccess(achievement)\n        toastSuccess('Points Collected!')\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsCollecting(false)\n      })\n  }\n\n  return (\n    <StyledAchievementRow>\n      <AchievementAvatar badge={achievement.badge} />\n      <Body>\n        <Details>\n          <AchievementTitle title={achievement.title} />\n          <AchievementDescription description={achievement.description} />\n        </Details>\n        <PointsLabel points={achievement.points} px={[0, null, null, '32px']} mb={['16px', null, null, 0]} />\n        <ActionColumn>\n          <Button\n            onClick={handleCollectPoints}\n            isLoading={isCollecting}\n            endIcon={isCollecting ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n            disabled={isCollecting}\n            variant=\"secondary\"\n          >\n            {TranslateString(999, 'Collect')}\n          </Button>\n        </ActionColumn>\n      </Body>\n    </StyledAchievementRow>\n  )\n}\n\nexport default AchievementRow\n","import React, { useEffect, useState } from 'react'\nimport { sumBy } from 'lodash'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport { Card, CardBody, CardHeader, Flex, Heading, PrizeIcon } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useProfile } from 'state/hooks'\nimport { Achievement } from 'state/types'\nimport { addPoints } from 'state/profile'\nimport { addAchievement } from 'state/achievements'\nimport useI18n from 'hooks/useI18n'\nimport { getClaimableIfoData } from 'utils/achievements'\nimport AchievementRow from './AchievementRow'\n\n\nconst ClaimPointsCallout = () => {\n  const [claimableAchievements, setClaimableAchievement] = useState<Achievement[]>([])\n  const TranslateString = useI18n()\n  const dispatch = useAppDispatch()\n  const { profile } = useProfile()\n  const { account } = useWallet()\n\n  useEffect(() => {\n    const fetchIfoClaims = async () => {\n      const ifoData = await getClaimableIfoData(account)\n      setClaimableAchievement(ifoData)\n    }\n\n    if (account) {\n      fetchIfoClaims()\n    }\n  }, [account, dispatch, setClaimableAchievement])\n\n  const handleCollectSuccess = (achievement: Achievement) => {\n    dispatch(addAchievement(achievement))\n    dispatch(addPoints(achievement.points))\n\n    setClaimableAchievement((prevClaimableAchievements) =>\n      prevClaimableAchievements.filter((prevClaimableAchievement) => prevClaimableAchievement.id !== achievement.id),\n    )\n  }\n\n  if (!profile?.isActive) {\n    return null\n  }\n\n  if (claimableAchievements.length === 0) {\n    return null\n  }\n\n  const totalPointsToCollect = sumBy(claimableAchievements, 'points')\n\n  return (\n    <Card isActive mb=\"32px\">\n      <CardHeader>\n        <Flex flexDirection={['column', null, 'row']} justifyContent={['start', null, 'space-between']}>\n          <Flex alignItems=\"center\" mb={['16px', null, 0]}>\n            <PrizeIcon width=\"32px\" mr=\"8px\" />\n            <Heading size=\"lg\">\n              {TranslateString(999, `${totalPointsToCollect} Points to Collect`, { num: totalPointsToCollect })}\n            </Heading>\n          </Flex>\n        </Flex>\n      </CardHeader>\n      <CardBody>\n        {claimableAchievements.map((achievement) => (\n          <AchievementRow key={achievement.address} achievement={achievement} onCollectSuccess={handleCollectSuccess} />\n        ))}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default ClaimPointsCallout\n","import React from 'react'\nimport { BunnyPlaceholderIcon, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ComingSoonProps {\n  children?: React.ReactNode\n}\n\nconst ComingSoon: React.FC<ComingSoonProps> = ({ children }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Flex flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" p=\"24px\">\n      <BunnyPlaceholderIcon width=\"72px\" height=\"72px\" />\n      <Heading as=\"h5\" size=\"md\" color=\"textDisabled\">\n        {children || TranslateString(999, 'Coming Soon!')}\n      </Heading>\n    </Flex>\n  )\n}\n\nexport default ComingSoon\n","import useI18n from 'hooks/useI18n'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { ChevronLeftIcon, Flex, Text, ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\ninterface MenuProps {\n  activeIndex?: number\n}\n\nconst Menu: React.FC<MenuProps> = ({ activeIndex = 0 }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Flex mb=\"24px\">\n        <RouterLink to=\"/teams\">\n          <Flex alignItems=\"center\">\n            <ChevronLeftIcon color=\"primary\" />\n            <Text color=\"primary\">{TranslateString(1038, 'Teams Overview')}</Text>\n          </Flex>\n        </RouterLink>\n      </Flex>\n\n      <Flex mb=\"24px\" justifyContent=\"center\">\n        <ButtonMenu activeIndex={activeIndex} variant=\"subtle\" scale=\"sm\">\n          <ButtonMenuItem as={RouterLink} to=\"/profile/tasks\">\n            {TranslateString(1090, 'Task Center')}\n          </ButtonMenuItem>\n          <ButtonMenuItem as={RouterLink} to=\"/profile\">\n            {TranslateString(1104, 'Public Profile')}\n          </ButtonMenuItem>\n        </ButtonMenu>\n      </Flex>\n    </>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { Card, CardBody, CardHeader, Flex, Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport AchievementsList from './components/AchievementsList'\nimport ClaimPointsCallout from './components/ClaimPointsCallout '\nimport ComingSoon from './components/ComingSoon'\nimport Menu from './components/Menu'\n\nconst TaskCenter = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <Menu />\n      <ClaimPointsCallout />\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1084, 'Earn more points for completing larger quests!')}</Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <AchievementsList />\n        </CardBody>\n      </Card>\n      <Card mb=\"32px\">\n        <CardHeader>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <div>\n              <Heading size=\"lg\" mb=\"8px\">\n                {TranslateString(1090, 'Task Center')}\n              </Heading>\n              <Text as=\"p\">{TranslateString(1088, 'Earn points by completing regular tasks!')}</Text>\n              <Text as=\"p\">\n                {TranslateString(1086, 'Collecting points for these tasks makes them available again.')}\n              </Text>\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <ComingSoon />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default TaskCenter\n","import styled, { DefaultTheme } from 'styled-components'\nimport { CardHeader as UIKitCardHeader } from '@pancakeswap-libs/uikit'\n\nconst getBackground = (theme: DefaultTheme) => {\n  if (theme.isDark) {\n    return 'linear-gradient(139.73deg, #142339 0%, #24243D 47.4%, #37273F 100%)'\n  }\n\n  return 'linear-gradient(139.73deg, #E6FDFF 0%, #EFF4F5 46.87%, #F3EFFF 100%)'\n}\n\nconst CardHeader = styled(UIKitCardHeader)`\n  background: ${({ theme }) => getBackground(theme)};\n  position: relative;\n`\n\nexport default CardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport { Nft } from 'config/constants/types'\n\ninterface CollectibleCardProps {\n  nft: Nft\n}\n\nconst PreviewImage = styled.img`\n  border-radius: 4px;\n  margin-bottom: 8px;\n`\n\nconst CollectibleCard: React.FC<CollectibleCardProps> = ({ nft }) => {\n  return (\n    <div>\n      <PreviewImage src={`/images/nfts/${nft.images.lg}`} />\n      <Text bold mb=\"8px\">\n        {nft.name}\n      </Text>\n      <Text as=\"p\" fontSize=\"12px\" color=\"textSubtle\">\n        {nft.description}\n      </Text>\n    </div>\n  )\n}\n\nexport default CollectibleCard\n","import React from 'react'\nimport { Heading, Text, Flex, ChevronRightIcon } from '@pancakeswap-libs/uikit'\nimport { Link } from 'react-router-dom'\nimport useI18n from 'hooks/useI18n'\nimport { useGetCollectibles } from 'state/hooks'\nimport styled from 'styled-components'\nimport CollectibleCard from './CollectibleCard'\n\nconst CollectibleList = styled.div`\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: repeat(2, 1fr);\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 24px;\n    grid-template-columns: repeat(3, 1fr);\n    padding: 24px 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(4, 1fr);\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`\n\nconst Collectibles = () => {\n  const TranslateString = useI18n()\n  const { nftsInWallet } = useGetCollectibles()\n\n  return (\n    <>\n      <Heading as=\"h4\" size=\"md\" mb=\"8px\">\n        {TranslateString(999, 'Pancake Collectibles')}\n      </Heading>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          'Pancake Collectibles are special ERC-721 NFTs that can be used on the PancakeSwap platform.',\n        )}\n      </Text>\n      <Text as=\"p\">\n        {TranslateString(\n          999,\n          \"NFTs in this user's wallet that aren't approved Pancake Collectibles won't be shown here.\",\n        )}\n      </Text>\n      {nftsInWallet.length > 0 && (\n        <CollectibleList>\n          {nftsInWallet.map((nftInWallet) => (\n            <CollectibleCard key={nftInWallet.identifier} nft={nftInWallet} />\n          ))}\n        </CollectibleList>\n      )}\n      {nftsInWallet.length === 0 && (\n        <Flex justifyContent=\"center\" p=\"32px\">\n          <Text fontSize=\"20px\" bold color=\"textDisabled\">\n            {TranslateString(999, 'No NFTs Found')}\n          </Text>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"flex-end\">\n        <Link to=\"/collectibles\">{TranslateString(999, 'See all approved Pancake Collectibles')}</Link>\n        <ChevronRightIcon />\n      </Flex>\n    </>\n  )\n}\n\nexport default Collectibles\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\nconst SecondaryCard = styled(Text)`\n  border: 2px solid ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n`\n\nSecondaryCard.defaultProps = {\n  p: '24px',\n}\n\nexport default SecondaryCard\n","import React, { ElementType, ReactNode } from 'react'\nimport { Flex, Heading, Text, TextProps } from '@pancakeswap-libs/uikit'\nimport SecondaryCard from './SecondaryCard'\n\ninterface StatBoxProps extends TextProps {\n  icon: ElementType\n  title: ReactNode\n  subtitle: ReactNode\n  isDisabled?: boolean\n}\n\nconst StatBox: React.FC<StatBoxProps> = ({ icon: Icon, title, subtitle, isDisabled = false, ...props }) => {\n  return (\n    <SecondaryCard {...props}>\n      <Flex alignItems=\"start\">\n        <Icon width=\"44px\" mr=\"24px\" color={isDisabled ? 'textDisabled' : 'currentColor'} />\n        <div>\n          <Heading as=\"h3\" size=\"xl\" color={isDisabled ? 'textDisabled' : 'text'}>\n            {title}\n          </Heading>\n          <Text textTransform=\"uppercase\" color={isDisabled ? 'textDisabled' : 'textSubtle'} fontSize=\"12px\" bold>\n            {subtitle}\n          </Text>\n        </div>\n      </Flex>\n    </SecondaryCard>\n  )\n}\n\nexport default StatBox\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport EditProfileModal from './EditProfileModal'\nimport ProfileAvatar, { ProfileAvatarProps } from './ProfileAvatar'\n\nconst EditOverlay = styled.div`\n  background: rgba(0, 0, 0, 0.6) url('/images/camera.svg') no-repeat center center;\n  background-size: 24px;\n  border-radius: 50%;\n  left: 0;\n  height: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  transition: opacity 300ms;\n  width: 100%;\n  z-index: 3;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    background-size: 48px;\n  }\n`\n\nconst StyledEditProfileAvatar = styled.div`\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n\n    ${EditOverlay} {\n      opacity: 1;\n    }\n  }\n`\n\nconst AvatarWrapper = styled.div`\n  height: 64px;\n  width: 64px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 128px;\n    width: 128px;\n  }\n`\n\nconst EditProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\n  const [onEditProfileModal] = useModal(<EditProfileModal />, false)\n\n  return (\n    <StyledEditProfileAvatar onClick={onEditProfileModal}>\n      <AvatarWrapper>\n        <ProfileAvatar profile={profile} />\n      </AvatarWrapper>\n      <EditOverlay />\n    </StyledEditProfileAvatar>\n  )\n}\n\nexport default EditProfileAvatar\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  Card,\n  CardBody,\n  CheckmarkCircleIcon,\n  Flex,\n  Heading,\n  Link,\n  Tag,\n  Text,\n  PrizeIcon,\n  OpenNewIcon,\n  BlockIcon,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useProfile } from 'state/hooks'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport Menu from './components/Menu'\nimport CardHeader from './components/CardHeader'\nimport Collectibles from './components/Collectibles'\nimport WalletNotConnected from './components/WalletNotConnected'\nimport StatBox from './components/StatBox'\nimport EditProfileAvatar from './components/EditProfileAvatar'\nimport AchievementsList from './components/AchievementsList'\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 0 16px;\n  }\n`\n\nconst Username = styled(Heading)`\n  font-size: 16px;\n  line-height: 24px;\n  margin-bottom: 8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 40px;\n    line-height: 44px;\n  }\n`\n\nconst Status = styled.div`\n  position: absolute;\n  right: 24px;\n  top: 24px;\n`\n\nconst ResponsiveText = styled(Text)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n  }\n`\n\nconst AddressLink = styled(Link)`\n  display: inline-block;\n  font-weight: 400;\n  font-size: 12px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 80px;\n  white-space: nowrap;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 16px;\n    width: auto;\n  }\n`\n\nconst Section = styled.div`\n  margin-bottom: 40px;\n`\n\nconst PublicProfile = () => {\n  const { account } = useWallet()\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n\n  if (!account) {\n    return <WalletNotConnected />\n  }\n\n  return (\n    <>\n      <Menu activeIndex={1} />\n      <div>\n        <Card>\n          <CardHeader>\n            <Flex alignItems={['start', null, 'center']} flexDirection={['column', null, 'row']}>\n              <EditProfileAvatar profile={profile} />\n              <Content>\n                <Username>{`@${profile.username}`}</Username>\n                <Flex alignItems=\"center\">\n                  <AddressLink href={`https://bscscan.com/address/${account}`} color=\"text\" external>\n                    {account}\n                    <OpenNewIcon ml=\"4px\" />\n                  </AddressLink>\n                </Flex>\n                <ResponsiveText bold>{profile.team.name}</ResponsiveText>\n              </Content>\n            </Flex>\n            <Status>\n              {profile.isActive ? (\n                <Tag startIcon={<CheckmarkCircleIcon width=\"18px\" />} outline>\n                  {TranslateString(698, 'Active')}\n                </Tag>\n              ) : (\n                <Tag variant=\"failure\" startIcon={<BlockIcon width=\"18px\" />} outline>\n                  {TranslateString(999, 'Paused')}\n                </Tag>\n              )}\n            </Status>\n          </CardHeader>\n          <CardBody>\n            <StatBox icon={PrizeIcon} title={profile.points} subtitle={TranslateString(999, 'Points')} mb=\"24px\" />\n            <Section>\n              <Heading as=\"h4\" size=\"md\" mb=\"16px\">\n                {TranslateString(1092, 'Achievements')}\n              </Heading>\n              <AchievementsList />\n            </Section>\n            <Collectibles />\n          </CardBody>\n        </Card>\n      </div>\n    </>\n  )\n}\n\nexport default PublicProfile\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport { useFetchAchievements, useProfile } from 'state/hooks'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport ProfileCreation from './ProfileCreation'\nimport Header from './components/Header'\nimport TaskCenter from './TaskCenter'\nimport PublicProfile from './PublicProfile'\n\nconst Profile = () => {\n  const { isInitialized, isLoading, hasProfile } = useProfile()\n  const { account } = useWallet()\n\n  useFetchAchievements()\n\n  if (!isInitialized || isLoading) {\n    return <PageLoader />\n  }\n\n  if (account && !hasProfile) {\n    return (\n      <Page>\n        <ProfileCreation />\n      </Page>\n    )\n  }\n\n  return (\n    <Page>\n      <Header />\n      <Route exact path=\"/profile\">\n        <PublicProfile />\n      </Route>\n      <Route path=\"/profile/tasks\">\n        <TaskCenter />\n      </Route>\n    </Page>\n  )\n}\n\nexport default Profile\n"],"sourceRoot":""}