{"ast":null,"code":"import _objectSpread from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectWithoutProperties from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Text}from'@pancakeswap-libs/uikit';import BigNumber from'bignumber.js';import useI18n from'hooks/useI18n';var PercentageOfTotal=function PercentageOfTotal(_ref){var userAmount=_ref.userAmount,totalAmount=_ref.totalAmount,props=_objectWithoutProperties(_ref,[\"userAmount\",\"totalAmount\"]);var TranslateString=useI18n();var percentOfUserContribution=totalAmount.isGreaterThan(0)?userAmount.div(totalAmount).times(100).toNumber():new BigNumber(0);var percentOfUserDisplay=percentOfUserContribution.toLocaleString(undefined,{maximumFractionDigits:5});return/*#__PURE__*/_jsx(Text,_objectSpread(_objectSpread({fontSize:\"14px\",color:\"textSubtle\"},props),{},{children:TranslateString(999,\"\".concat(percentOfUserDisplay,\"% of total\"))}));};export default PercentageOfTotal;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/PercentageOfTotal.tsx"],"names":["React","Text","BigNumber","useI18n","PercentageOfTotal","userAmount","totalAmount","props","TranslateString","percentOfUserContribution","isGreaterThan","div","times","toNumber","percentOfUserDisplay","toLocaleString","undefined","maximumFractionDigits"],"mappings":"kVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAgC,yBAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAOA,GAAMC,CAAAA,iBAAmD,CAAG,QAAtDA,CAAAA,iBAAsD,MAA2C,IAAxCC,CAAAA,UAAwC,MAAxCA,UAAwC,CAA5BC,WAA4B,MAA5BA,WAA4B,CAAZC,KAAY,6DACrG,GAAMC,CAAAA,eAAe,CAAGL,OAAO,EAA/B,CACA,GAAMM,CAAAA,yBAAyB,CAAGH,WAAW,CAACI,aAAZ,CAA0B,CAA1B,EAC9BL,UAAU,CAACM,GAAX,CAAeL,WAAf,EAA4BM,KAA5B,CAAkC,GAAlC,EAAuCC,QAAvC,EAD8B,CAE9B,GAAIX,CAAAA,SAAJ,CAAc,CAAd,CAFJ,CAGA,GAAMY,CAAAA,oBAAoB,CAAGL,yBAAyB,CAACM,cAA1B,CAAyCC,SAAzC,CAAoD,CAAEC,qBAAqB,CAAE,CAAzB,CAApD,CAA7B,CAEA,mBACE,KAAC,IAAD,8BAAM,QAAQ,CAAC,MAAf,CAAsB,KAAK,CAAC,YAA5B,EAA6CV,KAA7C,eACGC,eAAe,CAAC,GAAD,WAASM,oBAAT,eADlB,GADF,CAKD,CAZD,CAcA,cAAeV,CAAAA,iBAAf","sourcesContent":["import React from 'react'\nimport { Text, TextProps } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\n\ninterface PercentageOfTotalProps extends TextProps {\n  userAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst PercentageOfTotal: React.FC<PercentageOfTotalProps> = ({ userAmount, totalAmount, ...props }) => {\n  const TranslateString = useI18n()\n  const percentOfUserContribution = totalAmount.isGreaterThan(0)\n    ? userAmount.div(totalAmount).times(100).toNumber()\n    : new BigNumber(0)\n  const percentOfUserDisplay = percentOfUserContribution.toLocaleString(undefined, { maximumFractionDigits: 5 })\n\n  return (\n    <Text fontSize=\"14px\" color=\"textSubtle\" {...props}>\n      {TranslateString(999, `${percentOfUserDisplay}% of total`)}\n    </Text>\n  )\n}\n\nexport default PercentageOfTotal\n"]},"metadata":{},"sourceType":"module"}