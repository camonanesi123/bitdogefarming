{"ast":null,"code":"import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useEffect,useReducer,useRef}from'react';import{noop}from'lodash';import{useToast}from'state/hooks';import{useWallet}from'@binance-chain/bsc-use-wallet';var initialState={approvalState:'idle',approvalReceipt:null,approvalError:null,confirmState:'idle',confirmReceipt:null,confirmError:null};var reducer=function reducer(state,actions){switch(actions.type){case'requires_approval':return _objectSpread(_objectSpread({},state),{},{approvalState:'success'});case'approve_sending':return _objectSpread(_objectSpread({},state),{},{approvalState:'loading'});case'approve_receipt':return _objectSpread(_objectSpread({},state),{},{approvalState:'success',approvalReceipt:actions.payload});case'approve_error':return _objectSpread(_objectSpread({},state),{},{approvalState:'fail',approvalError:actions.payload});case'confirm_sending':return _objectSpread(_objectSpread({},state),{},{confirmState:'loading'});case'confirm_receipt':return _objectSpread(_objectSpread({},state),{},{confirmState:'success',confirmReceipt:actions.payload});case'confirm_error':return _objectSpread(_objectSpread({},state),{},{confirmState:'fail',confirmError:actions.payload});default:return state;}};var useApproveConfirmTransaction=function useApproveConfirmTransaction(_ref){var onApprove=_ref.onApprove,onConfirm=_ref.onConfirm,onRequiresApproval=_ref.onRequiresApproval,_ref$onSuccess=_ref.onSuccess,onSuccess=_ref$onSuccess===void 0?noop:_ref$onSuccess;// const { account } = useWeb3React()\nvar _useWallet=useWallet(),account=_useWallet.account;var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var handlePreApprove=useRef(onRequiresApproval);var _useToast=useToast(),toastError=_useToast.toastError;// Check if approval is necessary, re-check if account changes\nuseEffect(function(){if(account&&handlePreApprove.current){handlePreApprove.current().then(function(result){if(result){dispatch({type:'requires_approval'});}});}},[account,handlePreApprove,dispatch]);return{isApproving:state.approvalState==='loading',isApproved:state.approvalState==='success',isConfirming:state.confirmState==='loading',isConfirmed:state.confirmState==='success',approvalReceipt:state.approvalReceipt,approvalError:state.approvalError,confirmReceipt:state.confirmReceipt,confirmError:state.confirmError,handleApprove:function handleApprove(){onApprove().on('sending',function(){dispatch({type:'approve_sending'});}).on('receipt',function(payload){dispatch({type:'approve_receipt',payload:payload});}).on('error',function(error){dispatch({type:'approve_error',payload:error});console.error('An error occurred approving transaction:',error);toastError('An error occurred approving transaction');});},handleConfirm:function handleConfirm(){onConfirm().on('sending',function(){dispatch({type:'confirm_sending'});}).on('receipt',function(payload){dispatch({type:'confirm_receipt',payload:payload});onSuccess(state);}).on('error',function(error){dispatch({type:'confirm_error',payload:error});console.error('An error occurred confirming transaction:',error);toastError('An error occurred confirming transaction');});}};};export default useApproveConfirmTransaction;","map":{"version":3,"sources":["D:/task159/frontend/src/hooks/useApproveConfirmTransaction.ts"],"names":["useEffect","useReducer","useRef","noop","useToast","useWallet","initialState","approvalState","approvalReceipt","approvalError","confirmState","confirmReceipt","confirmError","reducer","state","actions","type","payload","useApproveConfirmTransaction","onApprove","onConfirm","onRequiresApproval","onSuccess","account","dispatch","handlePreApprove","toastError","current","then","result","isApproving","isApproved","isConfirming","isConfirmed","handleApprove","on","error","console","handleConfirm"],"mappings":"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","sourcesContent":["import { useEffect, useReducer, useRef } from 'react'\nimport { noop } from 'lodash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport { useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype Web3Payload = Record<string, unknown> | null\n\ntype LoadingState = 'idle' | 'loading' | 'success' | 'fail'\n\ntype Action =\n  | { type: 'requires_approval' }\n  | { type: 'approve_sending' }\n  | { type: 'approve_receipt'; payload: Web3Payload }\n  | { type: 'approve_error'; payload: Web3Payload }\n  | { type: 'confirm_sending' }\n  | { type: 'confirm_receipt'; payload: Web3Payload }\n  | { type: 'confirm_error'; payload: Web3Payload }\n\ninterface State {\n  approvalState: LoadingState\n  approvalReceipt: Web3Payload\n  approvalError: Web3Payload\n  confirmState: LoadingState\n  confirmReceipt: Web3Payload\n  confirmError: Web3Payload\n}\n\nconst initialState: State = {\n  approvalState: 'idle',\n  approvalReceipt: null,\n  approvalError: null,\n  confirmState: 'idle',\n  confirmReceipt: null,\n  confirmError: null,\n}\n\nconst reducer = (state: State, actions: Action): State => {\n  switch (actions.type) {\n    case 'requires_approval':\n      return {\n        ...state,\n        approvalState: 'success',\n      }\n    case 'approve_sending':\n      return {\n        ...state,\n        approvalState: 'loading',\n      }\n    case 'approve_receipt':\n      return {\n        ...state,\n        approvalState: 'success',\n        approvalReceipt: actions.payload,\n      }\n    case 'approve_error':\n      return {\n        ...state,\n        approvalState: 'fail',\n        approvalError: actions.payload,\n      }\n    case 'confirm_sending':\n      return {\n        ...state,\n        confirmState: 'loading',\n      }\n    case 'confirm_receipt':\n      return {\n        ...state,\n        confirmState: 'success',\n        confirmReceipt: actions.payload,\n      }\n    case 'confirm_error':\n      return {\n        ...state,\n        confirmState: 'fail',\n        confirmError: actions.payload,\n      }\n    default:\n      return state\n  }\n}\n\ntype ContractHandler = () => any\n\ninterface ApproveConfirmTransaction {\n  onApprove: ContractHandler\n  onConfirm: ContractHandler\n  onRequiresApproval?: () => Promise<boolean>\n  onSuccess: (state: State) => void\n}\n\nconst useApproveConfirmTransaction = ({\n  onApprove,\n  onConfirm,\n  onRequiresApproval,\n  onSuccess = noop,\n}: ApproveConfirmTransaction) => {\n  // const { account } = useWeb3React()\n  const { account } = useWallet()\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const handlePreApprove = useRef(onRequiresApproval)\n  const { toastError } = useToast()\n\n  // Check if approval is necessary, re-check if account changes\n  useEffect(() => {\n    if (account && handlePreApprove.current) {\n      handlePreApprove.current().then((result) => {\n        if (result) {\n          dispatch({ type: 'requires_approval' })\n        }\n      })\n    }\n  }, [account, handlePreApprove, dispatch])\n\n  return {\n    isApproving: state.approvalState === 'loading',\n    isApproved: state.approvalState === 'success',\n    isConfirming: state.confirmState === 'loading',\n    isConfirmed: state.confirmState === 'success',\n    approvalReceipt: state.approvalReceipt,\n    approvalError: state.approvalError,\n    confirmReceipt: state.confirmReceipt,\n    confirmError: state.confirmError,\n    handleApprove: () => {\n      onApprove()\n        .on('sending', () => {\n          dispatch({ type: 'approve_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'approve_receipt', payload })\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'approve_error', payload: error })\n          console.error('An error occurred approving transaction:', error)\n          toastError('An error occurred approving transaction')\n        })\n    },\n    handleConfirm: () => {\n      onConfirm()\n        .on('sending', () => {\n          dispatch({ type: 'confirm_sending' })\n        })\n        .on('receipt', (payload: Web3Payload) => {\n          dispatch({ type: 'confirm_receipt', payload })\n          onSuccess(state)\n        })\n        .on('error', (error: Web3Payload) => {\n          dispatch({ type: 'confirm_error', payload: error })\n          console.error('An error occurred confirming transaction:', error)\n          toastError('An error occurred confirming transaction')\n        })\n    },\n  }\n}\n\nexport default useApproveConfirmTransaction\n"]},"metadata":{},"sourceType":"module"}