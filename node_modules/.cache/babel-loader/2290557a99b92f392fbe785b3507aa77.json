{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null\n}; // Thunks\n\nexport const fetchPrices = createAsyncThunk('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/tokens');\n  const data = await response.json(); // Return normalized token names\n\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return { ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price)\n      };\n    }, {})\n  };\n});\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchPrices.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchPrices.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.lastUpdated = action.payload.updated_at;\n      state.data = action.payload.data;\n    });\n  }\n});\nexport default pricesSlice.reducer;","map":{"version":3,"sources":["D:/task159/frontend/src/state/prices/index.ts"],"names":["createAsyncThunk","createSlice","initialState","isLoading","lastUpdated","data","fetchPrices","response","fetch","json","updated_at","Object","keys","reduce","accum","token","toLowerCase","parseFloat","price","pricesSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","reducer"],"mappings":"AAAA;AACA,SAASA,gBAAT,EAA2BC,WAA3B,QAA6D,kBAA7D;AAGA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,SAAS,EAAE,KADoB;AAE/BC,EAAAA,WAAW,EAAE,IAFkB;AAG/BC,EAAAA,IAAI,EAAE;AAHyB,CAAjC,C,CAMA;;AACA,OAAO,MAAMC,WAAW,GAAGN,gBAAgB,CAAgB,cAAhB,EAAgC,YAAY;AACrF,QAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAD,CAA5B;AACA,QAAMH,IAAI,GAAI,MAAME,QAAQ,CAACE,IAAT,EAApB,CAFqF,CAGrF;;AACA,SAAO;AACLC,IAAAA,UAAU,EAAEL,IAAI,CAACK,UADZ;AAELL,IAAAA,IAAI,EAAEM,MAAM,CAACC,IAAP,CAAYP,IAAI,CAACA,IAAjB,EAAuBQ,MAAvB,CAA8B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpD,aAAO,EACL,GAAGD,KADE;AAEL,SAACC,KAAK,CAACC,WAAN,EAAD,GAAuBC,UAAU,CAACZ,IAAI,CAACA,IAAL,CAAUU,KAAV,EAAiBG,KAAlB;AAF5B,OAAP;AAID,KALK,EAKH,EALG;AAFD,GAAP;AASD,CAb0C,CAApC;AAeP,OAAO,MAAMC,WAAW,GAAGlB,WAAW,CAAC;AACrCmB,EAAAA,IAAI,EAAE,QAD+B;AAErClB,EAAAA,YAFqC;AAGrCmB,EAAAA,QAAQ,EAAE,EAH2B;AAIrCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBlB,WAAW,CAACmB,OAA5B,EAAsCC,KAAD,IAAW;AAC9CA,MAAAA,KAAK,CAACvB,SAAN,GAAkB,IAAlB;AACD,KAFD;AAGAoB,IAAAA,OAAO,CAACC,OAAR,CAAgBlB,WAAW,CAACqB,SAA5B,EAAuC,CAACD,KAAD,EAAQE,MAAR,KAAiD;AACtFF,MAAAA,KAAK,CAACvB,SAAN,GAAkB,KAAlB;AACAuB,MAAAA,KAAK,CAACtB,WAAN,GAAoBwB,MAAM,CAACC,OAAP,CAAenB,UAAnC;AACAgB,MAAAA,KAAK,CAACrB,IAAN,GAAauB,MAAM,CAACC,OAAP,CAAexB,IAA5B;AACD,KAJD;AAKD;AAboC,CAAD,CAA/B;AAgBP,eAAec,WAAW,CAACW,OAA3B","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/tokens')\n  const data = (await response.json()) as PriceApiResponse\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n"]},"metadata":{},"sourceType":"module"}