{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import BigNumber from'bignumber.js';import{Modal,ModalBody,Text,Image,Button,BalanceInput,Flex}from'@pancakeswap-libs/uikit';import{ethers}from'ethers';import{PoolIds}from'config/constants/types';import useI18n from'hooks/useI18n';import{getBalanceNumber,formatNumber}from'utils/formatBalance';import{getAddress}from'utils/addressHelpers';import ApproveConfirmButtons from'views/Profile/components/ApproveConfirmButtons';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{useERC20}from'hooks/useContract';import{useWallet}from'@binance-chain/bsc-use-wallet';var multiplierValues=[0.1,0.25,0.5,0.75,1];var ContributeModal=function ContributeModal(_ref){var poolId=_ref.poolId,ifo=_ref.ifo,publicIfoData=_ref.publicIfoData,walletIfoData=_ref.walletIfoData,userCurrencyBalance=_ref.userCurrencyBalance,onDismiss=_ref.onDismiss,_onSuccess=_ref.onSuccess;var publicPoolCharacteristics=publicIfoData[poolId];var userPoolCharacteristics=walletIfoData[poolId];var currency=ifo.currency;var limitPerUserInLP=publicPoolCharacteristics.limitPerUserInLP;var amountTokenCommittedInLP=userPoolCharacteristics.amountTokenCommittedInLP;var contract=walletIfoData.contract;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];// const { account } = useWeb3React()\nvar _useWallet=useWallet(),account=_useWallet.account;var raisingTokenContract=useERC20(getAddress(currency.address));var TranslateString=useI18n();var valueWithTokenDecimals=new BigNumber(value).times(new BigNumber(10).pow(18));var _useApproveConfirmTra=useApproveConfirmTransaction({onRequiresApproval:function(){var _onRequiresApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,currentAllowance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return raisingTokenContract.methods.allowance(account,contract.options.address).call();case 3:response=_context.sent;currentAllowance=new BigNumber(response);return _context.abrupt(\"return\",currentAllowance.gt(0));case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));function onRequiresApproval(){return _onRequiresApproval.apply(this,arguments);}return onRequiresApproval;}(),onApprove:function onApprove(){return raisingTokenContract.methods.approve(contract.options.address,ethers.constants.MaxUint256).send({from:account});},onConfirm:function onConfirm(){return contract.methods.depositPool(valueWithTokenDecimals.toString(),poolId===PoolIds.poolBasic?0:1).send({from:account});},onSuccess:function(){var _onSuccess2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:onDismiss();_onSuccess(valueWithTokenDecimals);case 2:case\"end\":return _context2.stop();}}},_callee2);}));function onSuccess(){return _onSuccess2.apply(this,arguments);}return onSuccess;}()}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirmed=_useApproveConfirmTra.isConfirmed,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;var maximumLpCommitable=function(){if(limitPerUserInLP.isGreaterThan(0)){return limitPerUserInLP.minus(amountTokenCommittedInLP).isLessThanOrEqualTo(userCurrencyBalance)?limitPerUserInLP:userCurrencyBalance;}return userCurrencyBalance;}();return/*#__PURE__*/_jsx(Modal,{title:\"Contribute \".concat(currency.symbol),onDismiss:onDismiss,children:/*#__PURE__*/_jsxs(ModalBody,{maxWidth:\"320px\",children:[limitPerUserInLP.isGreaterThan(0)&&/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:[/*#__PURE__*/_jsx(Text,{children:TranslateString(999,'Max. LP token entry')}),/*#__PURE__*/_jsx(Text,{children:getBalanceNumber(limitPerUserInLP,currency.decimals)})]}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"8px\",children:[/*#__PURE__*/_jsx(Text,{children:TranslateString(999,'Commit:')}),/*#__PURE__*/_jsxs(Flex,{flexGrow:1,justifyContent:\"flex-end\",children:[/*#__PURE__*/_jsx(Image,{src:\"/images/farms/\".concat(currency.symbol.split(' ')[0].toLocaleLowerCase(),\".png\"),width:24,height:24}),/*#__PURE__*/_jsx(Text,{children:currency.symbol})]})]}),/*#__PURE__*/_jsx(BalanceInput,{value:value,currencyValue:publicIfoData.currencyPriceInUSD.times(value||0).toFixed(2),onChange:function onChange(e){return setValue(e.currentTarget.value);},isWarning:valueWithTokenDecimals.isGreaterThan(maximumLpCommitable),mb:\"8px\"}),/*#__PURE__*/_jsxs(Text,{color:\"textSubtle\",textAlign:\"right\",fontSize:\"12px\",mb:\"16px\",children:[\"Balance: \",formatNumber(getBalanceNumber(userCurrencyBalance,currency.decimals),2,5)]}),/*#__PURE__*/_jsx(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:multiplierValues.map(function(multiplierValue,index){return/*#__PURE__*/_jsx(Button,{scale:\"xs\",variant:\"tertiary\",onClick:function onClick(){return setValue(getBalanceNumber(maximumLpCommitable.times(multiplierValue)).toString());},mr:index<multiplierValues.length-1?'8px':0,children:TranslateString(999,\"\".concat(multiplierValue*100,\"%\"))},multiplierValue);})}),/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",fontSize:\"12px\",mb:\"24px\",children:TranslateString(999,'If you donâ€™t commit enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.')}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isConfirmed||isConfirming||isApproved,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed||valueWithTokenDecimals.isNaN()||valueWithTokenDecimals.eq(0),isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm})]})});};export default ContributeModal;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/ContributeModal.tsx"],"names":["React","useState","BigNumber","Modal","ModalBody","Text","Image","Button","BalanceInput","Flex","ethers","PoolIds","useI18n","getBalanceNumber","formatNumber","getAddress","ApproveConfirmButtons","useApproveConfirmTransaction","useERC20","useWallet","multiplierValues","ContributeModal","poolId","ifo","publicIfoData","walletIfoData","userCurrencyBalance","onDismiss","onSuccess","publicPoolCharacteristics","userPoolCharacteristics","currency","limitPerUserInLP","amountTokenCommittedInLP","contract","value","setValue","account","raisingTokenContract","address","TranslateString","valueWithTokenDecimals","times","pow","onRequiresApproval","methods","allowance","options","call","response","currentAllowance","gt","onApprove","approve","constants","MaxUint256","send","from","onConfirm","depositPool","toString","poolBasic","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","maximumLpCommitable","isGreaterThan","minus","isLessThanOrEqualTo","symbol","decimals","split","toLocaleLowerCase","currencyPriceInUSD","toFixed","e","currentTarget","map","multiplierValue","index","length","isNaN","eq"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Modal, ModalBody, Text, Image, Button, BalanceInput, Flex } from '@pancakeswap-libs/uikit'\nimport { ethers } from 'ethers'\nimport { PoolIds, Ifo } from 'config/constants/types'\nimport { WalletIfoData, PublicIfoData } from 'hooks/ifo/types'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { useERC20 } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ninterface Props {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n  userCurrencyBalance: BigNumber\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst multiplierValues = [0.1, 0.25, 0.5, 0.75, 1]\n\nconst ContributeModal: React.FC<Props> = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  userCurrencyBalance,\n  onDismiss,\n  onSuccess,\n}) => {\n  const publicPoolCharacteristics = publicIfoData[poolId]\n  const userPoolCharacteristics = walletIfoData[poolId]\n\n  const { currency } = ifo\n  const { limitPerUserInLP } = publicPoolCharacteristics\n  const { amountTokenCommittedInLP } = userPoolCharacteristics\n  const { contract } = walletIfoData\n  const [value, setValue] = useState('')\n  // const { account } = useWeb3React()\n  const { account } = useWallet()\n  const raisingTokenContract = useERC20(getAddress(currency.address))\n  const TranslateString = useI18n()\n  const valueWithTokenDecimals = new BigNumber(value).times(new BigNumber(10).pow(18))\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await raisingTokenContract.methods.allowance(account, contract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gt(0)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return raisingTokenContract.methods\n        .approve(contract.options.address, ethers.constants.MaxUint256)\n        .send({ from: account })\n    },\n    onConfirm: () => {\n      return contract.methods\n        .depositPool(valueWithTokenDecimals.toString(), poolId === PoolIds.poolBasic ? 0 : 1)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      onDismiss()\n      onSuccess(valueWithTokenDecimals)\n    },\n  })\n\n  const maximumLpCommitable = (() => {\n    if (limitPerUserInLP.isGreaterThan(0)) {\n      return limitPerUserInLP.minus(amountTokenCommittedInLP).isLessThanOrEqualTo(userCurrencyBalance)\n        ? limitPerUserInLP\n        : userCurrencyBalance\n    }\n    return userCurrencyBalance\n  })()\n\n  return (\n    <Modal title={`Contribute ${currency.symbol}`} onDismiss={onDismiss}>\n      <ModalBody maxWidth=\"320px\">\n        {limitPerUserInLP.isGreaterThan(0) && (\n          <Flex justifyContent=\"space-between\" mb=\"16px\">\n            <Text>{TranslateString(999, 'Max. LP token entry')}</Text>\n            <Text>{getBalanceNumber(limitPerUserInLP, currency.decimals)}</Text>\n          </Flex>\n        )}\n        <Flex justifyContent=\"space-between\" mb=\"8px\">\n          <Text>{TranslateString(999, 'Commit:')}</Text>\n          <Flex flexGrow={1} justifyContent=\"flex-end\">\n            <Image\n              src={`/images/farms/${currency.symbol.split(' ')[0].toLocaleLowerCase()}.png`}\n              width={24}\n              height={24}\n            />\n            <Text>{currency.symbol}</Text>\n          </Flex>\n        </Flex>\n        <BalanceInput\n          value={value}\n          currencyValue={publicIfoData.currencyPriceInUSD.times(value || 0).toFixed(2)}\n          onChange={(e) => setValue(e.currentTarget.value)}\n          isWarning={valueWithTokenDecimals.isGreaterThan(maximumLpCommitable)}\n          mb=\"8px\"\n        />\n        <Text color=\"textSubtle\" textAlign=\"right\" fontSize=\"12px\" mb=\"16px\">\n          Balance: {formatNumber(getBalanceNumber(userCurrencyBalance, currency.decimals), 2, 5)}\n        </Text>\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          {multiplierValues.map((multiplierValue, index) => (\n            <Button\n              key={multiplierValue}\n              scale=\"xs\"\n              variant=\"tertiary\"\n              onClick={() => setValue(getBalanceNumber(maximumLpCommitable.times(multiplierValue)).toString())}\n              mr={index < multiplierValues.length - 1 ? '8px' : 0}\n            >\n              {TranslateString(999, `${multiplierValue * 100}%`)}\n            </Button>\n          ))}\n        </Flex>\n        <Text color=\"textSubtle\" fontSize=\"12px\" mb=\"24px\">\n          {TranslateString(\n            999,\n            'If you donâ€™t commit enough LP tokens, you may not receive any IFO tokens at all and will only receive a full refund of your LP tokens.',\n          )}\n        </Text>\n        <ApproveConfirmButtons\n          isApproveDisabled={isConfirmed || isConfirming || isApproved}\n          isApproving={isApproving}\n          isConfirmDisabled={\n            !isApproved || isConfirmed || valueWithTokenDecimals.isNaN() || valueWithTokenDecimals.eq(0)\n          }\n          isConfirming={isConfirming}\n          onApprove={handleApprove}\n          onConfirm={handleConfirm}\n        />\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n"]},"metadata":{},"sourceType":"module"}