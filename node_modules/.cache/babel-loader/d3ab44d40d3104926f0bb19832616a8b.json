{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hexia\\\\Desktop\\\\pancake_fork\\\\frontend\\\\src\\\\views\\\\Profile\\\\ProfileCreation\\\\UserName.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport BigNumber from 'bignumber.js';\nimport { Card, CardBody, Heading, Text, Input as UIKitInput, Button, AutoRenewIcon, CheckmarkIcon, Flex, WarningIcon, useModal, Skeleton, Checkbox } from '@pancakeswap-libs/uikit';\nimport { useToast } from 'state/hooks';\nimport useWeb3 from 'hooks/useWeb3';\nimport useI18n from 'hooks/useI18n';\nimport useHasCakeBalance from 'hooks/useHasCakeBalance';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal';\nimport useProfileCreation from './contexts/hook';\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config';\nvar ExistingUserState;\n\n(function (ExistingUserState) {\n  ExistingUserState[\"IDLE\"] = \"idle\";\n  ExistingUserState[\"CREATED\"] = \"created\";\n  ExistingUserState[\"NEW\"] = \"new\";\n})(ExistingUserState || (ExistingUserState = {}));\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE;\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18));\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`;\n_c = InputWrap;\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`;\n_c2 = Input;\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`;\n_c3 = Indicator;\n\nconst UserName = () => {\n  _s();\n\n  const [isAcknowledged, setIsAcknowledged] = useState(false);\n  const {\n    teamId,\n    selectedNft,\n    userName,\n    actions,\n    minimumCakeRequired,\n    allowance\n  } = useProfileCreation();\n  const TranslateString = useI18n();\n  const {\n    account\n  } = useWallet(); // const { library } = useWeb3React()\n\n  const {\n    toastError\n  } = useToast();\n  const web3 = useWeb3();\n  const [existingUserState, setExistingUserState] = useState(ExistingUserState.NEW);\n  const [isValid, setIsValid] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister);\n  const [onPresentConfirmProfileCreation] = useModal( /*#__PURE__*/_jsxDEV(ConfirmProfileCreationModal, {\n    userName: userName,\n    selectedNft: selectedNft,\n    account: account,\n    teamId: teamId,\n    minimumCakeRequired: minimumCakeRequired,\n    allowance: allowance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), false);\n  const isUserCreated = existingUserState === ExistingUserState.CREATED;\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    actions.setUserName(value);\n\n    if (value.length >= 3 && value.length <= 15) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true);\n      const signature = await web3.eth.personal.sign(userName, account, null); // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature\n        })\n      });\n      console.log(response.ok);\n\n      if (!response.ok) {\n        setExistingUserState(ExistingUserState.CREATED);\n      } else {\n        var _data$error;\n\n        const data = await response.json();\n        toastError(data === null || data === void 0 ? void 0 : (_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.message);\n      }\n    } catch (error) {\n      toastError((error === null || error === void 0 ? void 0 : error.message) ? error.message : JSON.stringify(error));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"20px\",\n      color: \"textSubtle\",\n      bold: true,\n      children: TranslateString(999, `Step ${4}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      size: \"xl\",\n      mb: \"24px\",\n      children: TranslateString(1110, 'Set Your Name')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      mb: \"24px\",\n      children: TranslateString(999, 'This name will be shown in team leaderboards and search results as long as your profile is active.')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      mb: \"24px\",\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h4\",\n          size: \"lg\",\n          mb: \"8px\",\n          children: TranslateString(1110, 'Set Your Name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"p\",\n          color: \"textSubtle\",\n          mb: \"24px\",\n          children: TranslateString(840, 'Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), existingUserState === ExistingUserState.IDLE ? /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: \"40px\",\n          width: \"240px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(InputWrap, {\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            onChange: handleChange,\n            isWarning: userName && !isValid,\n            isSuccess: userName && isValid,\n            minLength: USERNAME_MIN_LENGTH,\n            maxLength: USERNAME_MAX_LENGTH,\n            disabled: isUserCreated,\n            placeholder: TranslateString(1094, 'Enter your name...'),\n            value: userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Indicator, {\n            children: [isLoading && /*#__PURE__*/_jsxDEV(AutoRenewIcon, {\n              spin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 31\n            }, this), !isLoading && isValid && userName && /*#__PURE__*/_jsxDEV(CheckmarkIcon, {\n              color: \"success\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 55\n            }, this), !isLoading && !isValid && userName && /*#__PURE__*/_jsxDEV(WarningIcon, {\n              color: \"failure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"textSubtle\",\n          fontSize: \"14px\",\n          py: \"4px\",\n          mb: \"16px\",\n          style: {\n            minHeight: '30px'\n          },\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"p\",\n          color: \"failure\",\n          mb: \"8px\",\n          children: TranslateString(1100, \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"checkbox\",\n          style: {\n            display: 'block',\n            cursor: 'pointer',\n            marginBottom: '24px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                id: \"checkbox\",\n                scale: \"sm\",\n                checked: isAcknowledged,\n                onChange: handleAcknowledge\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              ml: \"8px\",\n              children: TranslateString(1096, 'I understand that people can view my wallet if they know my username')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirm,\n          disabled: !isValid || isUserCreated || isLoading || !isAcknowledged,\n          children: TranslateString(464, 'Confirm')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onPresentConfirmProfileCreation,\n      disabled: !isValid || !isUserCreated,\n      children: TranslateString(842, 'Complete Profile')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), !hasMinimumCakeRequired && /*#__PURE__*/_jsxDEV(Text, {\n      color: \"failure\",\n      mt: \"16px\",\n      children: TranslateString(1098, `A minimum of ${REGISTER_COST} DBALL is required`, {\n        num: REGISTER_COST\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserName, \"PdHl/YbPpoouO99oYlS48rrMcwc=\", false, function () {\n  return [useProfileCreation, useI18n, useWallet, useToast, useWeb3, useHasCakeBalance, useModal];\n});\n\n_c4 = UserName;\nexport default UserName;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InputWrap\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Indicator\");\n$RefreshReg$(_c4, \"UserName\");","map":{"version":3,"sources":["C:/Users/hexia/Desktop/pancake_fork/frontend/src/views/Profile/ProfileCreation/UserName.tsx"],"names":["React","useState","styled","BigNumber","Card","CardBody","Heading","Text","Input","UIKitInput","Button","AutoRenewIcon","CheckmarkIcon","Flex","WarningIcon","useModal","Skeleton","Checkbox","useToast","useWeb3","useI18n","useHasCakeBalance","useWallet","ConfirmProfileCreationModal","useProfileCreation","USERNAME_MIN_LENGTH","USERNAME_MAX_LENGTH","REGISTER_COST","ExistingUserState","profileApiUrl","process","env","REACT_APP_API_PROFILE","minimumCakeToRegister","multipliedBy","pow","InputWrap","div","Indicator","UserName","isAcknowledged","setIsAcknowledged","teamId","selectedNft","userName","actions","minimumCakeRequired","allowance","TranslateString","account","toastError","web3","existingUserState","setExistingUserState","NEW","isValid","setIsValid","isLoading","setIsLoading","message","setMessage","hasMinimumCakeRequired","onPresentConfirmProfileCreation","isUserCreated","CREATED","handleChange","event","value","target","setUserName","length","handleConfirm","signature","eth","personal","sign","response","fetch","method","headers","body","JSON","stringify","address","username","console","log","ok","data","json","error","handleAcknowledge","IDLE","minHeight","display","cursor","marginBottom","flex","num"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport {\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Input as UIKitInput,\n  Button,\n  AutoRenewIcon,\n  CheckmarkIcon,\n  Flex,\n  WarningIcon,\n  useModal,\n  Skeleton,\n  Checkbox,\n} from '@pancakeswap-libs/uikit'\nimport { parseISO, formatDistance } from 'date-fns'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToast } from 'state/hooks'\nimport useWeb3 from 'hooks/useWeb3'\nimport useI18n from 'hooks/useI18n'\nimport useHasCakeBalance from 'hooks/useHasCakeBalance'\nimport debounce from 'lodash/debounce'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport ConfirmProfileCreationModal from '../components/ConfirmProfileCreationModal'\nimport useProfileCreation from './contexts/hook'\nimport { USERNAME_MIN_LENGTH, USERNAME_MAX_LENGTH, REGISTER_COST } from './config'\n\nenum ExistingUserState {\n  IDLE = 'idle', // initial state\n  CREATED = 'created', // username has already been created\n  NEW = 'new', // username has not been created\n}\n\nconst profileApiUrl = process.env.REACT_APP_API_PROFILE\nconst minimumCakeToRegister = new BigNumber(REGISTER_COST).multipliedBy(new BigNumber(10).pow(18))\n\nconst InputWrap = styled.div`\n  position: relative;\n  max-width: 240px;\n`\n\nconst Input = styled(UIKitInput)`\n  padding-right: 40px;\n`\n\nconst Indicator = styled(Flex)`\n  align-items: center;\n  height: 24px;\n  justify-content: center;\n  margin-top: -12px;\n  position: absolute;\n  right: 16px;\n  top: 50%;\n  width: 24px;\n`\n\nconst UserName: React.FC = () => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const { teamId, selectedNft, userName, actions, minimumCakeRequired, allowance } = useProfileCreation()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  // const { library } = useWeb3React()\n  const { toastError } = useToast()\n  const web3 = useWeb3()\n  const [existingUserState, setExistingUserState] = useState<ExistingUserState>(ExistingUserState.NEW)\n  const [isValid, setIsValid] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const hasMinimumCakeRequired = useHasCakeBalance(minimumCakeToRegister)\n  const [onPresentConfirmProfileCreation] = useModal(\n    <ConfirmProfileCreationModal\n      userName={userName}\n      selectedNft={selectedNft}\n      account={account}\n      teamId={teamId}\n      minimumCakeRequired={minimumCakeRequired}\n      allowance={allowance}\n    />,\n    false,\n  )\n  const isUserCreated = existingUserState === ExistingUserState.CREATED\n\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    actions.setUserName(value)\n\n    if(value.length >= 3 && value.length <= 15)\n    {\n      setIsValid(true)\n    }\n    else\n    {\n      setIsValid(false)\n    }\n  }\n\n  const handleConfirm = async () => {\n    try {\n      setIsLoading(true)\n      const signature = await web3.eth.personal.sign(userName, account, null) // Last param is the password, and is null to request a signature in the wallet\n\n      const response = await fetch(`${profileApiUrl}/api/users/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          address: account,\n          username: userName,\n          signature,\n        }),\n      })\n\n      console.log(response.ok)\n\n      if (!response.ok) {\n        setExistingUserState(ExistingUserState.CREATED)\n      } else {\n        const data = await response.json()\n        toastError(data?.error?.message)\n      }\n    } catch (error) {\n      toastError(error?.message ? error.message : JSON.stringify(error))\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const handleAcknowledge = () => setIsAcknowledged(!isAcknowledged)\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${4}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(1110, 'Set Your Name')}\n      </Heading>\n      <Text as=\"p\" mb=\"24px\">\n        {TranslateString(\n          999,\n          'This name will be shown in team leaderboards and search results as long as your profile is active.',\n        )}\n      </Text>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(1110, 'Set Your Name')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(\n              840,\n              'Your name must be at least 3 and at most 15 standard letters and numbers long. You canâ€™t change this once you click Confirm.',\n            )}\n          </Text>\n          {existingUserState === ExistingUserState.IDLE ? (\n            <Skeleton height=\"40px\" width=\"240px\" />\n          ) : (\n            <InputWrap>\n              <Input\n                onChange={handleChange}\n                isWarning={userName && !isValid}\n                isSuccess={userName && isValid}\n                minLength={USERNAME_MIN_LENGTH}\n                maxLength={USERNAME_MAX_LENGTH}\n                disabled={isUserCreated}\n                placeholder={TranslateString(1094, 'Enter your name...')}\n                value={userName}\n              />\n              <Indicator>\n                {isLoading && <AutoRenewIcon spin />}\n                {!isLoading && isValid && userName && <CheckmarkIcon color=\"success\" />}\n                {!isLoading && !isValid && userName && <WarningIcon color=\"failure\" />}\n              </Indicator>\n            </InputWrap>\n          )}\n          <Text color=\"textSubtle\" fontSize=\"14px\" py=\"4px\" mb=\"16px\" style={{ minHeight: '30px' }}>\n            {message}\n          </Text>\n          <Text as=\"p\" color=\"failure\" mb=\"8px\">\n            {TranslateString(\n              1100,\n              \"Only reuse a name from other social media if you're OK with people viewing your wallet. You can't change your name once you click Confirm.\",\n            )}\n          </Text>\n          <label htmlFor=\"checkbox\" style={{ display: 'block', cursor: 'pointer', marginBottom: '24px' }}>\n            <Flex alignItems=\"center\">\n              <div style={{ flex: 'none' }}>\n                <Checkbox id=\"checkbox\" scale=\"sm\" checked={isAcknowledged} onChange={handleAcknowledge} />\n              </div>\n              <Text ml=\"8px\">\n                {TranslateString(1096, 'I understand that people can view my wallet if they know my username')}\n              </Text>\n            </Flex>\n          </label>\n          <Button onClick={handleConfirm} disabled={!isValid || isUserCreated || isLoading || !isAcknowledged}>\n            {TranslateString(464, 'Confirm')}\n          </Button>\n        </CardBody>\n      </Card>\n      <Button onClick={onPresentConfirmProfileCreation} disabled={!isValid || !isUserCreated}>\n        {TranslateString(842, 'Complete Profile')}\n      </Button>\n      {!hasMinimumCakeRequired && (\n        <Text color=\"failure\" mt=\"16px\">\n          {TranslateString(1098, `A minimum of ${REGISTER_COST} DBALL is required`, { num: REGISTER_COST })}\n        </Text>\n      )}\n    </>\n  )\n}\n\nexport default UserName\n"]},"metadata":{},"sourceType":"module"}