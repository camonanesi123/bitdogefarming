{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _defineProperty from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _cardConfig;import React from'react';import{PoolIds}from'config/constants/types';import{Card,CardBody,CardHeader,Text,useTooltip,HelpIcon,Flex}from'@pancakeswap-libs/uikit';import{useProfile}from'state/hooks';import IfoCardTokens from'./IfoCardTokens';import IfoCardActions from'./IfoCardActions';import IfoCardDetails from'./IfoCardDetails';var cardConfig=(_cardConfig={},_defineProperty(_cardConfig,PoolIds.poolBasic,{title:'Basic Sale',variant:'blue',tooltip:'Every person can only commit a limited amount, but may expect a higher return per token committed.'}),_defineProperty(_cardConfig,PoolIds.poolUnlimited,{title:'Unlimited Sale',variant:'violet',tooltip:'No limits on the amount you can commit. Additional fee applies when claiming.'}),_cardConfig);var SmallCard=function SmallCard(_ref){var poolId=_ref.poolId,ifo=_ref.ifo,publicIfoData=_ref.publicIfoData,walletIfoData=_ref.walletIfoData;var config=cardConfig[poolId];var _useProfile=useProfile(),hasProfile=_useProfile.hasProfile,isProfileLoading=_useProfile.isLoading;var _useTooltip=useTooltip(config.tooltip,'bottom'),targetRef=_useTooltip.targetRef,tooltip=_useTooltip.tooltip,tooltipVisible=_useTooltip.tooltipVisible;var isLoading=isProfileLoading||publicIfoData.status==='idle';return/*#__PURE__*/_jsxs(_Fragment,{children:[tooltipVisible&&tooltip,/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{variant:config.variant,children:/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",children:config.title}),/*#__PURE__*/_jsx(\"div\",{ref:targetRef,children:/*#__PURE__*/_jsx(HelpIcon,{})})]})}),/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(IfoCardTokens,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData,hasProfile:hasProfile,isLoading:isLoading}),/*#__PURE__*/_jsx(IfoCardActions,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData,hasProfile:hasProfile,isLoading:isLoading}),/*#__PURE__*/_jsx(IfoCardDetails,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData})]})]})]});};export default SmallCard;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/index.tsx"],"names":["React","PoolIds","Card","CardBody","CardHeader","Text","useTooltip","HelpIcon","Flex","useProfile","IfoCardTokens","IfoCardActions","IfoCardDetails","cardConfig","poolBasic","title","variant","tooltip","poolUnlimited","SmallCard","poolId","ifo","publicIfoData","walletIfoData","config","hasProfile","isProfileLoading","isLoading","targetRef","tooltipVisible","status"],"mappings":"ySAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAcC,OAAd,KAA6B,wBAA7B,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,UAAzB,CAAqCC,IAArC,CAA2CC,UAA3C,CAAuDC,QAAvD,CAAiEC,IAAjE,KAA6E,yBAA7E,CACA,OAASC,UAAT,KAA2B,aAA3B,CAEA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CAiBA,GAAMC,CAAAA,UAAsB,6CACzBZ,OAAO,CAACa,SADiB,CACL,CACnBC,KAAK,CAAE,YADY,CAEnBC,OAAO,CAAE,MAFU,CAGnBC,OAAO,CAAE,oGAHU,CADK,8BAMzBhB,OAAO,CAACiB,aANiB,CAMD,CACvBH,KAAK,CAAE,gBADgB,CAEvBC,OAAO,CAAE,QAFc,CAGvBC,OAAO,CAAE,+EAHc,CANC,cAA5B,CAaA,GAAME,CAAAA,SAAiC,CAAG,QAApCA,CAAAA,SAAoC,MAAmD,IAAhDC,CAAAA,MAAgD,MAAhDA,MAAgD,CAAxCC,GAAwC,MAAxCA,GAAwC,CAAnCC,aAAmC,MAAnCA,aAAmC,CAApBC,aAAoB,MAApBA,aAAoB,CAC3F,GAAMC,CAAAA,MAAM,CAAGX,UAAU,CAACO,MAAD,CAAzB,CAD2F,gBAEvCX,UAAU,EAF6B,CAEnFgB,UAFmF,aAEnFA,UAFmF,CAE5DC,gBAF4D,aAEvEC,SAFuE,iBAG5CrB,UAAU,CAACkB,MAAM,CAACP,OAAR,CAAiB,QAAjB,CAHkC,CAGnFW,SAHmF,aAGnFA,SAHmF,CAGxEX,OAHwE,aAGxEA,OAHwE,CAG/DY,cAH+D,aAG/DA,cAH+D,CAK3F,GAAMF,CAAAA,SAAS,CAAGD,gBAAgB,EAAIJ,aAAa,CAACQ,MAAd,GAAyB,MAA/D,CAEA,mBACE,2BACGD,cAAc,EAAIZ,OADrB,cAEE,MAAC,IAAD,yBACE,KAAC,UAAD,EAAY,OAAO,CAAEO,MAAM,CAACR,OAA5B,uBACE,MAAC,IAAD,EAAM,cAAc,CAAC,eAArB,CAAqC,UAAU,CAAC,QAAhD,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,QAAQ,CAAC,MAApB,UACGQ,MAAM,CAACT,KADV,EADF,cAIE,YAAK,GAAG,CAAEa,SAAV,uBACE,KAAC,QAAD,IADF,EAJF,GADF,EADF,cAWE,MAAC,QAAD,yBACE,KAAC,aAAD,EACE,MAAM,CAAER,MADV,CAEE,GAAG,CAAEC,GAFP,CAGE,aAAa,CAAEC,aAHjB,CAIE,aAAa,CAAEC,aAJjB,CAKE,UAAU,CAAEE,UALd,CAME,SAAS,CAAEE,SANb,EADF,cASE,KAAC,cAAD,EACE,MAAM,CAAEP,MADV,CAEE,GAAG,CAAEC,GAFP,CAGE,aAAa,CAAEC,aAHjB,CAIE,aAAa,CAAEC,aAJjB,CAKE,UAAU,CAAEE,UALd,CAME,SAAS,CAAEE,SANb,EATF,cAiBE,KAAC,cAAD,EAAgB,MAAM,CAAEP,MAAxB,CAAgC,GAAG,CAAEC,GAArC,CAA0C,aAAa,CAAEC,aAAzD,EAjBF,GAXF,GAFF,GADF,CAoCD,CA3CD,CA6CA,cAAeH,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { Card, CardBody, CardHeader, Text, useTooltip, HelpIcon, Flex } from '@pancakeswap-libs/uikit'\nimport { useProfile } from 'state/hooks'\nimport { PublicIfoData, WalletIfoData } from 'hooks/ifo/types'\nimport IfoCardTokens from './IfoCardTokens'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardDetails from './IfoCardDetails'\n\ninterface IfoCardProps {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n}\n\ninterface CardConfig {\n  [key: string]: {\n    title: string\n    variant: 'blue' | 'violet'\n    tooltip: string\n  }\n}\n\nconst cardConfig: CardConfig = {\n  [PoolIds.poolBasic]: {\n    title: 'Basic Sale',\n    variant: 'blue',\n    tooltip: 'Every person can only commit a limited amount, but may expect a higher return per token committed.',\n  },\n  [PoolIds.poolUnlimited]: {\n    title: 'Unlimited Sale',\n    variant: 'violet',\n    tooltip: 'No limits on the amount you can commit. Additional fee applies when claiming.',\n  },\n}\n\nconst SmallCard: React.FC<IfoCardProps> = ({ poolId, ifo, publicIfoData, walletIfoData }) => {\n  const config = cardConfig[poolId]\n  const { hasProfile, isLoading: isProfileLoading } = useProfile()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(config.tooltip, 'bottom')\n\n  const isLoading = isProfileLoading || publicIfoData.status === 'idle'\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <Card>\n        <CardHeader variant={config.variant}>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text bold fontSize=\"20px\">\n              {config.title}\n            </Text>\n            <div ref={targetRef}>\n              <HelpIcon />\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <IfoCardTokens\n            poolId={poolId}\n            ifo={ifo}\n            publicIfoData={publicIfoData}\n            walletIfoData={walletIfoData}\n            hasProfile={hasProfile}\n            isLoading={isLoading}\n          />\n          <IfoCardActions\n            poolId={poolId}\n            ifo={ifo}\n            publicIfoData={publicIfoData}\n            walletIfoData={walletIfoData}\n            hasProfile={hasProfile}\n            isLoading={isLoading}\n          />\n          <IfoCardDetails poolId={poolId} ifo={ifo} publicIfoData={publicIfoData} />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default SmallCard\n"]},"metadata":{},"sourceType":"module"}