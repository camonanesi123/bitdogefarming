{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\task159\\\\frontend\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\ContributeButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, useModal } from '@pancakeswap-libs/uikit';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport useI18n from 'hooks/useI18n';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport { getAddress } from 'utils/addressHelpers';\nimport { useToast } from 'state/hooks';\nimport ContributeModal from './ContributeModal';\nimport GetLpModal from './GetLpModal';\n\nconst ContributeButton = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData\n}) => {\n  _s();\n\n  const publicPoolCharacteristics = publicIfoData[poolId];\n  const userPoolCharacteristics = walletIfoData[poolId];\n  const {\n    isPendingTx,\n    amountTokenCommittedInLP\n  } = userPoolCharacteristics;\n  const {\n    limitPerUserInLP\n  } = publicPoolCharacteristics;\n  const TranslateString = useI18n();\n  const {\n    toastSuccess\n  } = useToast();\n  const userCurrencyBalance = useTokenBalance(getAddress(ifo.currency.address));\n\n  const handleContributeSuccess = amount => {\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} DBALL-BNB LP tokens to this IFO!`);\n    walletIfoData.addUserContributedAmount(amount, poolId);\n  };\n\n  const [onPresentContributeModal] = useModal( /*#__PURE__*/_jsxDEV(ContributeModal, {\n    poolId: poolId,\n    ifo: ifo,\n    publicIfoData: publicIfoData,\n    walletIfoData: walletIfoData,\n    onSuccess: handleContributeSuccess,\n    userCurrencyBalance: userCurrencyBalance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), false);\n  const [onPresentGetLpModal] = useModal( /*#__PURE__*/_jsxDEV(GetLpModal, {\n    currency: ifo.currency\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 42\n  }, this), false);\n  const isDisabled = isPendingTx || limitPerUserInLP.isGreaterThan(0) && amountTokenCommittedInLP.isGreaterThanOrEqualTo(limitPerUserInLP);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: userCurrencyBalance.isEqualTo(0) ? onPresentGetLpModal : onPresentContributeModal,\n    width: \"100%\",\n    disabled: isDisabled,\n    children: isDisabled ? TranslateString(999, 'Max. Committed') : TranslateString(999, 'Commit LP Tokens')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContributeButton, \"tzUzW5IH9YjDCwQrh7UPBnYqA7s=\", false, function () {\n  return [useI18n, useToast, useTokenBalance, useModal, useModal];\n});\n\n_c = ContributeButton;\nexport default ContributeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeButton\");","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/ContributeButton.tsx"],"names":["React","Button","useModal","getBalanceNumber","useI18n","useTokenBalance","getAddress","useToast","ContributeModal","GetLpModal","ContributeButton","poolId","ifo","publicIfoData","walletIfoData","publicPoolCharacteristics","userPoolCharacteristics","isPendingTx","amountTokenCommittedInLP","limitPerUserInLP","TranslateString","toastSuccess","userCurrencyBalance","currency","address","handleContributeSuccess","amount","addUserContributedAmount","onPresentContributeModal","onPresentGetLpModal","isDisabled","isGreaterThan","isGreaterThanOrEqualTo","isEqualTo"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,yBAAjC;AAEA,SAASC,gBAAT,QAAiC,qBAAjC;AAGA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAQA,MAAMC,gBAAiC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,GAAV;AAAeC,EAAAA,aAAf;AAA8BC,EAAAA;AAA9B,CAAD,KAAmD;AAAA;;AAC3F,QAAMC,yBAAyB,GAAGF,aAAa,CAACF,MAAD,CAA/C;AACA,QAAMK,uBAAuB,GAAGF,aAAa,CAACH,MAAD,CAA7C;AACA,QAAM;AAAEM,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA4CF,uBAAlD;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAuBJ,yBAA7B;AACA,QAAMK,eAAe,GAAGhB,OAAO,EAA/B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAmBd,QAAQ,EAAjC;AACA,QAAMe,mBAAmB,GAAGjB,eAAe,CAACC,UAAU,CAACM,GAAG,CAACW,QAAJ,CAAaC,OAAd,CAAX,CAA3C;;AAEA,QAAMC,uBAAuB,GAAIC,MAAD,IAAuB;AACrDL,IAAAA,YAAY,CAAC,UAAD,EAAc,wBAAuBlB,gBAAgB,CAACuB,MAAD,CAAS,mCAA9D,CAAZ;AACAZ,IAAAA,aAAa,CAACa,wBAAd,CAAuCD,MAAvC,EAA+Cf,MAA/C;AACD,GAHD;;AAKA,QAAM,CAACiB,wBAAD,IAA6B1B,QAAQ,eACzC,QAAC,eAAD;AACE,IAAA,MAAM,EAAES,MADV;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,aAAa,EAAEC,aAHjB;AAIE,IAAA,aAAa,EAAEC,aAJjB;AAKE,IAAA,SAAS,EAAEW,uBALb;AAME,IAAA,mBAAmB,EAAEH;AANvB;AAAA;AAAA;AAAA;AAAA,UADyC,EASzC,KATyC,CAA3C;AAYA,QAAM,CAACO,mBAAD,IAAwB3B,QAAQ,eAAC,QAAC,UAAD;AAAY,IAAA,QAAQ,EAAEU,GAAG,CAACW;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAD,EAAyC,KAAzC,CAAtC;AAEA,QAAMO,UAAU,GACdb,WAAW,IACVE,gBAAgB,CAACY,aAAjB,CAA+B,CAA/B,KAAqCb,wBAAwB,CAACc,sBAAzB,CAAgDb,gBAAhD,CAFxC;AAIA,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAEG,mBAAmB,CAACW,SAApB,CAA8B,CAA9B,IAAmCJ,mBAAnC,GAAyDD,wBADpE;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,QAAQ,EAAEE,UAHZ;AAAA,cAKGA,UAAU,GAAGV,eAAe,CAAC,GAAD,EAAM,gBAAN,CAAlB,GAA4CA,eAAe,CAAC,GAAD,EAAM,kBAAN;AALxE;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAzCD;;GAAMV,gB;UAKoBN,O,EACCG,Q,EACGF,e,EAOOH,Q,EAYLA,Q;;;KA1B1BQ,gB;AA2CN,eAAeA,gBAAf","sourcesContent":["import React from 'react'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { WalletIfoData, PublicIfoData } from 'hooks/ifo/types'\nimport useI18n from 'hooks/useI18n'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useToast } from 'state/hooks'\nimport ContributeModal from './ContributeModal'\nimport GetLpModal from './GetLpModal'\n\ninterface Props {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n}\nconst ContributeButton: React.FC<Props> = ({ poolId, ifo, publicIfoData, walletIfoData }) => {\n  const publicPoolCharacteristics = publicIfoData[poolId]\n  const userPoolCharacteristics = walletIfoData[poolId]\n  const { isPendingTx, amountTokenCommittedInLP } = userPoolCharacteristics\n  const { limitPerUserInLP } = publicPoolCharacteristics\n  const TranslateString = useI18n()\n  const { toastSuccess } = useToast()\n  const userCurrencyBalance = useTokenBalance(getAddress(ifo.currency.address))\n\n  const handleContributeSuccess = (amount: BigNumber) => {\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} DBALL-BNB LP tokens to this IFO!`)\n    walletIfoData.addUserContributedAmount(amount, poolId)\n  }\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal\n      poolId={poolId}\n      ifo={ifo}\n      publicIfoData={publicIfoData}\n      walletIfoData={walletIfoData}\n      onSuccess={handleContributeSuccess}\n      userCurrencyBalance={userCurrencyBalance}\n    />,\n    false,\n  )\n\n  const [onPresentGetLpModal] = useModal(<GetLpModal currency={ifo.currency} />, false)\n\n  const isDisabled =\n    isPendingTx ||\n    (limitPerUserInLP.isGreaterThan(0) && amountTokenCommittedInLP.isGreaterThanOrEqualTo(limitPerUserInLP))\n\n  return (\n    <Button\n      onClick={userCurrencyBalance.isEqualTo(0) ? onPresentGetLpModal : onPresentContributeModal}\n      width=\"100%\"\n      disabled={isDisabled}\n    >\n      {isDisabled ? TranslateString(999, 'Max. Committed') : TranslateString(999, 'Commit LP Tokens')}\n    </Button>\n  )\n}\n\nexport default ContributeButton\n"]},"metadata":{},"sourceType":"module"}