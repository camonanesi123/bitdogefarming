{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hexia\\\\Desktop\\\\pancake_fork\\\\frontend\\\\src\\\\views\\\\Pools\\\\components\\\\PoolCard.tsx\",\n    _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport UnlockButton from 'components/UnlockButton';\nimport Label from 'components/Label';\nimport { useERC20 } from 'hooks/useContract';\nimport { useSousApprove } from 'hooks/useApprove';\nimport useI18n from 'hooks/useI18n';\nimport { useSmartStake } from 'hooks/useStake';\nimport { useSmartUnstake } from 'hooks/useUnstake';\nimport useBlock from 'hooks/useBlock';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { useSmartChefHarvest } from 'hooks/useHarvest';\nimport Balance from 'components/Balance';\nimport { QuoteToken, PoolCategory } from 'config/constants/types';\nimport DepositModal from './DepositModal';\nimport WithdrawModal from './WithdrawModal';\nimport CardTitle from './CardTitle';\nimport Card from './Card';\nimport OldSyrupTitle from './OldSyrupTitle';\nimport HarvestButton from './HarvestButton';\nimport CardFooter from './CardFooter';\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID;\n\nconst PoolCard = ({\n  pool\n}) => {\n  _s();\n\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n    burnFee\n  } = pool; // Pools using native BNB behave differently than pools using a token\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE;\n  const TranslateString = useI18n();\n  const stakingTokenContract = useERC20(stakingTokenAddress[CHAIN_ID]);\n  const {\n    account\n  } = useWallet();\n  const block = useBlock();\n  const {\n    onApprove\n  } = useSousApprove(stakingTokenContract, sousId);\n  const {\n    onStake\n  } = useSmartStake(sousId, isBnbPool);\n  const {\n    onUnstake\n  } = useSmartUnstake(sousId);\n  const {\n    onReward\n  } = useSmartChefHarvest(sousId, isBnbPool);\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [pendingTx, setPendingTx] = useState(false);\n  const allowance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.allowance) || 0);\n  const stakingTokenBalance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.stakingTokenBalance) || 0);\n  const stakedBalance = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.stakedBalance) || 0);\n  const earnings = new BigNumber((userData === null || userData === void 0 ? void 0 : userData.pendingReward) || 0);\n  const blocksUntilStart = Math.max(startBlock - block, 0);\n  const blocksRemaining = Math.max(endBlock - block, 0);\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP;\n  const accountHasStakedBalance = (stakedBalance === null || stakedBalance === void 0 ? void 0 : stakedBalance.toNumber()) > 0;\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool;\n  const isCardActive = isFinished && accountHasStakedBalance;\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals));\n  const [onPresentDeposit] = useModal( /*#__PURE__*/_jsxDEV(DepositModal, {\n    max: stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance,\n    onConfirm: onStake,\n    tokenName: stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName,\n    depositFeeBP: burnFee * 10\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    onConfirm: onUnstake,\n    tokenName: stakingTokenName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this));\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      const txHash = await onApprove(); // user rejected tx or didn't go thru\n\n      if (!txHash) {\n        setRequestedApproval(false);\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove, setRequestedApproval]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    isActive: isCardActive,\n    isFinished: isFinished,\n    children: [isFinished && /*#__PURE__*/_jsxDEV(PoolFinishedSash, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '24px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n        isFinished: isFinished,\n        children: [isOldSyrup && '[OLD]', \" \", tokenName, \" \", TranslateString(348, 'Pool')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '8px',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/images/bnbpool/BNB.svg\",\n            width: 64,\n            height: 64,\n            alt: tokenName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), account && harvest && !isOldSyrup && /*#__PURE__*/_jsxDEV(HarvestButton, {\n          disabled: !earnings.toNumber() || pendingTx,\n          text: pendingTx ? 'Collecting' : 'Harvest',\n          onClick: async () => {\n            setPendingTx(true);\n            await onReward();\n            setPendingTx(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), !isOldSyrup ? /*#__PURE__*/_jsxDEV(BalanceAndCompound, {\n        children: /*#__PURE__*/_jsxDEV(Balance, {\n          value: getBalanceNumber(earnings, tokenDecimals),\n          decimals: tokenName === 'BTCB' ? 5 : 3,\n          isDisabled: isFinished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(OldSyrupTitle, {\n        hasBalance: accountHasStakedBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        isFinished: isFinished,\n        text: TranslateString(330, `${tokenName} earned`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardActions, {\n        children: [!account && /*#__PURE__*/_jsxDEV(UnlockButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 24\n        }, this), account && (needsApproval && !isOldSyrup ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: isFinished || requestedApproval,\n            onClick: handleApprove,\n            width: \"100%\",\n            children: `Approve ${stakingTokenName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: stakedBalance.eq(new BigNumber(0)) || pendingTx,\n            onClick: isOldSyrup ? async () => {\n              setPendingTx(true);\n              await onUnstake('0');\n              setPendingTx(false);\n            } : onPresentWithdraw,\n            children: `Unstake ${stakingTokenName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(StyledActionSpacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this), !isOldSyrup && /*#__PURE__*/_jsxDEV(IconButton, {\n            disabled: isFinished,\n            onClick: onPresentDeposit,\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {\n              color: \"background\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [TranslateString(736, 'APR'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), isFinished || isOldSyrup || !apy || (apy === null || apy === void 0 ? void 0 : apy.isNaN()) || !(apy === null || apy === void 0 ? void 0 : apy.isFinite()) ? '-' : /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"14px\",\n          isDisabled: isFinished,\n          value: apy === null || apy === void 0 ? void 0 : apy.toNumber(),\n          decimals: 2,\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": stakingTokenName,\n            children: [\"\\uD83D\\uDC32\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), TranslateString(384, 'Your Stake'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"14px\",\n          isDisabled: isFinished,\n          value: getBalanceNumber(stakedBalance)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), burnFee > 0 ? /*#__PURE__*/_jsxDEV(StyledDetails, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": stakingTokenName,\n            children: [\"\\uD83D\\uDD25\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), TranslateString(10005, 'Burn fee'), \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Balance, {\n          fontSize: \"14px\",\n          isDisabled: isFinished,\n          value: burnFee / 10,\n          decimals: 1,\n          unit: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n      projectLink: projectLink,\n      totalStaked: totalStaked,\n      blocksRemaining: blocksRemaining,\n      isFinished: isFinished,\n      blocksUntilStart: blocksUntilStart,\n      poolCategory: poolCategory,\n      unit: \"blocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PoolCard, \"Pp4QJ7dLC+A1qSM5GYq3t+ebbbQ=\", false, function () {\n  return [useI18n, useERC20, useWallet, useBlock, useSousApprove, useSmartStake, useSmartUnstake, useSmartChefHarvest, useModal, useModal];\n});\n\n_c = PoolCard;\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`;\n_c2 = PoolFinishedSash;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`;\n_c3 = StyledCardActions;\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`;\n_c4 = BalanceAndCompound;\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\n_c5 = StyledActionSpacer;\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n  padding: 3px 0;\n`;\n_c6 = StyledDetails;\nexport default PoolCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"PoolCard\");\n$RefreshReg$(_c2, \"PoolFinishedSash\");\n$RefreshReg$(_c3, \"StyledCardActions\");\n$RefreshReg$(_c4, \"BalanceAndCompound\");\n$RefreshReg$(_c5, \"StyledActionSpacer\");\n$RefreshReg$(_c6, \"StyledDetails\");","map":{"version":3,"sources":["C:/Users/hexia/Desktop/pancake_fork/frontend/src/views/Pools/components/PoolCard.tsx"],"names":["BigNumber","React","useCallback","useState","styled","Button","IconButton","useModal","AddIcon","Image","useWallet","UnlockButton","Label","useERC20","useSousApprove","useI18n","useSmartStake","useSmartUnstake","useBlock","getBalanceNumber","useSmartChefHarvest","Balance","QuoteToken","PoolCategory","DepositModal","WithdrawModal","CardTitle","Card","OldSyrupTitle","HarvestButton","CardFooter","CHAIN_ID","process","env","REACT_APP_CHAIN_ID","PoolCard","pool","sousId","image","tokenName","stakingTokenName","stakingTokenAddress","projectLink","harvest","apy","tokenDecimals","poolCategory","totalStaked","startBlock","endBlock","isFinished","userData","stakingLimit","burnFee","isBnbPool","BINANCE","TranslateString","stakingTokenContract","account","block","onApprove","onStake","onUnstake","onReward","requestedApproval","setRequestedApproval","pendingTx","setPendingTx","allowance","stakingTokenBalance","stakedBalance","earnings","pendingReward","blocksUntilStart","Math","max","blocksRemaining","isOldSyrup","SYRUP","accountHasStakedBalance","toNumber","needsApproval","isCardActive","convertedLimit","multipliedBy","pow","onPresentDeposit","isGreaterThan","onPresentWithdraw","handleApprove","txHash","e","console","error","padding","marginBottom","display","alignItems","flex","eq","isNaN","isFinite","PoolFinishedSash","div","StyledCardActions","BalanceAndCompound","StyledActionSpacer","props","theme","spacing","StyledDetails"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Label from 'components/Label'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { useSousApprove } from 'hooks/useApprove'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useSmartStake } from 'hooks/useStake'\r\nimport { useSmartUnstake } from 'hooks/useUnstake'\r\nimport useBlock from 'hooks/useBlock'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useSmartChefHarvest } from 'hooks/useHarvest'\r\nimport Balance from 'components/Balance'\r\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport DepositModal from './DepositModal'\r\nimport WithdrawModal from './WithdrawModal'\r\nimport CardTitle from './CardTitle'\r\nimport Card from './Card'\r\nimport OldSyrupTitle from './OldSyrupTitle'\r\nimport HarvestButton from './HarvestButton'\r\nimport CardFooter from './CardFooter'\r\n\r\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\r\n\r\ninterface PoolWithApy extends Pool {\r\n  apy: BigNumber\r\n}\r\n\r\ninterface HarvestProps {\r\n  pool: PoolWithApy\r\n}\r\n\r\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\r\n  const {\r\n    sousId,\r\n    image,\r\n    tokenName,\r\n    stakingTokenName,\r\n    stakingTokenAddress,\r\n    projectLink,\r\n    harvest,\r\n    apy,\r\n    tokenDecimals,\r\n    poolCategory,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    isFinished,\r\n    userData,\r\n    stakingLimit,\r\n    burnFee,\r\n  } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const TranslateString = useI18n()\r\n  const stakingTokenContract = useERC20(stakingTokenAddress[CHAIN_ID])\r\n  const { account } = useWallet()\r\n  const block = useBlock()\r\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\r\n  const { onStake } = useSmartStake(sousId, isBnbPool)\r\n  const { onUnstake } = useSmartUnstake(sousId)\r\n  const { onReward } = useSmartChefHarvest(sousId, isBnbPool)\r\n\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n\r\n  const allowance = new BigNumber(userData?.allowance || 0)\r\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\r\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\r\n  const earnings = new BigNumber(userData?.pendingReward || 0)\r\n\r\n  const blocksUntilStart = Math.max(startBlock - block, 0)\r\n  const blocksRemaining = Math.max(endBlock - block, 0)\r\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\r\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\r\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\r\n  const isCardActive = isFinished && accountHasStakedBalance\r\n\r\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\r\n      depositFeeBP={burnFee * 10}\r\n    />,\r\n  )\r\n\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\r\n  )\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, setRequestedApproval])\r\n\r\n  return (\r\n    <Card isActive={isCardActive} isFinished={isFinished}>\r\n      {isFinished && <PoolFinishedSash />}\r\n      <div style={{ padding: '24px' }}>\r\n        <CardTitle isFinished={isFinished}>\r\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\r\n        </CardTitle>\r\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\r\n          <div style={{ flex: 1 }}>\r\n            <Image src=\"/images/bnbpool/BNB.svg\" width={64} height={64} alt={tokenName} />\r\n          </div>\r\n          {account && harvest && !isOldSyrup && (\r\n            <HarvestButton\r\n              disabled={!earnings.toNumber() || pendingTx}\r\n              text={pendingTx ? 'Collecting' : 'Harvest'}\r\n              onClick={async () => {\r\n                setPendingTx(true)\r\n                await onReward()\r\n                setPendingTx(false)\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        {!isOldSyrup ? (\r\n          <BalanceAndCompound>\r\n            <Balance\r\n              value={getBalanceNumber(earnings, tokenDecimals)}\r\n              decimals={tokenName === 'BTCB' ? 5 : 3}\r\n              isDisabled={isFinished}\r\n            />\r\n          </BalanceAndCompound>\r\n        ) : (\r\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\r\n        )}\r\n        <Label isFinished={isFinished} text={TranslateString(330, `${tokenName} earned`)} />\r\n        <StyledCardActions>\r\n          {!account && <UnlockButton />}\r\n          {account &&\r\n            (needsApproval && !isOldSyrup ? (\r\n              <div style={{ flex: 1 }}>\r\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} width=\"100%\">\r\n                  {`Approve ${stakingTokenName}`}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <Button\r\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\r\n                  onClick={\r\n                    isOldSyrup\r\n                      ? async () => {\r\n                          setPendingTx(true)\r\n                          await onUnstake('0')\r\n                          setPendingTx(false)\r\n                        }\r\n                      : onPresentWithdraw\r\n                  }\r\n                >\r\n                  {`Unstake ${stakingTokenName}`}\r\n                </Button>\r\n                <StyledActionSpacer />\r\n                {!isOldSyrup && (\r\n                  <IconButton disabled={isFinished} onClick={onPresentDeposit}>\r\n                    <AddIcon color=\"background\" />\r\n                  </IconButton>\r\n                )}\r\n              </>\r\n            ))}\r\n        </StyledCardActions>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\r\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\r\n            '-'\r\n          ) : (\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\r\n          )}\r\n        </StyledDetails>\r\n        <StyledDetails>\r\n          <div style={{ flex: 1 }}>\r\n            <span role=\"img\" aria-label={stakingTokenName}>\r\n              🐲{' '}\r\n            </span>\r\n            {TranslateString(384, 'Your Stake')}:\r\n          </div>\r\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\r\n        </StyledDetails>\r\n        {burnFee > 0 ? (\r\n          <StyledDetails>\r\n            <div style={{ flex: 1 }}>\r\n              <span role=\"img\" aria-label={stakingTokenName}>\r\n                🔥{' '}\r\n              </span>\r\n              {TranslateString(10005, 'Burn fee')}:\r\n            </div>\r\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={burnFee / 10} decimals={1} unit=\"%\" />\r\n          </StyledDetails>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      <CardFooter\r\n        projectLink={projectLink}\r\n        totalStaked={totalStaked}\r\n        blocksRemaining={blocksRemaining}\r\n        isFinished={isFinished}\r\n        blocksUntilStart={blocksUntilStart}\r\n        poolCategory={poolCategory}\r\n        unit=\"blocks\"\r\n      />\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst PoolFinishedSash = styled.div`\r\n  background-image: url('/images/pool-finished-sash.svg');\r\n  background-position: top right;\r\n  background-repeat: not-repeat;\r\n  height: 135px;\r\n  position: absolute;\r\n  right: -24px;\r\n  top: -24px;\r\n  width: 135px;\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 16px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`\r\n\r\nconst BalanceAndCompound = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n`\r\n\r\nconst StyledActionSpacer = styled.div`\r\n  height: ${(props) => props.theme.spacing[4]}px;\r\n  width: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst StyledDetails = styled.div`\r\n  display: flex;\r\n  font-size: 14px;\r\n  padding: 3px 0;\r\n`\r\n\r\nexport default PoolCard\r\n"]},"metadata":{},"sourceType":"module"}