{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{AutoRenewIcon,Button,Checkbox,Flex,Text}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import useGetProfileCosts from'hooks/useGetProfileCosts';import{useAppDispatch}from'state';import{useProfile,useToast}from'state/hooks';import{fetchProfile}from'state/profile';import{getBalanceNumber}from'utils/formatBalance';import{useProfile as useProfileContract}from'hooks/useContract';import{useWallet}from'@binance-chain/bsc-use-wallet';var PauseProfilePage=function PauseProfilePage(_ref){var onDismiss=_ref.onDismiss;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isAcknowledged=_useState2[0],setIsAcknowledged=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isConfirming=_useState4[0],setIsConfirming=_useState4[1];var _useProfile=useProfile(),profile=_useProfile.profile;var _useGetProfileCosts=useGetProfileCosts(),numberCakeToReactivate=_useGetProfileCosts.numberCakeToReactivate;var TranslateString=useI18n();var pancakeProfileContract=useProfileContract();var _useWallet=useWallet(),account=_useWallet.account;var _useToast=useToast(),toastSuccess=_useToast.toastSuccess,toastError=_useToast.toastError;var dispatch=useAppDispatch();var handleChange=function handleChange(){return setIsAcknowledged(!isAcknowledged);};var handleDeactivateProfile=function handleDeactivateProfile(){pancakeProfileContract.methods.pauseProfile().send({from:account}).on('sending',function(){setIsConfirming(true);}).on('receipt',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dispatch(fetchProfile(account));case 2:toastSuccess('Profile Paused!');onDismiss();case 4:case\"end\":return _context.stop();}}},_callee);}))).on('error',function(error){toastError('Error',error===null||error===void 0?void 0:error.message);setIsConfirming(false);});};if(!profile){return null;}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"failure\",mb:\"24px\",children:TranslateString(999,'This will suspend your profile and send your Collectible back to your wallet')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:TranslateString(999,\"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\")}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:TranslateString(999,\"Cost to reactivate in future: \".concat(getBalanceNumber(numberCakeToReactivate),\" CAKE\"))}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"acknowledgement\",style:{cursor:'pointer',display:'block',marginBottom:'24px'},children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(Checkbox,{id:\"acknowledgement\",checked:isAcknowledged,onChange:handleChange,scale:\"sm\"}),/*#__PURE__*/_jsx(Text,{ml:\"8px\",children:TranslateString(476,'I understand')})]})}),/*#__PURE__*/_jsx(Button,{width:\"100%\",isLoading:isConfirming,endIcon:isConfirming?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,disabled:!isAcknowledged||isConfirming,onClick:handleDeactivateProfile,mb:\"8px\",children:TranslateString(464,'Confirm')}),/*#__PURE__*/_jsx(Button,{variant:\"text\",width:\"100%\",onClick:onDismiss,children:TranslateString(999,'Close Window')})]});};export default PauseProfilePage;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Profile/components/EditProfileModal/PauseProfileView.tsx"],"names":["React","useState","AutoRenewIcon","Button","Checkbox","Flex","Text","useI18n","useGetProfileCosts","useAppDispatch","useProfile","useToast","fetchProfile","getBalanceNumber","useProfileContract","useWallet","PauseProfilePage","onDismiss","isAcknowledged","setIsAcknowledged","isConfirming","setIsConfirming","profile","numberCakeToReactivate","TranslateString","pancakeProfileContract","account","toastSuccess","toastError","dispatch","handleChange","handleDeactivateProfile","methods","pauseProfile","send","from","on","error","message","cursor","display","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { AutoRenewIcon, Button, Checkbox, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { useAppDispatch } from 'state'\nimport { useProfile, useToast } from 'state/hooks'\nimport { fetchProfile } from 'state/profile'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useProfile as useProfileContract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\n\ntype PauseProfilePageProps = InjectedModalProps\n\nconst PauseProfilePage: React.FC<PauseProfilePageProps> = ({ onDismiss }) => {\n  const [isAcknowledged, setIsAcknowledged] = useState(false)\n  const [isConfirming, setIsConfirming] = useState(false)\n  const { profile } = useProfile()\n  const { numberCakeToReactivate } = useGetProfileCosts()\n  const TranslateString = useI18n()\n  const pancakeProfileContract = useProfileContract()\n  const { account } = useWallet()\n  const { toastSuccess, toastError } = useToast()\n  const dispatch = useAppDispatch()\n\n  const handleChange = () => setIsAcknowledged(!isAcknowledged)\n\n  const handleDeactivateProfile = () => {\n    pancakeProfileContract.methods\n      .pauseProfile()\n      .send({ from: account })\n      .on('sending', () => {\n        setIsConfirming(true)\n      })\n      .on('receipt', async () => {\n        // Re-fetch profile\n        await dispatch(fetchProfile(account))\n        toastSuccess('Profile Paused!')\n\n        onDismiss()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsConfirming(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <>\n      <Text as=\"p\" color=\"failure\" mb=\"24px\">\n        {TranslateString(999, 'This will suspend your profile and send your Collectible back to your wallet')}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(\n          999,\n          \"While your profile is suspended, you won't be able to earn points, but your achievements and points will stay associated with your profile\",\n        )}\n      </Text>\n      <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n        {TranslateString(999, `Cost to reactivate in future: ${getBalanceNumber(numberCakeToReactivate)} CAKE`)}\n      </Text>\n      <label htmlFor=\"acknowledgement\" style={{ cursor: 'pointer', display: 'block', marginBottom: '24px' }}>\n        <Flex alignItems=\"center\">\n          <Checkbox id=\"acknowledgement\" checked={isAcknowledged} onChange={handleChange} scale=\"sm\" />\n          <Text ml=\"8px\">{TranslateString(476, 'I understand')}</Text>\n        </Flex>\n      </label>\n      <Button\n        width=\"100%\"\n        isLoading={isConfirming}\n        endIcon={isConfirming ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={!isAcknowledged || isConfirming}\n        onClick={handleDeactivateProfile}\n        mb=\"8px\"\n      >\n        {TranslateString(464, 'Confirm')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </>\n  )\n}\n\nexport default PauseProfilePage\n"]},"metadata":{},"sourceType":"module"}