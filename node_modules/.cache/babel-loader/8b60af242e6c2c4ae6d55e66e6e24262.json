{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\task159\\\\frontend\\\\src\\\\views\\\\Layer\\\\Farms\\\\Farms.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport CardNav from 'components/CardNav';\nimport { Image, Heading } from '@pancakeswap-libs/uikit';\nimport { BLOCKS_PER_YEAR } from 'config';\nimport FlexLayout from 'components/layout/Flex';\nimport Page from 'components/layout/Page';\nimport { useFarms3, usePrice3BnbBusd, usePrice3CakeBusd } from 'state/hooks';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarm3UserDataAsync } from 'state/actions';\nimport { QuoteToken } from 'config/constants/types';\nimport useI18n from 'hooks/useI18n';\nimport FarmCard from './components/FarmCard/FarmCard';\nimport FarmTabButtons from './components/FarmTabButtons';\nimport Divider from './components/Divider';\nconst Details = styled.div`\n  display: flex;\n  align-items: center; \n  justify-content: center;\n  \n`;\n_c = Details;\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({\n  theme\n}) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`;\n_c2 = Hero;\n\nconst Farms = farmsProps => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const TranslateString = useI18n();\n  const farmsLP = useFarms3();\n  const cakePrice = usePrice3CakeBusd();\n  const bnbPrice = usePrice3BnbBusd();\n  const {\n    account,\n    ethereum\n  } = useWallet();\n  const {\n    tokenMode\n  } = farmsProps;\n  const dispatch = useDispatch();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarm3UserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const [stakedOnly, setStakedOnly] = useState(false);\n  const activeFarms = farmsLP.filter(farm => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X');\n  const inactiveFarms = farmsLP.filter(farm => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X');\n  const stakedOnlyFarms = activeFarms.filter(farm => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0)); // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n\n  const farmsList = useCallback((farmsToDisplay, removed) => {\n    // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n    const farmsToDisplayWithAPY = farmsToDisplay.map(farm => {\n      // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n      //   return farm\n      // }\n      const cakeRewardPerBlock = new BigNumber(farm.senzuPerBlock || 1).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18));\n      const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR);\n      let apy = cakePrice.times(cakeRewardPerYear);\n      let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        totalValue = totalValue.times(bnbPrice);\n      }\n\n      if (totalValue.comparedTo(0) > 0) {\n        apy = apy.div(totalValue);\n      }\n\n      return { ...farm,\n        apy\n      };\n    });\n    return farmsToDisplayWithAPY.map(farm => /*#__PURE__*/_jsxDEV(FarmCard, {\n      farm: farm,\n      removed: removed,\n      bnbPrice: bnbPrice,\n      cakePrice: cakePrice,\n      ethereum: ethereum,\n      account: account\n    }, farm.pid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this));\n  }, [bnbPrice, account, cakePrice, ethereum]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"xxl\",\n          mb: \"16px\",\n          children: \"Layer 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: TranslateString(5800, 'Layered Farming is highly volatile')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: TranslateString(4040, 'please do your own research before investing')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Details, {\n      children: tokenMode ? /*#__PURE__*/_jsxDEV(CardNav, {\n        activeIndex: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(CardNav, {\n        activeIndex: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"lg\",\n      color: \"primary\",\n      mb: \"50px\",\n      style: {\n        textAlign: 'center'\n      },\n      children: tokenMode ? TranslateString(100020, 'Stake tokens to earn SENZU') : TranslateString(3200, 'Stake LP tokens to earn SENZU')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      color: \"secondary\",\n      mb: \"50px\",\n      style: {\n        textAlign: 'center'\n      },\n      children: TranslateString(100000, 'Deposit Fee will be used to buyback DBALL')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FarmTabButtons, {\n      stakedOnly: stakedOnly,\n      setStakedOnly: setStakedOnly\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FlexLayout, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${path}`,\n          children: stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: `${path}/history`,\n          children: farmsList(inactiveFarms, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Image, {\n      src: \"/images/egg/12.png\",\n      alt: \"illustration\",\n      width: 1352,\n      height: 587,\n      responsive: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Farms, \"xnwqhypIGypZ7cBESg1VMNItlkU=\", false, function () {\n  return [useRouteMatch, useI18n, useFarms3, usePrice3CakeBusd, usePrice3BnbBusd, useWallet, useDispatch, useRefresh];\n});\n\n_c3 = Farms;\nexport default Farms;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Details\");\n$RefreshReg$(_c2, \"Hero\");\n$RefreshReg$(_c3, \"Farms\");","map":{"version":3,"sources":["D:/task159/frontend/src/views/Layer/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","Route","useRouteMatch","useDispatch","BigNumber","styled","useWallet","CardNav","Image","Heading","BLOCKS_PER_YEAR","FlexLayout","Page","useFarms3","usePrice3BnbBusd","usePrice3CakeBusd","useRefresh","fetchFarm3UserDataAsync","QuoteToken","useI18n","FarmCard","FarmTabButtons","Divider","Details","div","Hero","theme","colors","primary","Farms","farmsProps","path","TranslateString","farmsLP","cakePrice","bnbPrice","account","ethereum","tokenMode","dispatch","fastRefresh","stakedOnly","setStakedOnly","activeFarms","filter","farm","isTokenOnly","multiplier","inactiveFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","farmsList","farmsToDisplay","removed","farmsToDisplayWithAPY","map","cakeRewardPerBlock","senzuPerBlock","times","poolWeight","pow","cakeRewardPerYear","apy","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","BNB","comparedTo","pid","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport CardNav from 'components/CardNav'\nimport { Image, Heading, Text } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms3, usePrice3BnbBusd, usePrice3CakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarm3UserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Details = styled.div`\n  display: flex;\n  align-items: center; \n  justify-content: center;\n  \n`\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms3()\n  const cakePrice = usePrice3CakeBusd()\n  const bnbPrice = usePrice3BnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const {tokenMode} = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarm3UserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const cakeRewardPerBlock = new BigNumber(farm.senzuPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n        <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n          Layer 1\n        </Heading>\n        <ul>\n          <li>{TranslateString(5800, 'Layered Farming is highly volatile')}</li>\n          <li>{TranslateString(4040, 'please do your own research before investing')}</li>\n        </ul>\n        </div>\n      </Hero>\n      <Details>{tokenMode ? <CardNav activeIndex={2} /> : <CardNav activeIndex={1} />}</Details>\n      <Divider />\n      <Heading as=\"h2\" size=\"lg\" color=\"primary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {tokenMode\n          ? TranslateString(100020, 'Stake tokens to earn SENZU')\n          : TranslateString(3200, 'Stake LP tokens to earn SENZU')}\n      </Heading>\n      <Heading as=\"h3\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {TranslateString(100000, 'Deposit Fee will be used to buyback DBALL')}\n      </Heading>\n      <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} />\n      <div>\n        <Divider />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </FlexLayout>\n      </div>\n      <Image src=\"/images/egg/12.png\" alt=\"illustration\" width={1352} height={587} responsive />\n    </Page>\n  )\n}\n\nexport default Farms\n"]},"metadata":{},"sourceType":"module"}