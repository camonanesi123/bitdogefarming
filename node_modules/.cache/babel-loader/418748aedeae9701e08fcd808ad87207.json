{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import _regeneratorRuntime from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  flex-direction: column;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import{Button,Flex,Heading}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import{useHarvest3}from'hooks/useHarvest';import{getBalanceNumber}from'utils/formatBalance';import styled from'styled-components';import{useStake3}from'../../../../../hooks/useStake';var BalanceAndCompound=styled.div(_templateObject());var HarvestAction=function HarvestAction(_ref){var earnings=_ref.earnings,pid=_ref.pid;var TranslateString=useI18n();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useHarvest=useHarvest3(pid),onReward=_useHarvest.onReward;var _useStake=useStake3(pid),onStake=_useStake.onStake;var rawEarningsBalance=getBalanceNumber(earnings);var displayBalance=rawEarningsBalance.toLocaleString();return/*#__PURE__*/_jsxs(Flex,{mb:\"8px\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Heading,{color:rawEarningsBalance===0?'textDisabled':'text',children:displayBalance}),/*#__PURE__*/_jsxs(BalanceAndCompound,{children:[pid===11?/*#__PURE__*/_jsx(Button,{disabled:rawEarningsBalance===0||pendingTx,size:\"sm\",variant:\"secondary\",marginBottom:\"15px\",onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.next=3;return onStake(rawEarningsBalance.toString());case 3:setPendingTx(false);case 4:case\"end\":return _context.stop();}}},_callee);})),children:TranslateString(999,'Compound')}):null,/*#__PURE__*/_jsx(Button,{disabled:rawEarningsBalance===0||pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setPendingTx(true);_context2.next=3;return onReward();case 3:setPendingTx(false);case 4:case\"end\":return _context2.stop();}}},_callee2);})),children:TranslateString(999,'Harvest')})]})]});};export default HarvestAction;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Layer/Farms/components/FarmCard/HarvestAction.tsx"],"names":["React","useState","Button","Flex","Heading","useI18n","useHarvest3","getBalanceNumber","styled","useStake3","BalanceAndCompound","div","HarvestAction","earnings","pid","TranslateString","pendingTx","setPendingTx","onReward","onStake","rawEarningsBalance","displayBalance","toLocaleString","toString"],"mappings":"83BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,OAAvB,KAAsC,yBAAtC,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,SAAT,KAA0B,+BAA1B,CAOA,GAAMC,CAAAA,kBAAkB,CAAGF,MAAM,CAACG,GAAV,mBAAxB,CAOA,GAAMC,CAAAA,aAA6C,CAAG,QAAhDA,CAAAA,aAAgD,MAAuB,IAApBC,CAAAA,QAAoB,MAApBA,QAAoB,CAAVC,GAAU,MAAVA,GAAU,CAC3E,GAAMC,CAAAA,eAAe,CAAGV,OAAO,EAA/B,CAD2E,cAEzCJ,QAAQ,CAAC,KAAD,CAFiC,wCAEpEe,SAFoE,eAEzDC,YAFyD,+BAGtDX,WAAW,CAACQ,GAAD,CAH2C,CAGnEI,QAHmE,aAGnEA,QAHmE,eAIvDT,SAAS,CAACK,GAAD,CAJ8C,CAInEK,OAJmE,WAInEA,OAJmE,CAM3E,GAAMC,CAAAA,kBAAkB,CAAGb,gBAAgB,CAACM,QAAD,CAA3C,CACA,GAAMQ,CAAAA,cAAc,CAAGD,kBAAkB,CAACE,cAAnB,EAAvB,CAEA,mBACE,MAAC,IAAD,EAAM,EAAE,CAAC,KAAT,CAAe,cAAc,CAAC,eAA9B,CAA8C,UAAU,CAAC,QAAzD,wBACE,KAAC,OAAD,EAAS,KAAK,CAAEF,kBAAkB,GAAK,CAAvB,CAA2B,cAA3B,CAA4C,MAA5D,UAAqEC,cAArE,EADF,cAEE,MAAC,kBAAD,YACGP,GAAG,GAAK,EAAR,cACC,KAAC,MAAD,EACE,QAAQ,CAAEM,kBAAkB,GAAK,CAAvB,EAA4BJ,SADxC,CAEE,IAAI,CAAC,IAFP,CAGE,OAAO,CAAC,WAHV,CAIE,YAAY,CAAC,MAJf,CAKE,OAAO,sEAAE,mIACPC,YAAY,CAAC,IAAD,CAAZ,CADO,sBAEDE,CAAAA,OAAO,CAACC,kBAAkB,CAACG,QAAnB,EAAD,CAFN,QAGPN,YAAY,CAAC,KAAD,CAAZ,CAHO,sDAAF,EALT,UAWGF,eAAe,CAAC,GAAD,CAAM,UAAN,CAXlB,EADD,CAcG,IAfN,cAgBE,KAAC,MAAD,EACE,QAAQ,CAAEK,kBAAkB,GAAK,CAAvB,EAA4BJ,SADxC,CAEE,OAAO,sEAAE,wIACPC,YAAY,CAAC,IAAD,CAAZ,CADO,uBAEDC,CAAAA,QAAQ,EAFP,QAGPD,YAAY,CAAC,KAAD,CAAZ,CAHO,wDAAF,EAFT,UAQGF,eAAe,CAAC,GAAD,CAAM,SAAN,CARlB,EAhBF,GAFF,GADF,CAgCD,CAzCD,CA2CA,cAAeH,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useHarvest3 } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport { useStake3 } from '../../../../../hooks/useStake'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest3(pid)\n  const { onStake } = useStake3(pid)\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n\n  return (\n    <Flex mb='8px' justifyContent='space-between' alignItems='center'>\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n      <BalanceAndCompound>\n        {pid === 11 ?\n          <Button\n            disabled={rawEarningsBalance === 0 || pendingTx}\n            size='sm'\n            variant='secondary'\n            marginBottom='15px'\n            onClick={async () => {\n              setPendingTx(true)\n              await onStake(rawEarningsBalance.toString())\n              setPendingTx(false)\n            }}\n          >\n            {TranslateString(999, 'Compound')}\n          </Button>\n          : null}\n        <Button\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)\n          }}\n        >\n          {TranslateString(999, 'Harvest')}\n        </Button>\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n"]},"metadata":{},"sourceType":"module"}