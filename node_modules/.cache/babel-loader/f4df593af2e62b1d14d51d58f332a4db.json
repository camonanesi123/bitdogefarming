{"ast":null,"code":"import{getCakeAddress}from'utils/addressHelpers';import useTokenBalance from'./useTokenBalance';/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */var useHasCakeBalance=function useHasCakeBalance(minimumBalance){var cakeBalance=useTokenBalance(getCakeAddress());return cakeBalance.gte(minimumBalance);};export default useHasCakeBalance;","map":{"version":3,"sources":["D:/task159/frontend/src/hooks/useHasCakeBalance.ts"],"names":["getCakeAddress","useTokenBalance","useHasCakeBalance","minimumBalance","cakeBalance","gte"],"mappings":"AACA,OAASA,cAAT,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEA;AACA;AACA,GACA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,cAAD,CAA+B,CACvD,GAAMC,CAAAA,WAAW,CAAGH,eAAe,CAACD,cAAc,EAAf,CAAnC,CACA,MAAOI,CAAAA,WAAW,CAACC,GAAZ,CAAgBF,cAAhB,CAAP,CACD,CAHD,CAKA,cAAeD,CAAAA,iBAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useTokenBalance from './useTokenBalance'\n\n/**\n * A hook to check if a wallet's CAKE balance is at least the amount passed in\n */\nconst useHasCakeBalance = (minimumBalance: BigNumber) => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  return cakeBalance.gte(minimumBalance)\n}\n\nexport default useHasCakeBalance\n"]},"metadata":{},"sourceType":"module"}