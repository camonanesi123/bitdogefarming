{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\task159\\\\frontend\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\IfoPoolCard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { PoolIds } from 'config/constants/types';\nimport { Card, CardBody, CardHeader, Text, useTooltip, HelpIcon, Flex } from '@pancakeswap-libs/uikit';\nimport { useProfile } from 'state/hooks';\nimport IfoCardTokens from './IfoCardTokens';\nimport IfoCardActions from './IfoCardActions';\nimport IfoCardDetails from './IfoCardDetails';\nconst cardConfig = {\n  [PoolIds.poolBasic]: {\n    title: 'Basic Sale',\n    variant: 'blue',\n    tooltip: 'Every person can only commit a limited amount, but may expect a higher return per token committed.'\n  },\n  [PoolIds.poolUnlimited]: {\n    title: 'Unlimited Sale',\n    variant: 'violet',\n    tooltip: 'No limits on the amount you can commit. Additional fee applies when claiming.'\n  }\n};\n\nconst SmallCard = ({\n  poolId,\n  ifo,\n  publicIfoData,\n  walletIfoData\n}) => {\n  _s();\n\n  const config = cardConfig[poolId];\n  const {\n    hasProfile,\n    isLoading: isProfileLoading\n  } = useProfile();\n  const {\n    targetRef,\n    tooltip,\n    tooltipVisible\n  } = useTooltip(config.tooltip, 'bottom');\n  const isLoading = isProfileLoading || publicIfoData.status === 'idle';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [tooltipVisible && tooltip, /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        variant: config.variant,\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            bold: true,\n            fontSize: \"20px\",\n            children: config.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: targetRef,\n            children: /*#__PURE__*/_jsxDEV(HelpIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(IfoCardTokens, {\n          poolId: poolId,\n          ifo: ifo,\n          publicIfoData: publicIfoData,\n          walletIfoData: walletIfoData,\n          hasProfile: hasProfile,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IfoCardActions, {\n          poolId: poolId,\n          ifo: ifo,\n          publicIfoData: publicIfoData,\n          walletIfoData: walletIfoData,\n          hasProfile: hasProfile,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IfoCardDetails, {\n          poolId: poolId,\n          ifo: ifo,\n          publicIfoData: publicIfoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SmallCard, \"qPbhvX2M2gu6yub4ubn1sizZbgk=\", false, function () {\n  return [useProfile, useTooltip];\n});\n\n_c = SmallCard;\nexport default SmallCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SmallCard\");","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/index.tsx"],"names":["React","PoolIds","Card","CardBody","CardHeader","Text","useTooltip","HelpIcon","Flex","useProfile","IfoCardTokens","IfoCardActions","IfoCardDetails","cardConfig","poolBasic","title","variant","tooltip","poolUnlimited","SmallCard","poolId","ifo","publicIfoData","walletIfoData","config","hasProfile","isLoading","isProfileLoading","targetRef","tooltipVisible","status"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { Card, CardBody, CardHeader, Text, useTooltip, HelpIcon, Flex } from '@pancakeswap-libs/uikit'\nimport { useProfile } from 'state/hooks'\nimport { PublicIfoData, WalletIfoData } from 'hooks/ifo/types'\nimport IfoCardTokens from './IfoCardTokens'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardDetails from './IfoCardDetails'\n\ninterface IfoCardProps {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n}\n\ninterface CardConfig {\n  [key: string]: {\n    title: string\n    variant: 'blue' | 'violet'\n    tooltip: string\n  }\n}\n\nconst cardConfig: CardConfig = {\n  [PoolIds.poolBasic]: {\n    title: 'Basic Sale',\n    variant: 'blue',\n    tooltip: 'Every person can only commit a limited amount, but may expect a higher return per token committed.',\n  },\n  [PoolIds.poolUnlimited]: {\n    title: 'Unlimited Sale',\n    variant: 'violet',\n    tooltip: 'No limits on the amount you can commit. Additional fee applies when claiming.',\n  },\n}\n\nconst SmallCard: React.FC<IfoCardProps> = ({ poolId, ifo, publicIfoData, walletIfoData }) => {\n  const config = cardConfig[poolId]\n  const { hasProfile, isLoading: isProfileLoading } = useProfile()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(config.tooltip, 'bottom')\n\n  const isLoading = isProfileLoading || publicIfoData.status === 'idle'\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <Card>\n        <CardHeader variant={config.variant}>\n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text bold fontSize=\"20px\">\n              {config.title}\n            </Text>\n            <div ref={targetRef}>\n              <HelpIcon />\n            </div>\n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <IfoCardTokens\n            poolId={poolId}\n            ifo={ifo}\n            publicIfoData={publicIfoData}\n            walletIfoData={walletIfoData}\n            hasProfile={hasProfile}\n            isLoading={isLoading}\n          />\n          <IfoCardActions\n            poolId={poolId}\n            ifo={ifo}\n            publicIfoData={publicIfoData}\n            walletIfoData={walletIfoData}\n            hasProfile={hasProfile}\n            isLoading={isLoading}\n          />\n          <IfoCardDetails poolId={poolId} ifo={ifo} publicIfoData={publicIfoData} />\n        </CardBody>\n      </Card>\n    </>\n  )\n}\n\nexport default SmallCard\n"]},"metadata":{},"sourceType":"module"}