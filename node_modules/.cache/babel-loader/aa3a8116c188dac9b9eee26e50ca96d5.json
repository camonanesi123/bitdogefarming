{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{AutoRenewIcon,Button,Flex,Text}from'@pancakeswap-libs/uikit';import{useWallet}from'@binance-chain/bsc-use-wallet';import useI18n from'hooks/useI18n';import{useCake}from'hooks/useContract';import{useProfile,useToast}from'state/hooks';import{getPancakeProfileAddress}from'utils/addressHelpers';import{getFullDisplayBalance}from'utils/formatBalance';import useGetProfileCosts from'hooks/useGetProfileCosts';var ApproveCakePage=function ApproveCakePage(_ref){var goToChange=_ref.goToChange,onDismiss=_ref.onDismiss;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isApproving=_useState2[0],setIsApproving=_useState2[1];var _useProfile=useProfile(),profile=_useProfile.profile;var TranslateString=useI18n();var _useWallet=useWallet(),account=_useWallet.account;var _useGetProfileCosts=useGetProfileCosts(),numberCakeToUpdate=_useGetProfileCosts.numberCakeToUpdate,numberCakeToReactivate=_useGetProfileCosts.numberCakeToReactivate;var cakeContract=useCake();var _useToast=useToast(),toastError=_useToast.toastError;var cost=profile.isActive?numberCakeToUpdate:numberCakeToReactivate;var handleApprove=function handleApprove(){cakeContract.methods.approve(getPancakeProfileAddress(),cost.times(2).toJSON()).send({from:account}).on('sending',function(){setIsApproving(true);}).on('receipt',function(){goToChange();}).on('error',function(error){toastError('Error',error===null||error===void 0?void 0:error.message);setIsApproving(false);});};if(!profile){return null;}return/*#__PURE__*/_jsxs(Flex,{flexDirection:\"column\",children:[/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",justifyContent:\"space-between\",mb:\"24px\",children:[/*#__PURE__*/_jsx(Text,{children:profile.isActive?TranslateString(999,'Cost to update:'):TranslateString(999,'Cost to reactivate:')}),/*#__PURE__*/_jsx(Text,{children:TranslateString(999,\"\".concat(getFullDisplayBalance(cost),\" CAKE\"))})]}),/*#__PURE__*/_jsx(Button,{disabled:isApproving,isLoading:isApproving,endIcon:isApproving?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):null,width:\"100%\",mb:\"8px\",onClick:handleApprove,children:TranslateString(999,'Approve')}),/*#__PURE__*/_jsx(Button,{variant:\"text\",width:\"100%\",onClick:onDismiss,disabled:isApproving,children:TranslateString(999,'Close Window')})]});};export default ApproveCakePage;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Profile/components/EditProfileModal/ApproveCakeView.tsx"],"names":["React","useState","AutoRenewIcon","Button","Flex","Text","useWallet","useI18n","useCake","useProfile","useToast","getPancakeProfileAddress","getFullDisplayBalance","useGetProfileCosts","ApproveCakePage","goToChange","onDismiss","isApproving","setIsApproving","profile","TranslateString","account","numberCakeToUpdate","numberCakeToReactivate","cakeContract","toastError","cost","isActive","handleApprove","methods","approve","times","toJSON","send","from","on","error","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { AutoRenewIcon, Button, Flex, InjectedModalProps, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\nimport { useCake } from 'hooks/useContract'\nimport { useProfile, useToast } from 'state/hooks'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetProfileCosts from 'hooks/useGetProfileCosts'\nimport { UseEditProfileResponse } from './reducer'\n\n\ninterface ApproveCakePageProps extends InjectedModalProps {\n  goToChange: UseEditProfileResponse['goToChange']\n}\n\nconst ApproveCakePage: React.FC<ApproveCakePageProps> = ({ goToChange, onDismiss }) => {\n  const [isApproving, setIsApproving] = useState(false)\n  const { profile } = useProfile()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const { numberCakeToUpdate, numberCakeToReactivate } = useGetProfileCosts()\n  const cakeContract = useCake()\n  const { toastError } = useToast()\n  const cost = profile.isActive ? numberCakeToUpdate : numberCakeToReactivate\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(getPancakeProfileAddress(), cost.times(2).toJSON())\n      .send({ from: account })\n      .on('sending', () => {\n        setIsApproving(true)\n      })\n      .on('receipt', () => {\n        goToChange()\n      })\n      .on('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!profile) {\n    return null\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text>\n          {profile.isActive ? TranslateString(999, 'Cost to update:') : TranslateString(999, 'Cost to reactivate:')}\n        </Text>\n        <Text>{TranslateString(999, `${getFullDisplayBalance(cost)} CAKE`)}</Text>\n      </Flex>\n      <Button\n        disabled={isApproving}\n        isLoading={isApproving}\n        endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={handleApprove}\n      >\n        {TranslateString(999, 'Approve')}\n      </Button>\n      <Button variant=\"text\" width=\"100%\" onClick={onDismiss} disabled={isApproving}>\n        {TranslateString(999, 'Close Window')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default ApproveCakePage\n"]},"metadata":{},"sourceType":"module"}