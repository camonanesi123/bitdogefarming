{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$(),\n    _s19 = $RefreshSig$(),\n    _s20 = $RefreshSig$(),\n    _s21 = $RefreshSig$(),\n    _s22 = $RefreshSig$(),\n    _s23 = $RefreshSig$(),\n    _s24 = $RefreshSig$(),\n    _s25 = $RefreshSig$(),\n    _s26 = $RefreshSig$(),\n    _s27 = $RefreshSig$(),\n    _s28 = $RefreshSig$(),\n    _s29 = $RefreshSig$();\n\nimport { kebabCase } from 'lodash';\nimport BigNumber from 'bignumber.js';\nimport { getAddress } from 'utils/addressHelpers';\nimport { useEffect, useRef, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useRefresh from 'hooks/useRefresh';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { useAppDispatch } from 'state';\nimport { toastTypes } from '@pancakeswap-libs/uikit';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, fetchFarms3PublicDataAsync, push as pushToast, remove as removeToast, clear as clearToast } from './actions';\nimport { QuoteToken } from '../config/constants/types';\nimport { fetchAchievements } from './achievements';\nimport Nfts from '../config/constants/nfts';\nimport { fetchWalletNfts } from './collectibles';\nimport { fetchTeams } from './teams';\nimport { fetchProfile } from './profile';\nimport { fetchPrices } from './prices';\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID;\nconst ZERO = new BigNumber(0);\nexport const useFetchPublicData = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    slowRefresh\n  } = useRefresh();\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync());\n    dispatch(fetchPoolsPublicDataAsync());\n    dispatch(fetchFarms3PublicDataAsync());\n  }, [dispatch, slowRefresh]);\n}; // Farms\n\n_s(useFetchPublicData, \"62xjdgPJn/QiIg6iwBNbkeZ7l4I=\", false, function () {\n  return [useDispatch, useRefresh];\n});\n\nexport const useFarms = () => {\n  _s2();\n\n  const farms = useSelector(state => state.farms.data);\n  return farms;\n};\n\n_s2(useFarms, \"40tjDYBLbzKzCIdd0cwm+UIfe9E=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromPid = pid => {\n  _s3();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.pid === pid));\n  return farm;\n};\n\n_s3(useFarmFromPid, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmFromSymbol = lpSymbol => {\n  _s4();\n\n  const farm = useSelector(state => state.farms.data.find(f => f.lpSymbol === lpSymbol));\n  return farm;\n};\n\n_s4(useFarmFromSymbol, \"TOdL9+Oz8AEj+wmjEA7Olv/caxU=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarmUser = pid => {\n  _s5();\n\n  const farm = useFarmFromPid(pid);\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0)\n  };\n}; // Farms3\n\n_s5(useFarmUser, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const useFarms3 = () => {\n  _s6();\n\n  const farms3 = useSelector(state => state.farms3.data);\n  return farms3;\n};\n\n_s6(useFarms3, \"FqKKe+aHcA5yGMxdiO6XtPbc4yo=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarm3FromPid = pid => {\n  _s7();\n\n  const farm3 = useSelector(state => state.farms3.data.find(f => f.pid === pid));\n  return farm3;\n};\n\n_s7(useFarm3FromPid, \"SIvEt7/Se2bXNbxxh4fTu2Ubz18=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarm3FromSymbol = lpSymbol => {\n  _s8();\n\n  const farm3 = useSelector(state => state.farms3.data.find(f => f.lpSymbol === lpSymbol));\n  return farm3;\n};\n\n_s8(useFarm3FromSymbol, \"SIvEt7/Se2bXNbxxh4fTu2Ubz18=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFarm3User = pid => {\n  _s9();\n\n  const farm3 = useFarm3FromPid(pid);\n  return {\n    allowance: farm3.userData ? new BigNumber(farm3.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm3.userData ? new BigNumber(farm3.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm3.userData ? new BigNumber(farm3.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm3.userData ? new BigNumber(farm3.userData.earnings) : new BigNumber(0)\n  };\n}; // Pools\n\n_s9(useFarm3User, \"24gfuSt/8dOBz4ReWDRLKY6YQfw=\", false, function () {\n  return [useFarm3FromPid];\n});\n\nexport const usePools = account => {\n  _s10();\n\n  const {\n    fastRefresh\n  } = useRefresh();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  return useSelector(state => state.pools.data);\n};\n\n_s10(usePools, \"NUeAlYJpXRyhoEh1sFLvRX4gJgM=\", false, function () {\n  return [useRefresh, useDispatch, useSelector];\n});\n\nexport const usePoolFromPid = sousId => {\n  _s11();\n\n  return useSelector(state => state.pools.data.find(p => p.sousId === sousId));\n}; // Prices\n\n_s11(usePoolFromPid, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const usePriceBnbBusd = () => {\n  _s12();\n\n  const pid = 3; // BUSD-BNB LP\n\n  const farm = useFarmFromPid(pid);\n  return (farm === null || farm === void 0 ? void 0 : farm.tokenPriceVsQuote) ? new BigNumber(farm === null || farm === void 0 ? void 0 : farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s12(usePriceBnbBusd, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const usePriceCakeBusd = () => {\n  _s13();\n\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s13(usePriceCakeBusd, \"kxbBDHm0i5EJweIp+RPzOgw8PRU=\", false, function () {\n  return [useFarmFromPid];\n});\n\nexport const useTotalValue = () => {\n  _s14();\n\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const senzuPrice = usePrice3CakeBusd();\n  const cake2Price = useMemo(() => {\n    return new BigNumber(22);\n  }, []);\n  const cakePrice = usePriceCakeBusd();\n  const {\n    account\n  } = useWallet();\n  const pools = usePools(account);\n  const totalValue = useRef(new BigNumber(0));\n  useEffect(() => {\n    let farmsTotalValue = new BigNumber(0);\n\n    for (let i = 0; i < farms.length; i++) {\n      const farm = farms[i];\n\n      if (farm.lpTotalInQuoteToken) {\n        let val;\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          val = bnbPrice.times(farm.lpTotalInQuoteToken);\n        } else if (farm.quoteTokenSymbol === QuoteToken.SENZU) {\n          val = senzuPrice.times(farm.lpTotalInQuoteToken);\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE2) {\n          val = cake2Price.times(farm.lpTotalInQuoteToken);\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n          val = cakePrice.times(farm.lpTotalInQuoteToken);\n        } else {\n          val = farm.lpTotalInQuoteToken;\n        }\n\n        farmsTotalValue = farmsTotalValue.plus(val);\n      }\n    }\n\n    let poolsTotalValue = new BigNumber(0);\n\n    for (let i = 0; i < pools.length; i++) {\n      var _poolValue;\n\n      const pool = pools[i];\n      let poolValue;\n\n      if (pool.stakingTokenName === QuoteToken.CAKE) {\n        const totalSaltStaked = new BigNumber(pool.totalStaked).div(new BigNumber(10).pow(18));\n        poolValue = cakePrice.times(totalSaltStaked);\n      }\n\n      poolsTotalValue = poolsTotalValue.plus((_poolValue = poolValue) !== null && _poolValue !== void 0 ? _poolValue : ZERO);\n    }\n\n    totalValue.current = farmsTotalValue.plus(poolsTotalValue);\n  }, [bnbPrice, senzuPrice, farms, pools, cakePrice, cake2Price]);\n\n  if (!totalValue) {\n    return new BigNumber(0);\n  }\n\n  return totalValue.current;\n}; // Prices3\n\n_s14(useTotalValue, \"+plTB4bz32Aie6NEv7AEW59F/mU=\", false, function () {\n  return [useFarms, usePriceBnbBusd, usePrice3CakeBusd, usePriceCakeBusd, useWallet, usePools];\n});\n\nexport const usePrice3BnbBusd = () => {\n  _s15();\n\n  const pid = 7; // BUSD-BNB LP\n\n  const farm = useFarm3FromPid(pid);\n  return (farm === null || farm === void 0 ? void 0 : farm.tokenPriceVsQuote) ? new BigNumber(farm === null || farm === void 0 ? void 0 : farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s15(usePrice3BnbBusd, \"6YQAEjt6/ahjbtYkGs7wdUM2C/o=\", false, function () {\n  return [useFarm3FromPid];\n});\n\nexport const usePrice3CakeBusd = () => {\n  _s16();\n\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n\n  const farm = useFarm3FromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n};\n\n_s16(usePrice3CakeBusd, \"6YQAEjt6/ahjbtYkGs7wdUM2C/o=\", false, function () {\n  return [useFarm3FromPid];\n});\n\nexport const useTotalValue3 = () => {\n  _s17();\n\n  const farms = useFarms3();\n  const bnbPrice = usePrice3BnbBusd();\n  const cakePrice = usePrice3CakeBusd(); // console.log(\"bnbPrice\",bnbPrice)\n  // console.log(\"cakePrice\",cakePrice)\n\n  let value = new BigNumber(0);\n\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i];\n\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = bnbPrice.times(farm.lpTotalInQuoteToken);\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = cakePrice.times(farm.lpTotalInQuoteToken);\n      } else {\n        val = farm.lpTotalInQuoteToken;\n      }\n\n      value = value.plus(val);\n    }\n  }\n\n  return value;\n};\n\n_s17(useTotalValue3, \"z30MPn0mWYRfUTDfmtSg9e/C9zc=\", false, function () {\n  return [useFarms3, usePrice3BnbBusd, usePrice3CakeBusd];\n});\n\nexport const useProfile = () => {\n  _s18();\n\n  const {\n    isInitialized,\n    isLoading,\n    data,\n    hasRegistered\n  } = useSelector(state => state.profile);\n  return {\n    profile: data,\n    hasProfile: isInitialized && hasRegistered,\n    isInitialized,\n    isLoading\n  };\n}; // Toasts\n\n_s18(useProfile, \"IKFRbj5HxYVQqavhAzR0F+CGiS4=\", false, function () {\n  return [useSelector];\n});\n\nexport const useToast = () => {\n  _s19();\n\n  const dispatch = useAppDispatch();\n  const helpers = useMemo(() => {\n    const push = toast => dispatch(pushToast(toast));\n\n    return {\n      toastError: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.DANGER,\n          title,\n          description\n        });\n      },\n      toastInfo: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.INFO,\n          title,\n          description\n        });\n      },\n      toastSuccess: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.SUCCESS,\n          title,\n          description\n        });\n      },\n      toastWarning: (title, description) => {\n        return push({\n          id: kebabCase(title),\n          type: toastTypes.WARNING,\n          title,\n          description\n        });\n      },\n      push,\n      remove: id => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast())\n    };\n  }, [dispatch]);\n  return helpers;\n}; // Block\n\n_s19(useToast, \"2AKk6gRmgHm2CQY+3yKRKwaO99I=\", false, function () {\n  return [useAppDispatch];\n});\n\nexport const useBlock = () => {\n  _s20();\n\n  return useSelector(state => state.block);\n};\n\n_s20(useBlock, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport const useLpTokenPrice = symbol => {\n  _s21();\n\n  const farm = useFarmFromSymbol(symbol);\n  const tokenPriceInUsd = useGetApiPrice(getAddress(farm.tokenAddresses));\n  return farm.lpTotalSupply && farm.lpTotalInQuoteToken ? new BigNumber(getBalanceNumber(farm.lpTotalSupply)).div(farm.lpTotalInQuoteToken).times(tokenPriceInUsd).times(2) : new BigNumber(0);\n};\n\n_s21(useLpTokenPrice, \"EhH327xz0bVfSpIEeR1dik7tAro=\", false, function () {\n  return [useFarmFromSymbol, useGetApiPrice];\n});\n\nexport const useGetApiPrices = () => {\n  _s22();\n\n  const prices = useSelector(state => state.prices);\n  return prices;\n};\n\n_s22(useGetApiPrices, \"FfFSnB6kLWyrPuGGju2q0Rwh7JY=\", false, function () {\n  return [useSelector];\n});\n\nexport const useGetApiPrice = address => {\n  _s23();\n\n  const prices = useGetApiPrices();\n\n  if (!prices) {\n    return null;\n  }\n\n  return prices[address.toLowerCase()];\n};\n\n_s23(useGetApiPrice, \"4RSofgi5q8qs6bn/kfSx+OTTFNc=\", false, function () {\n  return [useGetApiPrices];\n});\n\nexport const useAchievements = () => {\n  _s24();\n\n  const achievements = useSelector(state => state.achievements.data);\n  return achievements;\n}; // Achievements\n\n_s24(useAchievements, \"YSK51t5rwnyiHZ93Q8BnGfHM9jA=\", false, function () {\n  return [useSelector];\n});\n\nexport const useFetchAchievements = () => {\n  _s25();\n\n  // const { account } = useWeb3React()\n  const {\n    account\n  } = useWallet();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account));\n    }\n  }, [account, dispatch]);\n}; // Collectibles\n\n_s25(useFetchAchievements, \"M6h8Q0nzXgeHOJnU8Z28ku3Kkos=\", false, function () {\n  return [useWallet, useAppDispatch];\n});\n\nexport const useGetCollectibles = () => {\n  _s26();\n\n  const {\n    account\n  } = useWallet();\n  const dispatch = useAppDispatch();\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.collectibles);\n  const identifiers = Object.keys(data);\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account));\n    }\n  }, [isInitialized, account, dispatch]);\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter(nft => identifiers.includes(nft.identifier))\n  };\n};\n\n_s26(useGetCollectibles, \"uU0ICqnpGJrJurKrCjGKR7iaokA=\", false, function () {\n  return [useWallet, useAppDispatch, useSelector];\n});\n\nexport const useTeams = () => {\n  _s27();\n\n  const {\n    isInitialized,\n    isLoading,\n    data\n  } = useSelector(state => state.teams);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchTeams());\n  }, [dispatch]);\n  return {\n    teams: data,\n    isInitialized,\n    isLoading\n  };\n};\n\n_s27(useTeams, \"MG/rX3obHehsmT4LdcT3JsnsVRA=\", false, function () {\n  return [useSelector, useAppDispatch];\n});\n\nexport const useFetchProfile = () => {\n  _s28();\n\n  // const { account } = useWeb3React()\n  const {\n    account\n  } = useWallet();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchProfile(account));\n  }, [account, dispatch]);\n};\n\n_s28(useFetchProfile, \"M6h8Q0nzXgeHOJnU8Z28ku3Kkos=\", false, function () {\n  return [useWallet, useAppDispatch];\n});\n\nexport const useFetchPriceList = () => {\n  _s29();\n\n  const {\n    slowRefresh\n  } = useRefresh();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchPrices());\n  }, [dispatch, slowRefresh]);\n};\n\n_s29(useFetchPriceList, \"2esdmYbJUjAuA8POa4MwlrAwRNU=\", false, function () {\n  return [useRefresh, useAppDispatch];\n});","map":{"version":3,"sources":["D:/task159/frontend/src/state/hooks.ts"],"names":["kebabCase","BigNumber","getAddress","useEffect","useRef","useMemo","useSelector","useDispatch","useRefresh","useWallet","useAppDispatch","toastTypes","getBalanceNumber","fetchFarmsPublicDataAsync","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","fetchFarms3PublicDataAsync","push","pushToast","remove","removeToast","clear","clearToast","QuoteToken","fetchAchievements","Nfts","fetchWalletNfts","fetchTeams","fetchProfile","fetchPrices","CHAIN_ID","process","env","REACT_APP_CHAIN_ID","ZERO","useFetchPublicData","dispatch","slowRefresh","useFarms","farms","state","data","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","useFarms3","farms3","useFarm3FromPid","farm3","useFarm3FromSymbol","useFarm3User","usePools","account","fastRefresh","pools","usePoolFromPid","sousId","p","usePriceBnbBusd","tokenPriceVsQuote","usePriceCakeBusd","useTotalValue","bnbPrice","senzuPrice","usePrice3CakeBusd","cake2Price","cakePrice","totalValue","farmsTotalValue","i","length","lpTotalInQuoteToken","val","quoteTokenSymbol","BNB","times","SENZU","CAKE2","CAKE","plus","poolsTotalValue","pool","poolValue","stakingTokenName","totalSaltStaked","totalStaked","div","pow","current","usePrice3BnbBusd","useTotalValue3","value","useProfile","isInitialized","isLoading","hasRegistered","profile","hasProfile","useToast","helpers","toast","toastError","title","description","id","type","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","useBlock","block","useLpTokenPrice","symbol","tokenPriceInUsd","useGetApiPrice","tokenAddresses","lpTotalSupply","useGetApiPrices","prices","address","toLowerCase","useAchievements","achievements","useFetchAchievements","useGetCollectibles","collectibles","identifiers","Object","keys","tokenIds","nftsInWallet","filter","nft","includes","identifier","useTeams","teams","useFetchProfile","useFetchPriceList"],"mappings":"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","sourcesContent":["import { kebabCase } from 'lodash'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useWeb3React } from '@web3-react/core'\nimport { useEffect, useRef, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useAppDispatch } from 'state'\nimport { Toast, toastTypes } from '@pancakeswap-libs/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport {\n  fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync, fetchFarms3PublicDataAsync,\n  push as pushToast,\n  remove as removeToast,\n  clear as clearToast\n} from './actions'\nimport { State, PriceState, ProfileState, Farm, Pool, Farm3, AchievementState, TeamsState } from './types'\nimport { QuoteToken } from '../config/constants/types'\nimport { fetchAchievements } from './achievements'\nimport Nfts from '../config/constants/nfts'\nimport { fetchWalletNfts } from './collectibles'\nimport { fetchTeams } from './teams'\nimport { fetchProfile } from './profile'\nimport { fetchPrices } from './prices'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n    dispatch(fetchFarms3PublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n// Farms3\n\nexport const useFarms3 = (): Farm3[] => {\n  const farms3 = useSelector((state: State) => state.farms3.data)\n  return farms3\n}\n\nexport const useFarm3FromPid = (pid): Farm3 => {\n  const farm3 = useSelector((state: State) => state.farms3.data.find((f) => f.pid === pid))\n  return farm3\n}\n\nexport const useFarm3FromSymbol = (lpSymbol: string): Farm3 => {\n  const farm3 = useSelector((state: State) => state.farms3.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm3\n}\n\nexport const useFarm3User = (pid) => {\n  const farm3 = useFarm3FromPid(pid)\n\n  return {\n    allowance: farm3.userData ? new BigNumber(farm3.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm3.userData ? new BigNumber(farm3.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm3.userData ? new BigNumber(farm3.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm3.userData ? new BigNumber(farm3.userData.earnings) : new BigNumber(0),\n  }\n}\n// Pools\n\nexport const usePools = (account: string): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  return useSelector((state: State) => state.pools.data)\n}\n\nexport const usePoolFromPid = (sousId: number): Pool =>\n  useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = 3 // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm?.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n  const farm = useFarmFromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const senzuPrice = usePrice3CakeBusd();\n  const cake2Price: BigNumber = useMemo(() => {\n    return new BigNumber(22)\n  }, [])\n  const cakePrice = usePriceCakeBusd();\n\n  const { account } = useWallet()\n  const pools = usePools(account)\n  const totalValue = useRef(new BigNumber(0))\n\n  useEffect(() => {\n    let farmsTotalValue = new BigNumber(0)\n    for (let i = 0; i < farms.length; i++) {\n      const farm = farms[i]\n      if (farm.lpTotalInQuoteToken) {\n        let val\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          val = bnbPrice.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.SENZU) {\n          val = senzuPrice.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE2) {\n          val = cake2Price.times(farm.lpTotalInQuoteToken)\n        } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n          val = cakePrice.times(farm.lpTotalInQuoteToken)\n        } else {\n          val = farm.lpTotalInQuoteToken\n        }\n        farmsTotalValue = farmsTotalValue.plus(val)\n      }\n    }\n\n    let poolsTotalValue = new BigNumber(0)\n    for (let i = 0; i < pools.length; i++) {\n      const pool = pools[i]\n      let poolValue: BigNumber\n      if (pool.stakingTokenName === QuoteToken.CAKE) {\n        const totalSaltStaked = new BigNumber(pool.totalStaked).div(new BigNumber(10).pow(18))\n        poolValue = cakePrice.times(totalSaltStaked)\n      }\n\n      poolsTotalValue = poolsTotalValue.plus(poolValue ?? ZERO)\n    }\n\n    totalValue.current = farmsTotalValue.plus(poolsTotalValue)\n  }, [bnbPrice, senzuPrice, farms, pools, cakePrice, cake2Price])\n\n  if (!totalValue) {\n    return new BigNumber(0)\n  }\n  return totalValue.current\n}\n\n\n// Prices3\n\nexport const usePrice3BnbBusd = (): BigNumber => {\n  const pid = 7 // BUSD-BNB LP\n  const farm = useFarm3FromPid(pid)\n  return farm?.tokenPriceVsQuote ? new BigNumber(farm?.tokenPriceVsQuote) : ZERO\n}\n\nexport const usePrice3CakeBusd = (): BigNumber => {\n  // const pid = 1 // CAKE-BNB LP\n  // const bnbPriceUSD = usePriceBnbBusd()\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  const pid = 0; // EGG-BUSD LP\n  const farm = useFarm3FromPid(pid);\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n}\n\nexport const useTotalValue3 = (): BigNumber => {\n  const farms = useFarms3();\n  const bnbPrice = usePrice3BnbBusd();\n  const cakePrice = usePrice3CakeBusd();\n\n  // console.log(\"bnbPrice\",bnbPrice)\n  // console.log(\"cakePrice\",cakePrice)\n\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n\n    }\n  }\n  return value;\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Toasts\nexport const useToast = () => {\n  const dispatch = useAppDispatch()\n  const helpers = useMemo(() => {\n    const push = (toast: Toast) => dispatch(pushToast(toast))\n\n    return {\n      toastError: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.DANGER, title, description })\n      },\n      toastInfo: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.INFO, title, description })\n      },\n      toastSuccess: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.SUCCESS, title, description })\n      },\n      toastWarning: (title: string, description?: string) => {\n        return push({ id: kebabCase(title), type: toastTypes.WARNING, title, description })\n      },\n      push,\n      remove: (id: string) => dispatch(removeToast(id)),\n      clear: () => dispatch(clearToast()),\n    }\n  }, [dispatch])\n\n  return helpers\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromSymbol(symbol)\n  const tokenPriceInUsd = useGetApiPrice(getAddress(farm.tokenAddresses))\n\n  return farm.lpTotalSupply && farm.lpTotalInQuoteToken\n    ? new BigNumber(getBalanceNumber(farm.lpTotalSupply)).div(farm.lpTotalInQuoteToken).times(tokenPriceInUsd).times(2)\n    : new BigNumber(0)\n}\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices)\n  return prices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[address.toLowerCase()]\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n// Achievements\n\nexport const useFetchAchievements = () => {\n  // const { account } = useWeb3React()\n  const { account } = useWallet()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  \n  const { account } = useWallet()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\nexport const useFetchProfile = () => {\n  // const { account } = useWeb3React()\n  const { account } = useWallet()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}"]},"metadata":{},"sourceType":"module"}