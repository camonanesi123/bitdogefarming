{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\task159\\\\frontend\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoFoldableCard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { PoolIds } from 'config/constants/types';\nimport { Card, CardHeader, CardBody, CardFooter, CardRibbon, ExpandableButton, Progress, Button, ChevronUpIcon } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport IfoPoolCard from './IfoPoolCard';\nimport Timer from './Timer';\nimport Achievement from './Achievement';\n\nconst getRibbonComponent = (status, TranslateString) => {\n  if (status === 'coming_soon') {\n    return /*#__PURE__*/_jsxDEV(CardRibbon, {\n      variantColor: \"textDisabled\",\n      ribbonPosition: \"left\",\n      text: TranslateString(999, 'Coming Soon')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (status === 'live') {\n    return /*#__PURE__*/_jsxDEV(CardRibbon, {\n      variantColor: \"primary\",\n      ribbonPosition: \"left\",\n      text: TranslateString(999, 'LIVE!')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n  return null;\n};\n\nconst StyledCard = styled(Card)`\n  max-width: 736px;\n  width: 100%;\n  margin: auto;\n`;\n_c = StyledCard;\nconst Header = styled(CardHeader)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 112px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({\n  ifoId\n}) => `url('/images/ifos/${ifoId}-bg.svg')`};\n`;\n_c2 = Header;\nconst FoldableContent = styled.div`\n  display: ${({\n  isVisible\n}) => isVisible ? 'block' : 'none'};\n  background: ${({\n  isActive,\n  theme\n}) => isActive ? theme.colors.gradients.bubblegum : theme.colors.dropdown};\n`;\n_c3 = FoldableContent;\nconst CardsWrapper = styled.div`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-bottom: 32px;\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    grid-template-columns: ${({\n  singleCard\n}) => singleCard ? '1fr' : '1fr 1fr'};\n    justify-items: ${({\n  singleCard\n}) => singleCard ? 'center' : 'unset'};\n  }\n`;\n_c4 = CardsWrapper;\nconst StyledCardBody = styled(CardBody)`\n  padding: 24px 16px;\n  ${({\n  theme\n}) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`;\n_c5 = StyledCardBody;\nconst StyledCardFooter = styled(CardFooter)`\n  text-align: center;\n  padding: 8px;\n  background: ${({\n  theme\n}) => theme.colors.backgroundAlt};\n`;\n_c6 = StyledCardFooter;\n\nconst IfoFoldableCard = ({\n  ifo,\n  publicIfoData,\n  walletIfoData,\n  isInitiallyVisible\n}) => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(isInitiallyVisible);\n  const TranslateString = useI18n();\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString);\n  const isActive = publicIfoData.status !== 'finished' && ifo.isActive;\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    ribbon: Ribbon,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      ifoId: ifo.id,\n      children: /*#__PURE__*/_jsxDEV(ExpandableButton, {\n        expanded: isVisible,\n        onClick: () => setIsVisible(prev => !prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FoldableContent, {\n      isVisible: isVisible,\n      isActive: publicIfoData.status !== 'idle' && isActive,\n      children: [isActive && /*#__PURE__*/_jsxDEV(Progress, {\n        variant: \"flat\",\n        primaryStep: publicIfoData.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardBody, {\n        children: [isActive && /*#__PURE__*/_jsxDEV(Timer, {\n          publicIfoData: publicIfoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(CardsWrapper, {\n          singleCard: !publicIfoData.poolBasic || !walletIfoData.poolBasic,\n          children: [publicIfoData.poolBasic && walletIfoData.poolBasic && /*#__PURE__*/_jsxDEV(IfoPoolCard, {\n            poolId: PoolIds.poolBasic,\n            ifo: ifo,\n            publicIfoData: publicIfoData,\n            walletIfoData: walletIfoData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IfoPoolCard, {\n            poolId: PoolIds.poolUnlimited,\n            ifo: ifo,\n            publicIfoData: publicIfoData,\n            walletIfoData: walletIfoData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Achievement, {\n          ifo: ifo,\n          publicIfoData: publicIfoData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCardFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          endIcon: /*#__PURE__*/_jsxDEV(ChevronUpIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 43\n          }, this),\n          onClick: () => setIsVisible(false),\n          children: TranslateString(999, 'Close')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IfoFoldableCard, \"dtUHHi9QRf9hduPPFwm2/vVuHbA=\", false, function () {\n  return [useI18n];\n});\n\n_c7 = IfoFoldableCard;\nexport default IfoFoldableCard;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"FoldableContent\");\n$RefreshReg$(_c4, \"CardsWrapper\");\n$RefreshReg$(_c5, \"StyledCardBody\");\n$RefreshReg$(_c6, \"StyledCardFooter\");\n$RefreshReg$(_c7, \"IfoFoldableCard\");","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoFoldableCard/index.tsx"],"names":["React","useState","styled","PoolIds","Card","CardHeader","CardBody","CardFooter","CardRibbon","ExpandableButton","Progress","Button","ChevronUpIcon","useI18n","IfoPoolCard","Timer","Achievement","getRibbonComponent","status","TranslateString","StyledCard","Header","ifoId","FoldableContent","div","isVisible","isActive","theme","colors","gradients","bubblegum","dropdown","CardsWrapper","mediaQueries","md","singleCard","StyledCardBody","StyledCardFooter","backgroundAlt","IfoFoldableCard","ifo","publicIfoData","walletIfoData","isInitiallyVisible","setIsVisible","Ribbon","id","prev","progress","poolBasic","poolUnlimited"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Ifo, IfoStatus, PoolIds } from 'config/constants/types'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardRibbon,\n  ExpandableButton,\n  Progress,\n  Button,\n  ChevronUpIcon,\n} from '@pancakeswap-libs/uikit'\nimport { PublicIfoData, WalletIfoData } from 'hooks/ifo/types'\nimport useI18n from 'hooks/useI18n'\nimport IfoPoolCard from './IfoPoolCard'\nimport Timer from './Timer'\nimport Achievement from './Achievement'\n\ninterface IfoFoldableCardProps {\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n  isInitiallyVisible: boolean\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" ribbonPosition=\"left\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" ribbonPosition=\"left\" text={TranslateString(999, 'LIVE!')} />\n  }\n\n  return null\n}\n\nconst StyledCard = styled(Card)`\n  max-width: 736px;\n  width: 100%;\n  margin: auto;\n`\n\nconst Header = styled(CardHeader)<{ ifoId: string }>`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 112px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n`\n\nconst FoldableContent = styled.div<{ isVisible: boolean; isActive: boolean }>`\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\n  background: ${({ isActive, theme }) => (isActive ? theme.colors.gradients.bubblegum : theme.colors.dropdown)};\n`\n\nconst CardsWrapper = styled.div<{ singleCard: boolean }>`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-bottom: 32px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ singleCard }) => (singleCard ? '1fr' : '1fr 1fr')};\n    justify-items: ${({ singleCard }) => (singleCard ? 'center' : 'unset')};\n  }\n`\n\nconst StyledCardBody = styled(CardBody)`\n  padding: 24px 16px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\n\nconst StyledCardFooter = styled(CardFooter)`\n  text-align: center;\n  padding: 8px;\n  background: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst IfoFoldableCard: React.FC<IfoFoldableCardProps> = ({ ifo, publicIfoData, walletIfoData, isInitiallyVisible }) => {\n  const [isVisible, setIsVisible] = useState(isInitiallyVisible)\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\n  const isActive = publicIfoData.status !== 'finished' && ifo.isActive\n\n  return (\n    <StyledCard ribbon={Ribbon}>\n      <Header ifoId={ifo.id}>\n        <ExpandableButton expanded={isVisible} onClick={() => setIsVisible((prev) => !prev)} />\n      </Header>\n      <FoldableContent isVisible={isVisible} isActive={publicIfoData.status !== 'idle' && isActive}>\n        {isActive && <Progress variant=\"flat\" primaryStep={publicIfoData.progress} />}\n        <StyledCardBody>\n          {isActive && <Timer publicIfoData={publicIfoData} />}\n          <CardsWrapper singleCard={!publicIfoData.poolBasic || !walletIfoData.poolBasic}>\n            {publicIfoData.poolBasic && walletIfoData.poolBasic && (\n              <IfoPoolCard\n                poolId={PoolIds.poolBasic}\n                ifo={ifo}\n                publicIfoData={publicIfoData}\n                walletIfoData={walletIfoData}\n              />\n            )}\n            <IfoPoolCard\n              poolId={PoolIds.poolUnlimited}\n              ifo={ifo}\n              publicIfoData={publicIfoData}\n              walletIfoData={walletIfoData}\n            />\n          </CardsWrapper>\n          <Achievement ifo={ifo} publicIfoData={publicIfoData} />\n        </StyledCardBody>\n        <StyledCardFooter>\n          <Button variant=\"text\" endIcon={<ChevronUpIcon color=\"primary\" />} onClick={() => setIsVisible(false)}>\n            {TranslateString(999, 'Close')}\n          </Button>\n        </StyledCardFooter>\n      </FoldableContent>\n    </StyledCard>\n  )\n}\n\nexport default IfoFoldableCard\n"]},"metadata":{},"sourceType":"module"}