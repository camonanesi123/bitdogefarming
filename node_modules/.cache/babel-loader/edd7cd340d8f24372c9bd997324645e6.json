{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { useDispatch } from 'react-redux';\nimport { fetchFarmUserDataAsync, fetchFarm3UserDataAsync, updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions';\nimport { unstake, smartChefUnstake } from 'utils/callHelpers';\nimport { useMasterchef, useMasterchef3, useSmartChef } from './useContract';\n\nconst useUnstake = pid => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWallet();\n  const masterChefContract = useMasterchef();\n  const handleUnstake = useCallback(async amount => {\n    const txHash = await unstake(masterChefContract, pid, amount, account);\n    dispatch(fetchFarmUserDataAsync(account));\n    console.info(txHash);\n  }, [account, dispatch, masterChefContract, pid]);\n  return {\n    onUnstake: handleUnstake\n  };\n};\n\n_s(useUnstake, \"zJOfsUBwQjUSBQmKcK0zWz87/wI=\", false, function () {\n  return [useDispatch, useWallet, useMasterchef];\n});\n\nexport const useUnstake3 = pid => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWallet();\n  const masterChef3Contract = useMasterchef3();\n  const handleUnstake = useCallback(async amount => {\n    const txHash = await unstake(masterChef3Contract, pid, amount, account);\n    dispatch(fetchFarm3UserDataAsync(account));\n    console.info(txHash);\n  }, [account, dispatch, masterChef3Contract, pid]);\n  return {\n    onUnstake: handleUnstake\n  };\n};\n\n_s2(useUnstake3, \"7cDMaleLdbPx5HLULpCYWkEcIVU=\", false, function () {\n  return [useDispatch, useWallet, useMasterchef3];\n});\n\nexport const useSmartUnstake = sousId => {\n  _s3();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWallet();\n  const smartChefContract = useSmartChef(sousId);\n  const handleUnstake = useCallback(async amount => {\n    await smartChefUnstake(smartChefContract, amount, account);\n    dispatch(updateUserStakedBalance(String(sousId), account));\n    dispatch(updateUserBalance(String(sousId), account));\n    dispatch(updateUserPendingReward(String(sousId), account));\n  }, [account, dispatch, smartChefContract, sousId]);\n  return {\n    onUnstake: handleUnstake\n  };\n};\n\n_s3(useSmartUnstake, \"uS+v+8Dx75bQILi/59wxNCpGbhU=\", false, function () {\n  return [useDispatch, useWallet, useSmartChef];\n});\n\nexport default useUnstake;","map":{"version":3,"sources":["D:/task159/frontend/src/hooks/useUnstake.ts"],"names":["useCallback","useWallet","useDispatch","fetchFarmUserDataAsync","fetchFarm3UserDataAsync","updateUserStakedBalance","updateUserBalance","updateUserPendingReward","unstake","smartChefUnstake","useMasterchef","useMasterchef3","useSmartChef","useUnstake","pid","dispatch","account","masterChefContract","handleUnstake","amount","txHash","console","info","onUnstake","useUnstake3","masterChef3Contract","useSmartUnstake","sousId","smartChefContract","String"],"mappings":"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","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  fetchFarm3UserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, smartChefUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useMasterchef3, useSmartChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useUnstake3 = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChef3Contract = useMasterchef3()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChef3Contract, pid, amount, account)\n      dispatch(fetchFarm3UserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChef3Contract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSmartUnstake = (sousId: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      await smartChefUnstake(smartChefContract, amount, account)\n      dispatch(updateUserStakedBalance(String(sousId), account))\n      dispatch(updateUserBalance(String(sousId), account))\n      dispatch(updateUserPendingReward(String(sousId), account))\n    },\n    [account, dispatch, smartChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n"]},"metadata":{},"sourceType":"module"}