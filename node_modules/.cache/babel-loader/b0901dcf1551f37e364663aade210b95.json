{"ast":null,"code":"import _regeneratorRuntime from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import BigNumber from'bignumber.js';import erc20ABI from'config/abi/erc20.json';import masterchef3ABI from'config/abi/masterchef3.json';import multicall from'utils/multicall';import farms3Config from'config/constants/farms3';import{getMasterChef3Address}from'utils/addressHelpers';var CHAIN_ID=process.env.REACT_APP_CHAIN_ID;export var fetchFarm3UserAllowances=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(account){var masterChef3Adress,calls,rawLpAllowances,parsedLpAllowances;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:masterChef3Adress=getMasterChef3Address();calls=farms3Config.map(function(farm){var lpContractAddress=farm.isTokenOnly?farm.tokenAddresses[CHAIN_ID]:farm.lpAddresses[CHAIN_ID];return{address:lpContractAddress,name:'allowance',params:[account,masterChef3Adress]};});_context.next=4;return multicall(erc20ABI,calls);case 4:rawLpAllowances=_context.sent;parsedLpAllowances=rawLpAllowances.map(function(lpBalance){return new BigNumber(lpBalance).toJSON();});return _context.abrupt(\"return\",parsedLpAllowances);case 7:case\"end\":return _context.stop();}}},_callee);}));return function fetchFarm3UserAllowances(_x){return _ref.apply(this,arguments);};}();export var fetchFarm3UserTokenBalances=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(account){var calls,rawTokenBalances,parsedTokenBalances;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:calls=farms3Config.map(function(farm){var lpContractAddress=farm.isTokenOnly?farm.tokenAddresses[CHAIN_ID]:farm.lpAddresses[CHAIN_ID];return{address:lpContractAddress,name:'balanceOf',params:[account]};});_context2.next=3;return multicall(erc20ABI,calls);case 3:rawTokenBalances=_context2.sent;parsedTokenBalances=rawTokenBalances.map(function(tokenBalance){return new BigNumber(tokenBalance).toJSON();});return _context2.abrupt(\"return\",parsedTokenBalances);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchFarm3UserTokenBalances(_x2){return _ref2.apply(this,arguments);};}();export var fetchFarm3UserStakedBalances=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(account){var masterChef3Adress,calls,rawStakedBalances,parsedStakedBalances;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:masterChef3Adress=getMasterChef3Address();calls=farms3Config.map(function(farm){return{address:masterChef3Adress,name:'userInfo',params:[farm.pid,account]};});_context3.next=4;return multicall(masterchef3ABI,calls);case 4:rawStakedBalances=_context3.sent;parsedStakedBalances=rawStakedBalances.map(function(stakedBalance){return new BigNumber(stakedBalance[0]._hex).toJSON();});return _context3.abrupt(\"return\",parsedStakedBalances);case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchFarm3UserStakedBalances(_x3){return _ref3.apply(this,arguments);};}();export var fetchFarm3UserEarnings=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(account){var masterChef3Adress,calls,rawEarnings,parsedEarnings;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:masterChef3Adress=getMasterChef3Address();calls=farms3Config.map(function(farm){return{address:masterChef3Adress,name:'pendingEgg',params:[farm.pid,account]};});_context4.next=4;return multicall(masterchef3ABI,calls);case 4:rawEarnings=_context4.sent;parsedEarnings=rawEarnings.map(function(earnings){return new BigNumber(earnings).toJSON();});return _context4.abrupt(\"return\",parsedEarnings);case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function fetchFarm3UserEarnings(_x4){return _ref4.apply(this,arguments);};}();","map":{"version":3,"sources":["D:/task159/frontend/src/state/farms3/fetchFarmUser3.ts"],"names":["BigNumber","erc20ABI","masterchef3ABI","multicall","farms3Config","getMasterChef3Address","CHAIN_ID","process","env","REACT_APP_CHAIN_ID","fetchFarm3UserAllowances","account","masterChef3Adress","calls","map","farm","lpContractAddress","isTokenOnly","tokenAddresses","lpAddresses","address","name","params","rawLpAllowances","parsedLpAllowances","lpBalance","toJSON","fetchFarm3UserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarm3UserStakedBalances","pid","rawStakedBalances","parsedStakedBalances","stakedBalance","_hex","fetchFarm3UserEarnings","rawEarnings","parsedEarnings","earnings"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchef3ABI from 'config/abi/masterchef3.json'\nimport multicall from 'utils/multicall'\nimport farms3Config from 'config/constants/farms3'\nimport { getMasterChef3Address } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarm3UserAllowances = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChef3Adress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarm3UserTokenBalances = async (account: string) => {\n  const calls = farms3Config.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarm3UserStakedBalances = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    return {\n      address: masterChef3Adress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchef3ABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarm3UserEarnings = async (account: string) => {\n  const masterChef3Adress = getMasterChef3Address()\n\n  const calls = farms3Config.map((farm) => {\n    return {\n      address: masterChef3Adress,\n      name: 'pendingEgg',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchef3ABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n"]},"metadata":{},"sourceType":"module"}