{"ast":null,"code":"import _toConsumableArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useCallback}from'react';import{useWallet}from'@binance-chain/bsc-use-wallet';import{useDispatch}from'react-redux';import{fetchFarmUserDataAsync,fetchFarm3UserDataAsync,updateUserBalance,updateUserPendingReward}from'state/actions';import{smartHarvest,smartHarvestBnb,harvest}from'utils/callHelpers';import{useMasterchef,useMasterchef3,useSmartChef}from'./useContract';export var useHarvest=function useHarvest(farmPid){var dispatch=useDispatch();var _useWallet=useWallet(),account=_useWallet.account;var masterChefContract=useMasterchef();var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var txHash;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return harvest(masterChefContract,farmPid,account);case 2:txHash=_context.sent;dispatch(fetchFarmUserDataAsync(account));return _context.abrupt(\"return\",txHash);case 5:case\"end\":return _context.stop();}}},_callee);})),[account,dispatch,farmPid,masterChefContract]);return{onReward:handleHarvest};};export var useAllHarvest=function useAllHarvest(farmPids){var _useWallet2=useWallet(),account=_useWallet2.account;var masterChefContract=useMasterchef();var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var harvestPromises;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:harvestPromises=farmPids.reduce(function(accum,pid){return[].concat(_toConsumableArray(accum),[harvest(masterChefContract,pid,account)]);},[]);return _context2.abrupt(\"return\",Promise.all(harvestPromises));case 2:case\"end\":return _context2.stop();}}},_callee2);})),[account,farmPids,masterChefContract]);return{onReward:handleHarvest};};export var useHarvest3=function useHarvest3(farmPid){var dispatch=useDispatch();var _useWallet3=useWallet(),account=_useWallet3.account;var masterChef3Contract=useMasterchef3();var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var txHash;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return harvest(masterChef3Contract,farmPid,account);case 2:txHash=_context3.sent;dispatch(fetchFarm3UserDataAsync(account));return _context3.abrupt(\"return\",txHash);case 5:case\"end\":return _context3.stop();}}},_callee3);})),[account,dispatch,farmPid,masterChef3Contract]);return{onReward:handleHarvest};};export var useAllHarvest3=function useAllHarvest3(farmPids){var _useWallet4=useWallet(),account=_useWallet4.account;var masterChef3Contract=useMasterchef3();var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var harvestPromises;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:harvestPromises=farmPids.reduce(function(accum,pid){return[].concat(_toConsumableArray(accum),[harvest(masterChef3Contract,pid,account)]);},[]);return _context4.abrupt(\"return\",Promise.all(harvestPromises));case 2:case\"end\":return _context4.stop();}}},_callee4);})),[account,farmPids,masterChef3Contract]);return{onReward:handleHarvest};};export var useSmartChefHarvest=function useSmartChefHarvest(sousId){var isUsingBnb=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var dispatch=useDispatch();var _useWallet5=useWallet(),account=_useWallet5.account;var smartChefContract=useSmartChef(sousId);var handleHarvest=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var harvestFn;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:harvestFn=isUsingBnb?smartHarvestBnb:smartHarvest;_context5.next=3;return harvestFn(smartChefContract,account);case 3:dispatch(updateUserPendingReward(sousId,account));dispatch(updateUserBalance(sousId,account));case 5:case\"end\":return _context5.stop();}}},_callee5);})),[account,dispatch,isUsingBnb,smartChefContract,sousId]);return{onReward:handleHarvest};};","map":{"version":3,"sources":["D:/task159/frontend/src/hooks/useHarvest.ts"],"names":["useCallback","useWallet","useDispatch","fetchFarmUserDataAsync","fetchFarm3UserDataAsync","updateUserBalance","updateUserPendingReward","smartHarvest","smartHarvestBnb","harvest","useMasterchef","useMasterchef3","useSmartChef","useHarvest","farmPid","dispatch","account","masterChefContract","handleHarvest","txHash","onReward","useAllHarvest","farmPids","harvestPromises","reduce","accum","pid","Promise","all","useHarvest3","masterChef3Contract","useAllHarvest3","useSmartChefHarvest","sousId","isUsingBnb","smartChefContract","harvestFn"],"mappings":"maAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,sBAAT,CAAiCC,uBAAjC,CAA0DC,iBAA1D,CAA6EC,uBAA7E,KAA4G,eAA5G,CACA,OAASC,YAAT,CAAuBC,eAAvB,CAAwCC,OAAxC,KAAuD,mBAAvD,CACA,OAASC,aAAT,CAAwBC,cAAxB,CAAwCC,YAAxC,KAA4D,eAA5D,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,CAAqB,CAC7C,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAD6C,eAEzBD,SAAS,EAFgB,CAErCe,OAFqC,YAErCA,OAFqC,CAG7C,GAAMC,CAAAA,kBAAkB,CAAGP,aAAa,EAAxC,CAEA,GAAMQ,CAAAA,aAAa,CAAGlB,WAAW,sEAAC,oKACXS,CAAAA,OAAO,CAACQ,kBAAD,CAAqBH,OAArB,CAA8BE,OAA9B,CADI,QAC1BG,MAD0B,eAEhCJ,QAAQ,CAACZ,sBAAsB,CAACa,OAAD,CAAvB,CAAR,CAFgC,gCAGzBG,MAHyB,wDAAD,GAI9B,CAACH,OAAD,CAAUD,QAAV,CAAoBD,OAApB,CAA6BG,kBAA7B,CAJ8B,CAAjC,CAMA,MAAO,CAAEG,QAAQ,CAAEF,aAAZ,CAAP,CACD,CAZM,CAcP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAwB,iBAC/BrB,SAAS,EADsB,CAC3Ce,OAD2C,aAC3CA,OAD2C,CAEnD,GAAMC,CAAAA,kBAAkB,CAAGP,aAAa,EAAxC,CAEA,GAAMQ,CAAAA,aAAa,CAAGlB,WAAW,sEAAC,4JAC1BuB,eAD0B,CACRD,QAAQ,CAACE,MAAT,CAAgB,SAACC,KAAD,CAAQC,GAAR,CAAgB,CACtD,mCAAWD,KAAX,GAAkBhB,OAAO,CAACQ,kBAAD,CAAqBS,GAArB,CAA0BV,OAA1B,CAAzB,GACD,CAFuB,CAErB,EAFqB,CADQ,kCAKzBW,OAAO,CAACC,GAAR,CAAYL,eAAZ,CALyB,0DAAD,GAM9B,CAACP,OAAD,CAAUM,QAAV,CAAoBL,kBAApB,CAN8B,CAAjC,CAQA,MAAO,CAAEG,QAAQ,CAAEF,aAAZ,CAAP,CACD,CAbM,CAgBP,MAAO,IAAMW,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACf,OAAD,CAAqB,CAC9C,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAD8C,gBAE1BD,SAAS,EAFiB,CAEtCe,OAFsC,aAEtCA,OAFsC,CAG9C,GAAMc,CAAAA,mBAAmB,CAAGnB,cAAc,EAA1C,CAEA,GAAMO,CAAAA,aAAa,CAAGlB,WAAW,sEAAC,0KACXS,CAAAA,OAAO,CAACqB,mBAAD,CAAsBhB,OAAtB,CAA+BE,OAA/B,CADI,QAC1BG,MAD0B,gBAEhCJ,QAAQ,CAACX,uBAAuB,CAACY,OAAD,CAAxB,CAAR,CAFgC,iCAGzBG,MAHyB,0DAAD,GAI9B,CAACH,OAAD,CAAUD,QAAV,CAAoBD,OAApB,CAA6BgB,mBAA7B,CAJ8B,CAAjC,CAMA,MAAO,CAAEV,QAAQ,CAAEF,aAAZ,CAAP,CACD,CAZM,CAcP,MAAO,IAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACT,QAAD,CAAwB,iBAChCrB,SAAS,EADuB,CAC5Ce,OAD4C,aAC5CA,OAD4C,CAEpD,GAAMc,CAAAA,mBAAmB,CAAGnB,cAAc,EAA1C,CAEA,GAAMO,CAAAA,aAAa,CAAGlB,WAAW,sEAAC,4JAC1BuB,eAD0B,CACRD,QAAQ,CAACE,MAAT,CAAgB,SAACC,KAAD,CAAQC,GAAR,CAAgB,CACtD,mCAAWD,KAAX,GAAkBhB,OAAO,CAACqB,mBAAD,CAAsBJ,GAAtB,CAA2BV,OAA3B,CAAzB,GACD,CAFuB,CAErB,EAFqB,CADQ,kCAKzBW,OAAO,CAACC,GAAR,CAAYL,eAAZ,CALyB,0DAAD,GAM9B,CAACP,OAAD,CAAUM,QAAV,CAAoBQ,mBAApB,CAN8B,CAAjC,CAQA,MAAO,CAAEV,QAAQ,CAAEF,aAAZ,CAAP,CACD,CAbM,CAeP,MAAO,IAAMc,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,MAAD,CAAgC,IAAvBC,CAAAA,UAAuB,2DAAV,KAAU,CACjE,GAAMnB,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CADiE,gBAE7CD,SAAS,EAFoC,CAEzDe,OAFyD,aAEzDA,OAFyD,CAGjE,GAAMmB,CAAAA,iBAAiB,CAAGvB,YAAY,CAACqB,MAAD,CAAtC,CAEA,GAAMf,CAAAA,aAAa,CAAGlB,WAAW,sEAAC,sJAC1BoC,SAD0B,CACdF,UAAU,CAAG1B,eAAH,CAAqBD,YADjB,wBAE1B6B,CAAAA,SAAS,CAACD,iBAAD,CAAoBnB,OAApB,CAFiB,QAGhCD,QAAQ,CAACT,uBAAuB,CAAC2B,MAAD,CAASjB,OAAT,CAAxB,CAAR,CACAD,QAAQ,CAACV,iBAAiB,CAAC4B,MAAD,CAASjB,OAAT,CAAlB,CAAR,CAJgC,wDAAD,GAK9B,CAACA,OAAD,CAAUD,QAAV,CAAoBmB,UAApB,CAAgCC,iBAAhC,CAAmDF,MAAnD,CAL8B,CAAjC,CAOA,MAAO,CAAEb,QAAQ,CAAEF,aAAZ,CAAP,CACD,CAbM","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, fetchFarm3UserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { smartHarvest, smartHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useMasterchef3, useSmartChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\n\nexport const useHarvest3 = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChef3Contract = useMasterchef3()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChef3Contract, farmPid, account)\n    dispatch(fetchFarm3UserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChef3Contract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest3 = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChef3Contract = useMasterchef3()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChef3Contract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChef3Contract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSmartChefHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const smartChefContract = useSmartChef(sousId)\n\n  const handleHarvest = useCallback(async () => {\n    const harvestFn = isUsingBnb ? smartHarvestBnb : smartHarvest\n    await harvestFn(smartChefContract, account)\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, smartChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n"]},"metadata":{},"sourceType":"module"}