{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _taggedTemplateLiteral from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  display: block;\\n\\n  \",\" {\\n    display: none;\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  display: none;\\n\\n  \",\" {\\n    display: block;\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  width: 100%;\\n\\n  \",\" {\\n    min-width: 160px;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  display: grid;\\n  grid-template-columns: 1fr;\\n  justify-content: center;\\n\\n  \",\" {\\n    grid-template-columns: 1fr 24px 1fr;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import styled from'styled-components';import{ChevronRightIcon,Button as UIKitButton,AutoRenewIcon,ChevronDownIcon,Box,Flex}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';var StyledApproveConfirmButtons=styled.div(_templateObject(),function(_ref){var theme=_ref.theme;return theme.mediaQueries.md;});var Button=styled(UIKitButton)(_templateObject2(),function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.md;});var iconAttrs={width:'24px',color:'textDisabled'};var ChevronRight=styled(ChevronRightIcon).attrs(iconAttrs)(_templateObject3(),function(_ref3){var theme=_ref3.theme;return theme.mediaQueries.md;});var ChevronBottom=styled(ChevronDownIcon).attrs(iconAttrs)(_templateObject4(),function(_ref4){var theme=_ref4.theme;return theme.mediaQueries.md;});var spinnerIcon=/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"});var ApproveConfirmButtons=function ApproveConfirmButtons(_ref5){var isApproveDisabled=_ref5.isApproveDisabled,isApproving=_ref5.isApproving,isConfirming=_ref5.isConfirming,isConfirmDisabled=_ref5.isConfirmDisabled,onApprove=_ref5.onApprove,onConfirm=_ref5.onConfirm;var TranslateString=useI18n();return/*#__PURE__*/_jsxs(StyledApproveConfirmButtons,{children:[/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Button,{disabled:isApproveDisabled,onClick:onApprove,endIcon:isApproving?spinnerIcon:undefined,isLoading:isApproving,children:isApproving?TranslateString(800,'Approving'):TranslateString(564,'Approve')})}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"center\",children:[/*#__PURE__*/_jsx(ChevronRight,{}),/*#__PURE__*/_jsx(ChevronBottom,{})]}),/*#__PURE__*/_jsx(Box,{children:/*#__PURE__*/_jsx(Button,{onClick:onConfirm,disabled:isConfirmDisabled,isLoading:isConfirming,endIcon:isConfirming?spinnerIcon:undefined,children:isConfirming?TranslateString(802,'Confirming'):TranslateString(464,'Confirm')})})]});};export default ApproveConfirmButtons;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Profile/components/ApproveConfirmButtons.tsx"],"names":["React","styled","ChevronRightIcon","Button","UIKitButton","AutoRenewIcon","ChevronDownIcon","Box","Flex","useI18n","StyledApproveConfirmButtons","div","theme","mediaQueries","md","iconAttrs","width","color","ChevronRight","attrs","ChevronBottom","spinnerIcon","ApproveConfirmButtons","isApproveDisabled","isApproving","isConfirming","isConfirmDisabled","onApprove","onConfirm","TranslateString","undefined"],"mappings":"mmCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OACEC,gBADF,CAEEC,MAAM,GAAIC,CAAAA,WAFZ,CAGEC,aAHF,CAIEC,eAJF,CAKEC,GALF,CAMEC,IANF,KAOO,yBAPP,CAQA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAWA,GAAMC,CAAAA,2BAA2B,CAAGT,MAAM,CAACU,GAAV,mBAM7B,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAN6B,CAAjC,CAWA,GAAMX,CAAAA,MAAM,CAAGF,MAAM,CAACG,WAAD,CAAT,oBAGR,mBAAGQ,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHQ,CAAZ,CAQA,GAAMC,CAAAA,SAAS,CAAG,CAAEC,KAAK,CAAE,MAAT,CAAiBC,KAAK,CAAE,cAAxB,CAAlB,CAEA,GAAMC,CAAAA,YAAY,CAAGjB,MAAM,CAACC,gBAAD,CAAN,CAAyBiB,KAAzB,CAA+BJ,SAA/B,CAAH,oBAGd,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHc,CAAlB,CAQA,GAAMM,CAAAA,aAAa,CAAGnB,MAAM,CAACK,eAAD,CAAN,CAAwBa,KAAxB,CAA8BJ,SAA9B,CAAH,oBAGf,mBAAGH,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EAHe,CAAnB,CAQA,GAAMO,CAAAA,WAAW,cAAG,KAAC,aAAD,EAAe,IAAI,KAAnB,CAAoB,KAAK,CAAC,cAA1B,EAApB,CAEA,GAAMC,CAAAA,qBAA2D,CAAG,QAA9DA,CAAAA,qBAA8D,OAO9D,IANJC,CAAAA,iBAMI,OANJA,iBAMI,CALJC,WAKI,OALJA,WAKI,CAJJC,YAII,OAJJA,YAII,CAHJC,iBAGI,OAHJA,iBAGI,CAFJC,SAEI,OAFJA,SAEI,CADJC,SACI,OADJA,SACI,CACJ,GAAMC,CAAAA,eAAe,CAAGpB,OAAO,EAA/B,CAEA,mBACE,MAAC,2BAAD,yBACE,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,QAAQ,CAAEc,iBADZ,CAEE,OAAO,CAAEI,SAFX,CAGE,OAAO,CAAEH,WAAW,CAAGH,WAAH,CAAiBS,SAHvC,CAIE,SAAS,CAAEN,WAJb,UAMGA,WAAW,CAAGK,eAAe,CAAC,GAAD,CAAM,WAAN,CAAlB,CAAuCA,eAAe,CAAC,GAAD,CAAM,SAAN,CANpE,EADF,EADF,cAWE,MAAC,IAAD,EAAM,cAAc,CAAC,QAArB,wBACE,KAAC,YAAD,IADF,cAEE,KAAC,aAAD,IAFF,GAXF,cAeE,KAAC,GAAD,wBACE,KAAC,MAAD,EACE,OAAO,CAAED,SADX,CAEE,QAAQ,CAAEF,iBAFZ,CAGE,SAAS,CAAED,YAHb,CAIE,OAAO,CAAEA,YAAY,CAAGJ,WAAH,CAAiBS,SAJxC,UAMGL,YAAY,CAAGI,eAAe,CAAC,GAAD,CAAM,YAAN,CAAlB,CAAwCA,eAAe,CAAC,GAAD,CAAM,SAAN,CANtE,EADF,EAfF,GADF,CA4BD,CAtCD,CAwCA,cAAeP,CAAAA,qBAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  ChevronRightIcon,\n  Button as UIKitButton,\n  AutoRenewIcon,\n  ChevronDownIcon,\n  Box,\n  Flex,\n} from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface ApproveConfirmButtonsProps {\n  isApproveDisabled: boolean\n  isApproving: boolean\n  isConfirming: boolean\n  isConfirmDisabled: boolean\n  onApprove: () => void\n  onConfirm: () => void\n}\n\nconst StyledApproveConfirmButtons = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: 1fr;\n  justify-content: center;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: 1fr 24px 1fr;\n  }\n`\n\nconst Button = styled(UIKitButton)`\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    min-width: 160px;\n  }\n`\n\nconst iconAttrs = { width: '24px', color: 'textDisabled' }\n\nconst ChevronRight = styled(ChevronRightIcon).attrs(iconAttrs)`\n  display: none;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n  }\n`\n\nconst ChevronBottom = styled(ChevronDownIcon).attrs(iconAttrs)`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: none;\n  }\n`\n\nconst spinnerIcon = <AutoRenewIcon spin color=\"currentColor\" />\n\nconst ApproveConfirmButtons: React.FC<ApproveConfirmButtonsProps> = ({\n  isApproveDisabled,\n  isApproving,\n  isConfirming,\n  isConfirmDisabled,\n  onApprove,\n  onConfirm,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledApproveConfirmButtons>\n      <Box>\n        <Button\n          disabled={isApproveDisabled}\n          onClick={onApprove}\n          endIcon={isApproving ? spinnerIcon : undefined}\n          isLoading={isApproving}\n        >\n          {isApproving ? TranslateString(800, 'Approving') : TranslateString(564, 'Approve')}\n        </Button>\n      </Box>\n      <Flex justifyContent=\"center\">\n        <ChevronRight />\n        <ChevronBottom />\n      </Flex>\n      <Box>\n        <Button\n          onClick={onConfirm}\n          disabled={isConfirmDisabled}\n          isLoading={isConfirming}\n          endIcon={isConfirming ? spinnerIcon : undefined}\n        >\n          {isConfirming ? TranslateString(802, 'Confirming') : TranslateString(464, 'Confirm')}\n        </Button>\n      </Box>\n    </StyledApproveConfirmButtons>\n  )\n}\n\nexport default ApproveConfirmButtons\n"]},"metadata":{},"sourceType":"module"}