{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  margin-bottom: 24px;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  color: \",\";\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useContext,useState}from'react';import styled from'styled-components';import{AutoRenewIcon,Button,Card,CardBody,Heading,Skeleton,Text}from'@pancakeswap-libs/uikit';import{Link as RouterLink}from'react-router-dom';import{getAddressByType}from'utils/collectibles';import{getPancakeProfileAddress}from'utils/addressHelpers';import useI18n from'hooks/useI18n';import{useGetCollectibles,useToast}from'state/hooks';import{useERC721}from'hooks/useContract';import{useWallet}from'@binance-chain/bsc-use-wallet';import SelectionCard from'../components/SelectionCard';import NextStepButton from'../components/NextStepButton';import{ProfileCreationContext}from'./contexts/ProfileCreationProvider';var Link=styled(RouterLink)(_templateObject(),function(_ref){var theme=_ref.theme;return theme.colors.primary;});var NftWrapper=styled.div(_templateObject2());var ProfilePicture=function ProfilePicture(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isApproved=_useState2[0],setIsApproved=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isApproving=_useState4[0],setIsApproving=_useState4[1];var _useContext=useContext(ProfileCreationContext),selectedNft=_useContext.selectedNft,actions=_useContext.actions;var TranslateString=useI18n();var _useGetCollectibles=useGetCollectibles(),isLoading=_useGetCollectibles.isLoading,nftsInWallet=_useGetCollectibles.nftsInWallet,tokenIds=_useGetCollectibles.tokenIds;var contract=useERC721(selectedNft.nftAddress);var _useWallet=useWallet(),account=_useWallet.account;var _useToast=useToast(),toastError=_useToast.toastError;var handleApprove=function handleApprove(){contract.methods.approve(getPancakeProfileAddress(),selectedNft.tokenId).send({from:account}).once('sending',function(){setIsApproving(true);}).once('receipt',function(){setIsApproving(false);setIsApproved(true);}).once('error',function(error){toastError('Error',error===null||error===void 0?void 0:error.message);setIsApproving(false);});};if(!isLoading&&nftsInWallet.length===0){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Heading,{size:\"xl\",mb:\"24px\",children:TranslateString(852,'Oops!')}),/*#__PURE__*/_jsx(Text,{bold:true,fontSize:\"20px\",mb:\"24px\",children:TranslateString(854,'We couldn’t find any Pancake Collectibles in your wallet.')}),/*#__PURE__*/_jsx(Text,{as:\"p\",children:TranslateString(856,'You need a DBALL Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.')})]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Text,{fontSize:\"20px\",color:\"textSubtle\",bold:true,children:TranslateString(999,\"Step \".concat(2))}),/*#__PURE__*/_jsx(Heading,{as:\"h3\",size:\"xl\",mb:\"24px\",children:TranslateString(778,'Set Profile Picture')}),/*#__PURE__*/_jsx(Card,{mb:\"24px\",children:/*#__PURE__*/_jsxs(CardBody,{children:[/*#__PURE__*/_jsx(Heading,{as:\"h4\",size:\"lg\",mb:\"8px\",children:TranslateString(812,'Choose collectible')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",children:TranslateString(814,'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.')}),/*#__PURE__*/_jsxs(Text,{as:\"p\",color:\"textSubtle\",mb:\"24px\",children:[TranslateString(816,'Only approved Pancake Collectibles can be used.'),/*#__PURE__*/_jsx(Link,{to:\"/collectibles\",style:{marginLeft:'4px'},children:TranslateString(999,'See the list >')})]}),/*#__PURE__*/_jsx(NftWrapper,{children:isLoading?/*#__PURE__*/_jsx(Skeleton,{height:\"80px\",mb:\"16px\"}):nftsInWallet.map(function(walletNft){var _tokenIds$walletNft$i=_slicedToArray(tokenIds[walletNft.identifier],1),firstTokenId=_tokenIds$walletNft$i[0];var address=getAddressByType(walletNft.type);return/*#__PURE__*/_jsx(SelectionCard,{name:\"profilePicture\",value:firstTokenId,image:\"/images/nfts/\".concat(walletNft.images.md),isChecked:firstTokenId===selectedNft.tokenId,onChange:function onChange(value){return actions.setSelectedNft(parseInt(value,10),address);},children:/*#__PURE__*/_jsx(Text,{bold:true,children:walletNft.name})},walletNft.identifier);})}),/*#__PURE__*/_jsx(Heading,{as:\"h4\",size:\"lg\",mb:\"8px\",children:TranslateString(818,'Allow collectible to be locked')}),/*#__PURE__*/_jsx(Text,{as:\"p\",color:\"textSubtle\",mb:\"16px\",children:TranslateString(820,\"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\")}),/*#__PURE__*/_jsx(Button,{isLoading:isApproving,disabled:isApproved||isApproving||selectedNft.tokenId===null,onClick:handleApprove,endIcon:isApproving?/*#__PURE__*/_jsx(AutoRenewIcon,{spin:true,color:\"currentColor\"}):undefined,children:TranslateString(564,'Approve')})]})}),/*#__PURE__*/_jsx(NextStepButton,{onClick:actions.nextStep,disabled:selectedNft.tokenId===null||!isApproved||isApproving,children:TranslateString(798,'Next Step')})]});};export default ProfilePicture;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Profile/ProfileCreation/ProfilePicture.tsx"],"names":["React","useContext","useState","styled","AutoRenewIcon","Button","Card","CardBody","Heading","Skeleton","Text","Link","RouterLink","getAddressByType","getPancakeProfileAddress","useI18n","useGetCollectibles","useToast","useERC721","useWallet","SelectionCard","NextStepButton","ProfileCreationContext","theme","colors","primary","NftWrapper","div","ProfilePicture","isApproved","setIsApproved","isApproving","setIsApproving","selectedNft","actions","TranslateString","isLoading","nftsInWallet","tokenIds","contract","nftAddress","account","toastError","handleApprove","methods","approve","tokenId","send","from","once","error","message","length","marginLeft","map","walletNft","identifier","firstTokenId","address","type","images","md","value","setSelectedNft","parseInt","name","undefined","nextStep"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { AutoRenewIcon, Button, Card, CardBody, Heading, Skeleton, Text } from '@pancakeswap-libs/uikit'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { getAddressByType } from 'utils/collectibles'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\nimport useI18n from 'hooks/useI18n'\nimport { useGetCollectibles, useToast } from 'state/hooks'\nimport { useERC721 } from 'hooks/useContract'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport SelectionCard from '../components/SelectionCard'\nimport NextStepButton from '../components/NextStepButton'\nimport { ProfileCreationContext } from './contexts/ProfileCreationProvider'\n\nconst Link = styled(RouterLink)`\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst NftWrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst ProfilePicture: React.FC = () => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isApproving, setIsApproving] = useState(false)\n  const { selectedNft, actions } = useContext(ProfileCreationContext)\n  const TranslateString = useI18n()\n  const { isLoading, nftsInWallet, tokenIds } = useGetCollectibles()\n  const contract = useERC721(selectedNft.nftAddress)\n  const { account } = useWallet()\n  const { toastError } = useToast()\n\n  const handleApprove = () => {\n    contract.methods\n      .approve(getPancakeProfileAddress(), selectedNft.tokenId)\n      .send({ from: account })\n      .once('sending', () => {\n        setIsApproving(true)\n      })\n      .once('receipt', () => {\n        setIsApproving(false)\n        setIsApproved(true)\n      })\n      .once('error', (error) => {\n        toastError('Error', error?.message)\n        setIsApproving(false)\n      })\n  }\n\n  if (!isLoading && nftsInWallet.length === 0) {\n    return (\n      <>\n        <Heading size=\"xl\" mb=\"24px\">\n          {TranslateString(852, 'Oops!')}\n        </Heading>\n        <Text bold fontSize=\"20px\" mb=\"24px\">\n          {TranslateString(854, 'We couldn’t find any Pancake Collectibles in your wallet.')}\n        </Text>\n        <Text as=\"p\">\n          {TranslateString(\n            856,\n            'You need a DBALL Collectible to finish setting up your profile. If you sold or transferred your starter collectible to another wallet, you’ll need to get it back or acquire a new one somehow. You can’t make a new starter with this wallet address.',\n          )}\n        </Text>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Text fontSize=\"20px\" color=\"textSubtle\" bold>\n        {TranslateString(999, `Step ${2}`)}\n      </Text>\n      <Heading as=\"h3\" size=\"xl\" mb=\"24px\">\n        {TranslateString(778, 'Set Profile Picture')}\n      </Heading>\n      <Card mb=\"24px\">\n        <CardBody>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(812, 'Choose collectible')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\">\n            {TranslateString(\n              814,\n              'Choose a profile picture from the eligible collectibles (NFT) in your wallet, shown below.',\n            )}\n          </Text>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"24px\">\n            {TranslateString(816, 'Only approved Pancake Collectibles can be used.')}\n            <Link to=\"/collectibles\" style={{ marginLeft: '4px' }}>\n              {TranslateString(999, 'See the list >')}\n            </Link>\n          </Text>\n          <NftWrapper>\n            {isLoading ? (\n              <Skeleton height=\"80px\" mb=\"16px\" />\n            ) : (\n              nftsInWallet.map((walletNft) => {\n                const [firstTokenId] = tokenIds[walletNft.identifier]\n                const address = getAddressByType(walletNft.type)\n\n                return (\n                  <SelectionCard\n                    name=\"profilePicture\"\n                    key={walletNft.identifier}\n                    value={firstTokenId}\n                    image={`/images/nfts/${walletNft.images.md}`}\n                    isChecked={firstTokenId === selectedNft.tokenId}\n                    onChange={(value: string) => actions.setSelectedNft(parseInt(value, 10), address)}\n                  >\n                    <Text bold>{walletNft.name}</Text>\n                  </SelectionCard>\n                )\n              })\n            )}\n          </NftWrapper>\n          <Heading as=\"h4\" size=\"lg\" mb=\"8px\">\n            {TranslateString(818, 'Allow collectible to be locked')}\n          </Heading>\n          <Text as=\"p\" color=\"textSubtle\" mb=\"16px\">\n            {TranslateString(\n              820,\n              \"The collectible you've chosen will be locked in a smart contract while it’s being used as your profile picture. Don't worry - you'll be able to get it back at any time.\",\n            )}\n          </Text>\n          <Button\n            isLoading={isApproving}\n            disabled={isApproved || isApproving || selectedNft.tokenId === null}\n            onClick={handleApprove}\n            endIcon={isApproving ? <AutoRenewIcon spin color=\"currentColor\" /> : undefined}\n          >\n            {TranslateString(564, 'Approve')}\n          </Button>\n        </CardBody>\n      </Card>\n      <NextStepButton onClick={actions.nextStep} disabled={selectedNft.tokenId === null || !isApproved || isApproving}>\n        {TranslateString(798, 'Next Step')}\n      </NextStepButton>\n    </>\n  )\n}\n\nexport default ProfilePicture\n"]},"metadata":{},"sourceType":"module"}