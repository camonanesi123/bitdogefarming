{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{Modal,Flex,Text}from'@pancakeswap-libs/uikit';import{useAppDispatch}from'state';import BigNumber from'bignumber.js';import useI18n from'hooks/useI18n';import{useCake,useProfile}from'hooks/useContract';import useApproveConfirmTransaction from'hooks/useApproveConfirmTransaction';import{fetchProfile}from'state/profile';import{useToast}from'state/hooks';import{REGISTER_COST}from'../ProfileCreation/config';import ApproveConfirmButtons from'./ApproveConfirmButtons';var ConfirmProfileCreationModal=function ConfirmProfileCreationModal(_ref){var account=_ref.account,teamId=_ref.teamId,selectedNft=_ref.selectedNft,minimumCakeRequired=_ref.minimumCakeRequired,allowance=_ref.allowance,onDismiss=_ref.onDismiss;var TranslateString=useI18n();var profileContract=useProfile();var dispatch=useAppDispatch();var _useToast=useToast(),toastSuccess=_useToast.toastSuccess;var cakeContract=useCake();var _useApproveConfirmTra=useApproveConfirmTransaction({onRequiresApproval:function(){var _onRequiresApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,currentAllowance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return cakeContract.methods.allowance(account,profileContract.options.address).call();case 3:response=_context.sent;currentAllowance=new BigNumber(response);return _context.abrupt(\"return\",currentAllowance.gte(minimumCakeRequired));case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",false);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));function onRequiresApproval(){return _onRequiresApproval.apply(this,arguments);}return onRequiresApproval;}(),onApprove:function onApprove(){return cakeContract.methods.approve(profileContract.options.address,allowance.toJSON()).send({from:account});},onConfirm:function onConfirm(){return profileContract.methods.createProfile(teamId,selectedNft.nftAddress,selectedNft.tokenId).send({from:account});},onSuccess:function(){var _onSuccess=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return dispatch(fetchProfile(account));case 2:onDismiss();toastSuccess('Profile created!');case 4:case\"end\":return _context2.stop();}}},_callee2);}));function onSuccess(){return _onSuccess.apply(this,arguments);}return onSuccess;}()}),isApproving=_useApproveConfirmTra.isApproving,isApproved=_useApproveConfirmTra.isApproved,isConfirmed=_useApproveConfirmTra.isConfirmed,isConfirming=_useApproveConfirmTra.isConfirming,handleApprove=_useApproveConfirmTra.handleApprove,handleConfirm=_useApproveConfirmTra.handleConfirm;return/*#__PURE__*/_jsxs(Modal,{title:\"Complete Profile\",onDismiss:onDismiss,children:[/*#__PURE__*/_jsx(Text,{color:\"textSubtle\",mb:\"8px\",children:TranslateString(999,'Submitting NFT to contract and confirming User Name and Team.')}),/*#__PURE__*/_jsxs(Flex,{justifyContent:\"space-between\",mb:\"16px\",children:[/*#__PURE__*/_jsx(Text,{children:TranslateString(999,'Cost')}),/*#__PURE__*/_jsx(Text,{children:TranslateString(999,\"\".concat(REGISTER_COST,\" DBALL\"),{num:REGISTER_COST})})]}),/*#__PURE__*/_jsx(ApproveConfirmButtons,{isApproveDisabled:isConfirmed||isConfirming||isApproved,isApproving:isApproving,isConfirmDisabled:!isApproved||isConfirmed,isConfirming:isConfirming,onApprove:handleApprove,onConfirm:handleConfirm})]});};export default ConfirmProfileCreationModal;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Profile/components/ConfirmProfileCreationModal.tsx"],"names":["React","Modal","Flex","Text","useAppDispatch","BigNumber","useI18n","useCake","useProfile","useApproveConfirmTransaction","fetchProfile","useToast","REGISTER_COST","ApproveConfirmButtons","ConfirmProfileCreationModal","account","teamId","selectedNft","minimumCakeRequired","allowance","onDismiss","TranslateString","profileContract","dispatch","toastSuccess","cakeContract","onRequiresApproval","methods","options","address","call","response","currentAllowance","gte","onApprove","approve","toJSON","send","from","onConfirm","createProfile","nftAddress","tokenId","onSuccess","isApproving","isApproved","isConfirmed","isConfirming","handleApprove","handleConfirm","num"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Flex, Text } from '@pancakeswap-libs/uikit'\nimport { useAppDispatch } from 'state'\nimport BigNumber from 'bignumber.js'\nimport useI18n from 'hooks/useI18n'\nimport { useCake, useProfile } from 'hooks/useContract'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { fetchProfile } from 'state/profile'\nimport { useToast } from 'state/hooks'\nimport { REGISTER_COST } from '../ProfileCreation/config'\nimport ApproveConfirmButtons from './ApproveConfirmButtons'\nimport { State } from '../ProfileCreation/contexts/types'\n\ninterface Props {\n  userName: string\n  selectedNft: State['selectedNft']\n  account: string\n  teamId: number\n  minimumCakeRequired: BigNumber\n  allowance: BigNumber\n  onDismiss?: () => void\n}\n\nconst ConfirmProfileCreationModal: React.FC<Props> = ({\n  account,\n  teamId,\n  selectedNft,\n  minimumCakeRequired,\n  allowance,\n  onDismiss,\n}) => {\n  const TranslateString = useI18n()\n  const profileContract = useProfile()\n  const dispatch = useAppDispatch()\n  const { toastSuccess } = useToast()\n  const cakeContract = useCake()\n\n  const {\n    isApproving,\n    isApproved,\n    isConfirmed,\n    isConfirming,\n    handleApprove,\n    handleConfirm,\n  } = useApproveConfirmTransaction({\n    onRequiresApproval: async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, profileContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        return currentAllowance.gte(minimumCakeRequired)\n      } catch (error) {\n        return false\n      }\n    },\n    onApprove: () => {\n      return cakeContract.methods.approve(profileContract.options.address, allowance.toJSON()).send({ from: account })\n    },\n    onConfirm: () => {\n      return profileContract.methods\n        .createProfile(teamId, selectedNft.nftAddress, selectedNft.tokenId)\n        .send({ from: account })\n    },\n    onSuccess: async () => {\n      await dispatch(fetchProfile(account))\n      onDismiss()\n      toastSuccess('Profile created!')\n    },\n  })\n\n  return (\n    <Modal title=\"Complete Profile\" onDismiss={onDismiss}>\n      <Text color=\"textSubtle\" mb=\"8px\">\n        {TranslateString(999, 'Submitting NFT to contract and confirming User Name and Team.')}\n      </Text>\n      <Flex justifyContent=\"space-between\" mb=\"16px\">\n        <Text>{TranslateString(999, 'Cost')}</Text>\n        <Text>{TranslateString(999, `${REGISTER_COST} DBALL`, { num: REGISTER_COST })}</Text>\n      </Flex>\n      <ApproveConfirmButtons\n        isApproveDisabled={isConfirmed || isConfirming || isApproved}\n        isApproving={isApproving}\n        isConfirmDisabled={!isApproved || isConfirmed}\n        isConfirming={isConfirming}\n        onApprove={handleApprove}\n        onConfirm={handleConfirm}\n      />\n    </Modal>\n  )\n}\n\nexport default ConfirmProfileCreationModal\n"]},"metadata":{},"sourceType":"module"}