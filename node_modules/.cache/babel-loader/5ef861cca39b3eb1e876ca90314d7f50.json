{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsx as _jsx}from\"react/jsx-runtime\";function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  padding: 8px;\\n  background: \",\";\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n  padding: 24px 16px;\\n  \",\" {\\n    padding: 24px;\\n  }\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-gap: 32px;\\n  grid-template-columns: 1fr;\\n  margin-bottom: 32px;\\n  \",\" {\\n    grid-template-columns: \",\";\\n    justify-items: \",\";\\n  }\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  display: \",\";\\n  background: \",\";\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  height: 112px;\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-position: center;\\n  background-image: \",\";\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  max-width: 736px;\\n  width: 100%;\\n  margin: auto;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import styled from'styled-components';import{PoolIds}from'config/constants/types';import{Card,CardHeader,CardBody,CardFooter,CardRibbon,ExpandableButton,Progress,Button,ChevronUpIcon}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import IfoPoolCard from'./IfoPoolCard';import Timer from'./Timer';import Achievement from'./Achievement';var getRibbonComponent=function getRibbonComponent(status,TranslateString){if(status==='coming_soon'){return/*#__PURE__*/_jsx(CardRibbon,{variantColor:\"textDisabled\",ribbonPosition:\"left\",text:TranslateString(999,'Coming Soon')});}if(status==='live'){return/*#__PURE__*/_jsx(CardRibbon,{variantColor:\"primary\",ribbonPosition:\"left\",text:TranslateString(999,'LIVE!')});}return null;};var StyledCard=styled(Card)(_templateObject());var Header=styled(CardHeader)(_templateObject2(),function(_ref){var ifoId=_ref.ifoId;return\"url('/images/ifos/\".concat(ifoId,\"-bg.svg')\");});var FoldableContent=styled.div(_templateObject3(),function(_ref2){var isVisible=_ref2.isVisible;return isVisible?'block':'none';},function(_ref3){var isActive=_ref3.isActive,theme=_ref3.theme;return isActive?theme.colors.gradients.bubblegum:theme.colors.dropdown;});var CardsWrapper=styled.div(_templateObject4(),function(_ref4){var theme=_ref4.theme;return theme.mediaQueries.md;},function(_ref5){var singleCard=_ref5.singleCard;return singleCard?'1fr':'1fr 1fr';},function(_ref6){var singleCard=_ref6.singleCard;return singleCard?'center':'unset';});var StyledCardBody=styled(CardBody)(_templateObject5(),function(_ref7){var theme=_ref7.theme;return theme.mediaQueries.md;});var StyledCardFooter=styled(CardFooter)(_templateObject6(),function(_ref8){var theme=_ref8.theme;return theme.colors.backgroundAlt;});var IfoFoldableCard=function IfoFoldableCard(_ref9){var ifo=_ref9.ifo,publicIfoData=_ref9.publicIfoData,walletIfoData=_ref9.walletIfoData,isInitiallyVisible=_ref9.isInitiallyVisible;var _useState=useState(isInitiallyVisible),_useState2=_slicedToArray(_useState,2),isVisible=_useState2[0],setIsVisible=_useState2[1];var TranslateString=useI18n();var Ribbon=getRibbonComponent(publicIfoData.status,TranslateString);var isActive=publicIfoData.status!=='finished'&&ifo.isActive;return/*#__PURE__*/_jsxs(StyledCard,{ribbon:Ribbon,children:[/*#__PURE__*/_jsx(Header,{ifoId:ifo.id,children:/*#__PURE__*/_jsx(ExpandableButton,{expanded:isVisible,onClick:function onClick(){return setIsVisible(function(prev){return!prev;});}})}),/*#__PURE__*/_jsxs(FoldableContent,{isVisible:isVisible,isActive:publicIfoData.status!=='idle'&&isActive,children:[isActive&&/*#__PURE__*/_jsx(Progress,{variant:\"flat\",primaryStep:publicIfoData.progress}),/*#__PURE__*/_jsxs(StyledCardBody,{children:[isActive&&/*#__PURE__*/_jsx(Timer,{publicIfoData:publicIfoData}),/*#__PURE__*/_jsxs(CardsWrapper,{singleCard:!publicIfoData.poolBasic||!walletIfoData.poolBasic,children:[publicIfoData.poolBasic&&walletIfoData.poolBasic&&/*#__PURE__*/_jsx(IfoPoolCard,{poolId:PoolIds.poolBasic,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData}),/*#__PURE__*/_jsx(IfoPoolCard,{poolId:PoolIds.poolUnlimited,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData})]}),/*#__PURE__*/_jsx(Achievement,{ifo:ifo,publicIfoData:publicIfoData})]}),/*#__PURE__*/_jsx(StyledCardFooter,{children:/*#__PURE__*/_jsx(Button,{variant:\"text\",endIcon:/*#__PURE__*/_jsx(ChevronUpIcon,{color:\"primary\"}),onClick:function onClick(){return setIsVisible(false);},children:TranslateString(999,'Close')})})]})]});};export default IfoFoldableCard;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoFoldableCard/index.tsx"],"names":["React","useState","styled","PoolIds","Card","CardHeader","CardBody","CardFooter","CardRibbon","ExpandableButton","Progress","Button","ChevronUpIcon","useI18n","IfoPoolCard","Timer","Achievement","getRibbonComponent","status","TranslateString","StyledCard","Header","ifoId","FoldableContent","div","isVisible","isActive","theme","colors","gradients","bubblegum","dropdown","CardsWrapper","mediaQueries","md","singleCard","StyledCardBody","StyledCardFooter","backgroundAlt","IfoFoldableCard","ifo","publicIfoData","walletIfoData","isInitiallyVisible","setIsVisible","Ribbon","id","prev","progress","poolBasic","poolUnlimited"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Ifo, IfoStatus, PoolIds } from 'config/constants/types'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardRibbon,\n  ExpandableButton,\n  Progress,\n  Button,\n  ChevronUpIcon,\n} from '@pancakeswap-libs/uikit'\nimport { PublicIfoData, WalletIfoData } from 'hooks/ifo/types'\nimport useI18n from 'hooks/useI18n'\nimport IfoPoolCard from './IfoPoolCard'\nimport Timer from './Timer'\nimport Achievement from './Achievement'\n\ninterface IfoFoldableCardProps {\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n  isInitiallyVisible: boolean\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" ribbonPosition=\"left\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" ribbonPosition=\"left\" text={TranslateString(999, 'LIVE!')} />\n  }\n\n  return null\n}\n\nconst StyledCard = styled(Card)`\n  max-width: 736px;\n  width: 100%;\n  margin: auto;\n`\n\nconst Header = styled(CardHeader)<{ ifoId: string }>`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 112px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n`\n\nconst FoldableContent = styled.div<{ isVisible: boolean; isActive: boolean }>`\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\n  background: ${({ isActive, theme }) => (isActive ? theme.colors.gradients.bubblegum : theme.colors.dropdown)};\n`\n\nconst CardsWrapper = styled.div<{ singleCard: boolean }>`\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-bottom: 32px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ singleCard }) => (singleCard ? '1fr' : '1fr 1fr')};\n    justify-items: ${({ singleCard }) => (singleCard ? 'center' : 'unset')};\n  }\n`\n\nconst StyledCardBody = styled(CardBody)`\n  padding: 24px 16px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\n\nconst StyledCardFooter = styled(CardFooter)`\n  text-align: center;\n  padding: 8px;\n  background: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst IfoFoldableCard: React.FC<IfoFoldableCardProps> = ({ ifo, publicIfoData, walletIfoData, isInitiallyVisible }) => {\n  const [isVisible, setIsVisible] = useState(isInitiallyVisible)\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(publicIfoData.status, TranslateString)\n  const isActive = publicIfoData.status !== 'finished' && ifo.isActive\n\n  return (\n    <StyledCard ribbon={Ribbon}>\n      <Header ifoId={ifo.id}>\n        <ExpandableButton expanded={isVisible} onClick={() => setIsVisible((prev) => !prev)} />\n      </Header>\n      <FoldableContent isVisible={isVisible} isActive={publicIfoData.status !== 'idle' && isActive}>\n        {isActive && <Progress variant=\"flat\" primaryStep={publicIfoData.progress} />}\n        <StyledCardBody>\n          {isActive && <Timer publicIfoData={publicIfoData} />}\n          <CardsWrapper singleCard={!publicIfoData.poolBasic || !walletIfoData.poolBasic}>\n            {publicIfoData.poolBasic && walletIfoData.poolBasic && (\n              <IfoPoolCard\n                poolId={PoolIds.poolBasic}\n                ifo={ifo}\n                publicIfoData={publicIfoData}\n                walletIfoData={walletIfoData}\n              />\n            )}\n            <IfoPoolCard\n              poolId={PoolIds.poolUnlimited}\n              ifo={ifo}\n              publicIfoData={publicIfoData}\n              walletIfoData={walletIfoData}\n            />\n          </CardsWrapper>\n          <Achievement ifo={ifo} publicIfoData={publicIfoData} />\n        </StyledCardBody>\n        <StyledCardFooter>\n          <Button variant=\"text\" endIcon={<ChevronUpIcon color=\"primary\" />} onClick={() => setIsVisible(false)}>\n            {TranslateString(999, 'Close')}\n          </Button>\n        </StyledCardFooter>\n      </FoldableContent>\n    </StyledCard>\n  )\n}\n\nexport default IfoFoldableCard\n"]},"metadata":{},"sourceType":"module"}