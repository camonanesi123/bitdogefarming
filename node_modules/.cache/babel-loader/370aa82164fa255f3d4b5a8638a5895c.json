{"ast":null,"code":"import _regeneratorRuntime from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import BigNumber from'bignumber.js';import{getProfileContract}from'utils/contractHelpers';import makeBatchRequest from'utils/makeBatchRequest';import{useToast}from'state/hooks';var useGetProfileCosts=function useGetProfileCosts(){var _useState=useState({numberCakeToReactivate:new BigNumber(0),numberCakeToRegister:new BigNumber(0),numberCakeToUpdate:new BigNumber(0)}),_useState2=_slicedToArray(_useState,2),costs=_useState2[0],setCosts=_useState2[1];var _useToast=useToast(),toastError=_useToast.toastError;useEffect(function(){var fetchCosts=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var profileContract,_yield$makeBatchReque,_yield$makeBatchReque2,numberCakeToReactivate,numberCakeToRegister,numberCakeToUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;profileContract=getProfileContract();_context.next=4;return makeBatchRequest([profileContract.methods.numberCakeToReactivate().call,profileContract.methods.numberCakeToRegister().call,profileContract.methods.numberCakeToUpdate().call]);case 4:_yield$makeBatchReque=_context.sent;_yield$makeBatchReque2=_slicedToArray(_yield$makeBatchReque,3);numberCakeToReactivate=_yield$makeBatchReque2[0];numberCakeToRegister=_yield$makeBatchReque2[1];numberCakeToUpdate=_yield$makeBatchReque2[2];setCosts({numberCakeToReactivate:new BigNumber(numberCakeToReactivate),numberCakeToRegister:new BigNumber(numberCakeToRegister),numberCakeToUpdate:new BigNumber(numberCakeToUpdate)});_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);toastError('Error','Could not retrieve CAKE costs for profile');case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,12]]);}));return function fetchCosts(){return _ref.apply(this,arguments);};}();fetchCosts();},[setCosts,toastError]);return costs;};export default useGetProfileCosts;","map":{"version":3,"sources":["D:/task159/frontend/src/hooks/useGetProfileCosts.ts"],"names":["useEffect","useState","BigNumber","getProfileContract","makeBatchRequest","useToast","useGetProfileCosts","numberCakeToReactivate","numberCakeToRegister","numberCakeToUpdate","costs","setCosts","toastError","fetchCosts","profileContract","methods","call"],"mappings":"2ZAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,kBAAT,KAAmC,uBAAnC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,wBAA7B,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,eACLL,QAAQ,CAAC,CACjCM,sBAAsB,CAAE,GAAIL,CAAAA,SAAJ,CAAc,CAAd,CADS,CAEjCM,oBAAoB,CAAE,GAAIN,CAAAA,SAAJ,CAAc,CAAd,CAFW,CAGjCO,kBAAkB,CAAE,GAAIP,CAAAA,SAAJ,CAAc,CAAd,CAHa,CAAD,CADH,wCACxBQ,KADwB,eACjBC,QADiB,6BAMRN,QAAQ,EANA,CAMvBO,UANuB,WAMvBA,UANuB,CAQ/BZ,SAAS,CAAC,UAAM,CACd,GAAMa,CAAAA,UAAU,0FAAG,mRAETC,eAFS,CAESX,kBAAkB,EAF3B,uBAGkEC,CAAAA,gBAAgB,CAAC,CAChGU,eAAe,CAACC,OAAhB,CAAwBR,sBAAxB,GAAiDS,IAD+C,CAEhGF,eAAe,CAACC,OAAhB,CAAwBP,oBAAxB,GAA+CQ,IAFiD,CAGhGF,eAAe,CAACC,OAAhB,CAAwBN,kBAAxB,GAA6CO,IAHmD,CAAD,CAHlF,2GAGRT,sBAHQ,2BAGgBC,oBAHhB,2BAGsCC,kBAHtC,2BASfE,QAAQ,CAAC,CACPJ,sBAAsB,CAAE,GAAIL,CAAAA,SAAJ,CAAcK,sBAAd,CADjB,CAEPC,oBAAoB,CAAE,GAAIN,CAAAA,SAAJ,CAAcM,oBAAd,CAFf,CAGPC,kBAAkB,CAAE,GAAIP,CAAAA,SAAJ,CAAcO,kBAAd,CAHb,CAAD,CAAR,CATe,iFAefG,UAAU,CAAC,OAAD,CAAU,2CAAV,CAAV,CAfe,qEAAH,kBAAVC,CAAAA,UAAU,0CAAhB,CAmBAA,UAAU,GACX,CArBQ,CAqBN,CAACF,QAAD,CAAWC,UAAX,CArBM,CAAT,CAuBA,MAAOF,CAAAA,KAAP,CACD,CAhCD,CAkCA,cAAeJ,CAAAA,kBAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useToast } from 'state/hooks'\n\nconst useGetProfileCosts = () => {\n  const [costs, setCosts] = useState({\n    numberCakeToReactivate: new BigNumber(0),\n    numberCakeToRegister: new BigNumber(0),\n    numberCakeToUpdate: new BigNumber(0),\n  })\n  const { toastError } = useToast()\n\n  useEffect(() => {\n    const fetchCosts = async () => {\n      try {\n        const profileContract = getProfileContract()\n        const [numberCakeToReactivate, numberCakeToRegister, numberCakeToUpdate] = await makeBatchRequest([\n          profileContract.methods.numberCakeToReactivate().call,\n          profileContract.methods.numberCakeToRegister().call,\n          profileContract.methods.numberCakeToUpdate().call,\n        ])\n\n        setCosts({\n          numberCakeToReactivate: new BigNumber(numberCakeToReactivate as string),\n          numberCakeToRegister: new BigNumber(numberCakeToRegister as string),\n          numberCakeToUpdate: new BigNumber(numberCakeToUpdate as string),\n        })\n      } catch (error) {\n        toastError('Error', 'Could not retrieve CAKE costs for profile')\n      }\n    }\n\n    fetchCosts()\n  }, [setCosts, toastError])\n\n  return costs\n}\n\nexport default useGetProfileCosts\n"]},"metadata":{},"sourceType":"module"}