{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\task159\\\\frontend\\\\src\\\\views\\\\Ifos\\\\components\\\\IfoSteps.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Stepper, Step, Card, CardBody, Heading, Text, Button, Link, OpenNewIcon } from '@pancakeswap-libs/uikit';\nimport every from 'lodash/every';\nimport { BASE_ADD_LIQUIDITY_URL } from 'config';\nimport useI18n from 'hooks/useI18n';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport Container from 'components/layout/Container';\nimport { useProfile } from 'state/hooks';\nimport { getAddress } from 'utils/addressHelpers';\nconst Wrapper = styled(Container)`\n  background: ${({\n  theme\n}) => theme.colors.gradients.bubblegum};\n  margin-left: -16px;\n  margin-right: -16px;\n  padding-top: 48px;\n  padding-bottom: 48px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    margin-left: -24px;\n    margin-right: -24px;\n  }\n`;\n_c = Wrapper;\n\nconst IfoSteps = ({\n  currency\n}) => {\n  _s();\n\n  const {\n    hasProfile\n  } = useProfile();\n  const TranslateString = useI18n();\n  const balance = useTokenBalance(getAddress(currency.address));\n  const stepsValidationStatus = [hasProfile, balance.isGreaterThan(0), false, false];\n\n  const getStatusProp = index => {\n    const arePreviousValid = index === 0 ? true : every(stepsValidationStatus.slice(0, index), Boolean);\n\n    if (stepsValidationStatus[index]) {\n      return arePreviousValid ? 'past' : 'future';\n    }\n\n    return arePreviousValid ? 'current' : 'future';\n  };\n\n  const renderCardBody = step => {\n    const isStepValid = stepsValidationStatus[step];\n\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            color: \"secondary\",\n            mb: \"16px\",\n            children: \"Activate your Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            small: true,\n            mb: \"16px\",\n            children: \"You\\u2019ll need an active DBALL Profile to take part in an IFO!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), isStepValid ? /*#__PURE__*/_jsxDEV(Text, {\n            color: \"success\",\n            bold: true,\n            children: TranslateString(999, 'Profile Active!')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            as: Link,\n            href: \"/profile\",\n            children: TranslateString(999, 'Activate you profile')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            color: \"secondary\",\n            mb: \"16px\",\n            children: \"Get DBALL-BNB LP Tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            small: true,\n            children: [\"Stake DBALL and BNB in the liquidity pool to get LP tokens. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 75\n            }, this), \"You\\u2019ll spend them to buy IFO sale tokens.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            as: Link,\n            external: true,\n            href: `${BASE_ADD_LIQUIDITY_URL}/BNB/0xceb2f5e9c7f2d3bcd12a7560d73c56f3396af3f9`,\n            endIcon: /*#__PURE__*/_jsxDEV(OpenNewIcon, {\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 24\n            }, this),\n            mt: \"16px\",\n            children: TranslateString(999, 'Get LP tokens')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            color: \"secondary\",\n            mb: \"16px\",\n            children: \"Commit LP Tokens\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            small: true,\n            children: [\"When the IFO sales are live, you can \\u201Ccommit\\u201D your LP tokens to buy the tokens being sold. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 106\n            }, this), \"We recommend committing to the Basic Sale first, but you can do both if you want.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            as: \"h4\",\n            color: \"secondary\",\n            mb: \"16px\",\n            children: \"Claim your tokens and achievement\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            color: \"textSubtle\",\n            small: true,\n            children: \"After the IFO sales finish, you can claim any IFO tokens that you bought, and any unspent DBALL-BNB LP tokens will be returned to your wallet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h2\",\n      size: \"xl\",\n      color: \"secondary\",\n      mb: \"24px\",\n      textAlign: \"center\",\n      children: TranslateString(999, 'How to Take Part')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      children: stepsValidationStatus.map((_, index) =>\n      /*#__PURE__*/\n      // eslint-disable-next-line react/no-array-index-key\n      _jsxDEV(Step, {\n        index: index,\n        status: getStatusProp(index),\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: renderCardBody(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IfoSteps, \"w3g0ptZzhrk7qnbKMbEFy7WMlHs=\", false, function () {\n  return [useProfile, useI18n, useTokenBalance];\n});\n\n_c2 = IfoSteps;\nexport default IfoSteps;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"IfoSteps\");","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoSteps.tsx"],"names":["React","styled","Stepper","Step","Card","CardBody","Heading","Text","Button","Link","OpenNewIcon","every","BASE_ADD_LIQUIDITY_URL","useI18n","useTokenBalance","Container","useProfile","getAddress","Wrapper","theme","colors","gradients","bubblegum","mediaQueries","sm","IfoSteps","currency","hasProfile","TranslateString","balance","address","stepsValidationStatus","isGreaterThan","getStatusProp","index","arePreviousValid","slice","Boolean","renderCardBody","step","isStepValid","map","_"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  Stepper,\n  Step,\n  StepStatus,\n  Card,\n  CardBody,\n  Heading,\n  Text,\n  Button,\n  Link,\n  OpenNewIcon,\n} from '@pancakeswap-libs/uikit'\nimport every from 'lodash/every'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport useI18n from 'hooks/useI18n'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport Container from 'components/layout/Container'\nimport { useProfile } from 'state/hooks'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface Props {\n  currency: Token\n}\n\nconst Wrapper = styled(Container)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  margin-left: -16px;\n  margin-right: -16px;\n  padding-top: 48px;\n  padding-bottom: 48px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: -24px;\n    margin-right: -24px;\n  }\n`\n\nconst IfoSteps: React.FC<Props> = ({ currency }) => {\n  const { hasProfile } = useProfile()\n  const TranslateString = useI18n()\n  const balance = useTokenBalance(getAddress(currency.address))\n  const stepsValidationStatus = [hasProfile, balance.isGreaterThan(0), false, false]\n\n  const getStatusProp = (index: number): StepStatus => {\n    const arePreviousValid = index === 0 ? true : every(stepsValidationStatus.slice(0, index), Boolean)\n    if (stepsValidationStatus[index]) {\n      return arePreviousValid ? 'past' : 'future'\n    }\n    return arePreviousValid ? 'current' : 'future'\n  }\n\n  const renderCardBody = (step: number) => {\n    const isStepValid = stepsValidationStatus[step]\n    switch (step) {\n      case 0:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              Activate your Profile\n            </Heading>\n            <Text color=\"textSubtle\" small mb=\"16px\">\n              You’ll need an active DBALL Profile to take part in an IFO!\n            </Text>\n            {isStepValid ? (\n              <Text color=\"success\" bold>\n                {TranslateString(999, 'Profile Active!')}\n              </Text>\n            ) : (\n              <Button as={Link} href=\"/profile\">\n                {TranslateString(999, 'Activate you profile')}\n              </Button>\n            )}\n          </CardBody>\n        )\n      case 1:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              Get DBALL-BNB LP Tokens\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              Stake DBALL and BNB in the liquidity pool to get LP tokens. <br />\n              You’ll spend them to buy IFO sale tokens.\n            </Text>\n            <Button\n              as={Link}\n              external\n              href={`${BASE_ADD_LIQUIDITY_URL}/BNB/0xceb2f5e9c7f2d3bcd12a7560d73c56f3396af3f9`}\n              endIcon={<OpenNewIcon color=\"white\" />}\n              mt=\"16px\"\n            >\n              {TranslateString(999, 'Get LP tokens')}\n            </Button>\n          </CardBody>\n        )\n      case 2:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              Commit LP Tokens\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              When the IFO sales are live, you can “commit” your LP tokens to buy the tokens being sold. <br />\n              We recommend committing to the Basic Sale first, but you can do both if you want.\n            </Text>\n          </CardBody>\n        )\n      case 3:\n        return (\n          <CardBody>\n            <Heading as=\"h4\" color=\"secondary\" mb=\"16px\">\n              Claim your tokens and achievement\n            </Heading>\n            <Text color=\"textSubtle\" small>\n              After the IFO sales finish, you can claim any IFO tokens that you bought, and any unspent DBALL-BNB LP\n              tokens will be returned to your wallet.\n            </Text>\n          </CardBody>\n        )\n      default:\n        return null\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Heading as=\"h2\" size=\"xl\" color=\"secondary\" mb=\"24px\" textAlign=\"center\">\n        {TranslateString(999, 'How to Take Part')}\n      </Heading>\n      <Stepper>\n        {stepsValidationStatus.map((_, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Step key={index} index={index} status={getStatusProp(index)}>\n            <Card>{renderCardBody(index)}</Card>\n          </Step>\n        ))}\n      </Stepper>\n    </Wrapper>\n  )\n}\n\nexport default IfoSteps\n"]},"metadata":{},"sourceType":"module"}