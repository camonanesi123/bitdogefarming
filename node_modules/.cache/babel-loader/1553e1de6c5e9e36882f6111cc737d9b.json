{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"D:/task159/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Button,useModal}from'@pancakeswap-libs/uikit';import{getBalanceNumber}from'utils/formatBalance';import useI18n from'hooks/useI18n';import useTokenBalance from'hooks/useTokenBalance';import{getAddress}from'utils/addressHelpers';import{useToast}from'state/hooks';import ContributeModal from'./ContributeModal';import GetLpModal from'./GetLpModal';var ContributeButton=function ContributeButton(_ref){var poolId=_ref.poolId,ifo=_ref.ifo,publicIfoData=_ref.publicIfoData,walletIfoData=_ref.walletIfoData;var publicPoolCharacteristics=publicIfoData[poolId];var userPoolCharacteristics=walletIfoData[poolId];var isPendingTx=userPoolCharacteristics.isPendingTx,amountTokenCommittedInLP=userPoolCharacteristics.amountTokenCommittedInLP;var limitPerUserInLP=publicPoolCharacteristics.limitPerUserInLP;var TranslateString=useI18n();var _useToast=useToast(),toastSuccess=_useToast.toastSuccess;var userCurrencyBalance=useTokenBalance(getAddress(ifo.currency.address));var handleContributeSuccess=function handleContributeSuccess(amount){toastSuccess('Success!',\"You have contributed \".concat(getBalanceNumber(amount),\" DBALL-BNB LP tokens to this IFO!\"));walletIfoData.addUserContributedAmount(amount,poolId);};var _useModal=useModal(/*#__PURE__*/_jsx(ContributeModal,{poolId:poolId,ifo:ifo,publicIfoData:publicIfoData,walletIfoData:walletIfoData,onSuccess:handleContributeSuccess,userCurrencyBalance:userCurrencyBalance}),false),_useModal2=_slicedToArray(_useModal,1),onPresentContributeModal=_useModal2[0];var _useModal3=useModal(/*#__PURE__*/_jsx(GetLpModal,{currency:ifo.currency}),false),_useModal4=_slicedToArray(_useModal3,1),onPresentGetLpModal=_useModal4[0];var isDisabled=isPendingTx||limitPerUserInLP.isGreaterThan(0)&&amountTokenCommittedInLP.isGreaterThanOrEqualTo(limitPerUserInLP);return/*#__PURE__*/_jsx(Button,{onClick:userCurrencyBalance.isEqualTo(0)?onPresentGetLpModal:onPresentContributeModal,width:\"100%\",disabled:isDisabled,children:isDisabled?TranslateString(999,'Max. Committed'):TranslateString(999,'Commit LP Tokens')});};export default ContributeButton;","map":{"version":3,"sources":["D:/task159/frontend/src/views/Ifos/components/IfoFoldableCard/IfoPoolCard/ContributeButton.tsx"],"names":["React","Button","useModal","getBalanceNumber","useI18n","useTokenBalance","getAddress","useToast","ContributeModal","GetLpModal","ContributeButton","poolId","ifo","publicIfoData","walletIfoData","publicPoolCharacteristics","userPoolCharacteristics","isPendingTx","amountTokenCommittedInLP","limitPerUserInLP","TranslateString","toastSuccess","userCurrencyBalance","currency","address","handleContributeSuccess","amount","addUserContributedAmount","onPresentContributeModal","onPresentGetLpModal","isDisabled","isGreaterThan","isGreaterThanOrEqualTo","isEqualTo"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,QAAjB,KAAiC,yBAAjC,CAEA,OAASC,gBAAT,KAAiC,qBAAjC,CAGA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CACA,OAASC,UAAT,KAA2B,sBAA3B,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAQA,GAAMC,CAAAA,gBAAiC,CAAG,QAApCA,CAAAA,gBAAoC,MAAmD,IAAhDC,CAAAA,MAAgD,MAAhDA,MAAgD,CAAxCC,GAAwC,MAAxCA,GAAwC,CAAnCC,aAAmC,MAAnCA,aAAmC,CAApBC,aAAoB,MAApBA,aAAoB,CAC3F,GAAMC,CAAAA,yBAAyB,CAAGF,aAAa,CAACF,MAAD,CAA/C,CACA,GAAMK,CAAAA,uBAAuB,CAAGF,aAAa,CAACH,MAAD,CAA7C,CAF2F,GAGnFM,CAAAA,WAHmF,CAGzCD,uBAHyC,CAGnFC,WAHmF,CAGtEC,wBAHsE,CAGzCF,uBAHyC,CAGtEE,wBAHsE,IAInFC,CAAAA,gBAJmF,CAI9DJ,yBAJ8D,CAInFI,gBAJmF,CAK3F,GAAMC,CAAAA,eAAe,CAAGhB,OAAO,EAA/B,CAL2F,cAMlEG,QAAQ,EAN0D,CAMnFc,YANmF,WAMnFA,YANmF,CAO3F,GAAMC,CAAAA,mBAAmB,CAAGjB,eAAe,CAACC,UAAU,CAACM,GAAG,CAACW,QAAJ,CAAaC,OAAd,CAAX,CAA3C,CAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,MAAD,CAAuB,CACrDL,YAAY,CAAC,UAAD,gCAAqClB,gBAAgB,CAACuB,MAAD,CAArD,sCAAZ,CACAZ,aAAa,CAACa,wBAAd,CAAuCD,MAAvC,CAA+Cf,MAA/C,EACD,CAHD,CAT2F,cAcxDT,QAAQ,cACzC,KAAC,eAAD,EACE,MAAM,CAAES,MADV,CAEE,GAAG,CAAEC,GAFP,CAGE,aAAa,CAAEC,aAHjB,CAIE,aAAa,CAAEC,aAJjB,CAKE,SAAS,CAAEW,uBALb,CAME,mBAAmB,CAAEH,mBANvB,EADyC,CASzC,KATyC,CAdgD,wCAcpFM,wBAdoF,8BA0B7D1B,QAAQ,cAAC,KAAC,UAAD,EAAY,QAAQ,CAAEU,GAAG,CAACW,QAA1B,EAAD,CAAyC,KAAzC,CA1BqD,yCA0BpFM,mBA1BoF,eA4B3F,GAAMC,CAAAA,UAAU,CACdb,WAAW,EACVE,gBAAgB,CAACY,aAAjB,CAA+B,CAA/B,GAAqCb,wBAAwB,CAACc,sBAAzB,CAAgDb,gBAAhD,CAFxC,CAIA,mBACE,KAAC,MAAD,EACE,OAAO,CAAEG,mBAAmB,CAACW,SAApB,CAA8B,CAA9B,EAAmCJ,mBAAnC,CAAyDD,wBADpE,CAEE,KAAK,CAAC,MAFR,CAGE,QAAQ,CAAEE,UAHZ,UAKGA,UAAU,CAAGV,eAAe,CAAC,GAAD,CAAM,gBAAN,CAAlB,CAA4CA,eAAe,CAAC,GAAD,CAAM,kBAAN,CALxE,EADF,CASD,CAzCD,CA2CA,cAAeV,CAAAA,gBAAf","sourcesContent":["import React from 'react'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { WalletIfoData, PublicIfoData } from 'hooks/ifo/types'\nimport useI18n from 'hooks/useI18n'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useToast } from 'state/hooks'\nimport ContributeModal from './ContributeModal'\nimport GetLpModal from './GetLpModal'\n\ninterface Props {\n  poolId: PoolIds\n  ifo: Ifo\n  publicIfoData: PublicIfoData\n  walletIfoData: WalletIfoData\n}\nconst ContributeButton: React.FC<Props> = ({ poolId, ifo, publicIfoData, walletIfoData }) => {\n  const publicPoolCharacteristics = publicIfoData[poolId]\n  const userPoolCharacteristics = walletIfoData[poolId]\n  const { isPendingTx, amountTokenCommittedInLP } = userPoolCharacteristics\n  const { limitPerUserInLP } = publicPoolCharacteristics\n  const TranslateString = useI18n()\n  const { toastSuccess } = useToast()\n  const userCurrencyBalance = useTokenBalance(getAddress(ifo.currency.address))\n\n  const handleContributeSuccess = (amount: BigNumber) => {\n    toastSuccess('Success!', `You have contributed ${getBalanceNumber(amount)} DBALL-BNB LP tokens to this IFO!`)\n    walletIfoData.addUserContributedAmount(amount, poolId)\n  }\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal\n      poolId={poolId}\n      ifo={ifo}\n      publicIfoData={publicIfoData}\n      walletIfoData={walletIfoData}\n      onSuccess={handleContributeSuccess}\n      userCurrencyBalance={userCurrencyBalance}\n    />,\n    false,\n  )\n\n  const [onPresentGetLpModal] = useModal(<GetLpModal currency={ifo.currency} />, false)\n\n  const isDisabled =\n    isPendingTx ||\n    (limitPerUserInLP.isGreaterThan(0) && amountTokenCommittedInLP.isGreaterThanOrEqualTo(limitPerUserInLP))\n\n  return (\n    <Button\n      onClick={userCurrencyBalance.isEqualTo(0) ? onPresentGetLpModal : onPresentContributeModal}\n      width=\"100%\"\n      disabled={isDisabled}\n    >\n      {isDisabled ? TranslateString(999, 'Max. Committed') : TranslateString(999, 'Commit LP Tokens')}\n    </Button>\n  )\n}\n\nexport default ContributeButton\n"]},"metadata":{},"sourceType":"module"}