{"ast":null,"code":"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit';\nimport farms3Config from 'config/constants/farms3';\nimport fetchFarms3 from './fetchFarms3';\nimport { fetchFarm3UserEarnings, fetchFarm3UserAllowances, fetchFarm3UserTokenBalances, fetchFarm3UserStakedBalances } from './fetchFarmUser3';\nconst initialState = {\n  data: [...farms3Config]\n};\nexport const farms3Slice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarms3PublicData: (state, action) => {\n      const liveFarmsData = action.payload;\n      state.data = state.data.map(farm => {\n        const liveFarmData = liveFarmsData.find(f => f.pid === farm.pid);\n        return { ...farm,\n          ...liveFarmData\n        };\n      });\n    },\n    setFarm3UserData: (state, action) => {\n      const {\n        arrayOfUserDataObjects\n      } = action.payload;\n      arrayOfUserDataObjects.forEach(userDataEl => {\n        const {\n          index\n        } = userDataEl;\n        state.data[index] = { ...state.data[index],\n          userData: userDataEl\n        };\n      });\n    }\n  }\n}); // Actions\n\nexport const {\n  setFarms3PublicData,\n  setFarm3UserData\n} = farms3Slice.actions; // Thunks\n\nexport const fetchFarms3PublicDataAsync = () => async dispatch => {\n  const farms3 = await fetchFarms3();\n  dispatch(setFarms3PublicData(farms3));\n};\nexport const fetchFarm3UserDataAsync = account => async dispatch => {\n  const userFarm3Allowances = await fetchFarm3UserAllowances(account);\n  const userFarm3TokenBalances = await fetchFarm3UserTokenBalances(account);\n  const userStakedBalances3 = await fetchFarm3UserStakedBalances(account);\n  const userFarm3Earnings = await fetchFarm3UserEarnings(account);\n  const arrayOfUserDataObjects = userFarm3Allowances.map((farm3Allowance, index) => {\n    return {\n      index,\n      allowance: userFarm3Allowances[index],\n      tokenBalance: userFarm3TokenBalances[index],\n      stakedBalance: userStakedBalances3[index],\n      earnings: userFarm3Earnings[index]\n    };\n  });\n  dispatch(setFarm3UserData({\n    arrayOfUserDataObjects\n  }));\n};\nexport default farms3Slice.reducer;","map":{"version":3,"sources":["C:/Users/hexia/Desktop/pancake_fork/frontend/src/state/farms3/index.ts"],"names":["createSlice","farms3Config","fetchFarms3","fetchFarm3UserEarnings","fetchFarm3UserAllowances","fetchFarm3UserTokenBalances","fetchFarm3UserStakedBalances","initialState","data","farms3Slice","name","reducers","setFarms3PublicData","state","action","liveFarmsData","payload","map","farm","liveFarmData","find","f","pid","setFarm3UserData","arrayOfUserDataObjects","forEach","userDataEl","index","userData","actions","fetchFarms3PublicDataAsync","dispatch","farms3","fetchFarm3UserDataAsync","account","userFarm3Allowances","userFarm3TokenBalances","userStakedBalances3","userFarm3Earnings","farm3Allowance","allowance","tokenBalance","stakedBalance","earnings","reducer"],"mappings":"AAAA;AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACEC,sBADF,EAEEC,wBAFF,EAGEC,2BAHF,EAIEC,4BAJF,QAKO,kBALP;AAQA,MAAMC,YAAyB,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAC,GAAGP,YAAJ;AAAR,CAAlC;AAEA,OAAO,MAAMQ,WAAW,GAAGT,WAAW,CAAC;AACrCU,EAAAA,IAAI,EAAE,OAD+B;AAErCH,EAAAA,YAFqC;AAGrCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,mBAAmB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,YAAMC,aAAsB,GAAGD,MAAM,CAACE,OAAtC;AACAH,MAAAA,KAAK,CAACL,IAAN,GAAaK,KAAK,CAACL,IAAN,CAAWS,GAAX,CAAgBC,IAAD,IAAU;AACpC,cAAMC,YAAY,GAAGJ,aAAa,CAACK,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUJ,IAAI,CAACI,GAAzC,CAArB;AACA,eAAO,EAAE,GAAGJ,IAAL;AAAW,aAAGC;AAAd,SAAP;AACD,OAHY,CAAb;AAID,KAPO;AAQRI,IAAAA,gBAAgB,EAAE,CAACV,KAAD,EAAQC,MAAR,KAAmB;AACnC,YAAM;AAAEU,QAAAA;AAAF,UAA6BV,MAAM,CAACE,OAA1C;AACAQ,MAAAA,sBAAsB,CAACC,OAAvB,CAAgCC,UAAD,IAAgB;AAC7C,cAAM;AAAEC,UAAAA;AAAF,YAAYD,UAAlB;AACAb,QAAAA,KAAK,CAACL,IAAN,CAAWmB,KAAX,IAAoB,EAAE,GAAGd,KAAK,CAACL,IAAN,CAAWmB,KAAX,CAAL;AAAwBC,UAAAA,QAAQ,EAAEF;AAAlC,SAApB;AACD,OAHD;AAID;AAdO;AAH2B,CAAD,CAA/B,C,CAqBP;;AACA,OAAO,MAAM;AAAEd,EAAAA,mBAAF;AAAuBW,EAAAA;AAAvB,IAA4Cd,WAAW,CAACoB,OAA9D,C,CAEP;;AACA,OAAO,MAAMC,0BAA0B,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAClE,QAAMC,MAAM,GAAG,MAAM9B,WAAW,EAAhC;AACA6B,EAAAA,QAAQ,CAACnB,mBAAmB,CAACoB,MAAD,CAApB,CAAR;AACD,CAHM;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,OAAD,IAAa,MAAOH,QAAP,IAAoB;AACtE,QAAMI,mBAAmB,GAAG,MAAM/B,wBAAwB,CAAC8B,OAAD,CAA1D;AACA,QAAME,sBAAsB,GAAG,MAAM/B,2BAA2B,CAAC6B,OAAD,CAAhE;AACA,QAAMG,mBAAmB,GAAG,MAAM/B,4BAA4B,CAAC4B,OAAD,CAA9D;AACA,QAAMI,iBAAiB,GAAG,MAAMnC,sBAAsB,CAAC+B,OAAD,CAAtD;AAEA,QAAMV,sBAAsB,GAAGW,mBAAmB,CAAClB,GAApB,CAAwB,CAACsB,cAAD,EAAiBZ,KAAjB,KAA2B;AAChF,WAAO;AACLA,MAAAA,KADK;AAELa,MAAAA,SAAS,EAAEL,mBAAmB,CAACR,KAAD,CAFzB;AAGLc,MAAAA,YAAY,EAAEL,sBAAsB,CAACT,KAAD,CAH/B;AAILe,MAAAA,aAAa,EAAEL,mBAAmB,CAACV,KAAD,CAJ7B;AAKLgB,MAAAA,QAAQ,EAAEL,iBAAiB,CAACX,KAAD;AALtB,KAAP;AAOD,GAR8B,CAA/B;AAUAI,EAAAA,QAAQ,CAACR,gBAAgB,CAAC;AAAEC,IAAAA;AAAF,GAAD,CAAjB,CAAR;AACD,CAjBM;AAmBP,eAAef,WAAW,CAACmC,OAA3B","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farms3Config from 'config/constants/farms3'\nimport fetchFarms3 from './fetchFarms3'\nimport {\n  fetchFarm3UserEarnings,\n  fetchFarm3UserAllowances,\n  fetchFarm3UserTokenBalances,\n  fetchFarm3UserStakedBalances,\n} from './fetchFarmUser3'\nimport { Farms3State, Farm3 } from '../types'\n\nconst initialState: Farms3State = { data: [...farms3Config] }\n\nexport const farms3Slice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarms3PublicData: (state, action) => {\n      const liveFarmsData: Farm3[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarm3UserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarms3PublicData, setFarm3UserData } = farms3Slice.actions\n\n// Thunks\nexport const fetchFarms3PublicDataAsync = () => async (dispatch) => {\n  const farms3 = await fetchFarms3()\n  dispatch(setFarms3PublicData(farms3))\n}\nexport const fetchFarm3UserDataAsync = (account) => async (dispatch) => {\n  const userFarm3Allowances = await fetchFarm3UserAllowances(account)\n  const userFarm3TokenBalances = await fetchFarm3UserTokenBalances(account)\n  const userStakedBalances3 = await fetchFarm3UserStakedBalances(account)\n  const userFarm3Earnings = await fetchFarm3UserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarm3Allowances.map((farm3Allowance, index) => {\n    return {\n      index,\n      allowance: userFarm3Allowances[index],\n      tokenBalance: userFarm3TokenBalances[index],\n      stakedBalance: userStakedBalances3[index],\n      earnings: userFarm3Earnings[index],\n    }\n  })\n\n  dispatch(setFarm3UserData({ arrayOfUserDataObjects }))\n}\n\nexport default farms3Slice.reducer\n"]},"metadata":{},"sourceType":"module"}